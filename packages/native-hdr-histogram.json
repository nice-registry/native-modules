{"name":"native-hdr-histogram","version":"0.4.6","description":"node.js bindings for hdr histogram C implementation","main":"histogram.js","gypfile":"true","scripts":{"prepublish":"npm ls","install":"node-pre-gyp install --fallback-to-build","test":"node-pre-gyp install --fallback-to-build && standard && tap test.js"},"precommit":["test"],"repository":"https://github.com/mcollina/native-hdr-histogram","keywords":["hdr","histogram","native"],"license":"MIT","homepage":"https://github.com/mcollina/native-hdr-histogram#readme","devDependencies":{"aws-sdk":"2.x","pre-commit":"^1.1.2","standard":"^6.0.7","tap":"^5.7.0"},"binary":{"module_name":"histogram","module_path":"./lib/binding/{node_abi}-{platform}-{arch}","remote_path":"./{name}/v{version}/{toolset}/","package_name":"{node_abi}-{platform}-{arch}.tar.gz","host":"https://autocannon-assets.s3-eu-west-1.amazonaws.com"},"dependencies":{"nan":"^2.3.0","node-pre-gyp":"0.6.x"},"gitHead":"dc4c97975494116bc9e0d8939197d6c5a3279a9e","versions":[{"number":"0.0.1","date":"2016-02-29T09:05:21.608Z"},{"number":"0.1.0","date":"2016-02-29T09:46:24.647Z"},{"number":"0.1.1","date":"2016-03-31T17:22:10.938Z"},{"number":"0.2.0","date":"2016-04-07T15:44:05.990Z"},{"number":"0.2.1","date":"2016-06-01T13:21:56.348Z"},{"number":"0.3.0-pre2","date":"2016-06-29T14:49:02.095Z"},{"number":"0.3.0","date":"2016-06-29T15:14:19.005Z"},{"number":"0.3.1","date":"2016-07-01T12:33:32.915Z"},{"number":"0.3.2","date":"2016-07-01T21:57:55.818Z"},{"number":"0.3.3","date":"2016-07-27T00:33:34.092Z"},{"number":"0.3.4","date":"2016-08-16T21:16:22.982Z"},{"number":"0.3.5","date":"2016-08-17T08:26:55.004Z"},{"number":"0.3.6","date":"2016-11-06T20:52:02.078Z"},{"number":"0.4.0","date":"2016-11-06T20:52:37.842Z"},{"number":"0.4.1","date":"2016-11-11T14:44:23.975Z"},{"number":"0.4.2","date":"2016-12-09T15:51:47.399Z"},{"number":"0.4.3","date":"2016-12-10T20:59:37.166Z"},{"number":"0.4.4","date":"2016-12-12T13:53:53.537Z"},{"number":"0.4.6","date":"2017-06-02T08:20:10.360Z"}],"readme":"# native-hdr-histogram\n\nnode.js bindings for [hdr histogram][hdr] [C implementation][cimpl](version 0.9.3).\n\n[![Build status](https://ci.appveyor.com/api/projects/status/tgu1of6olrg64so4?svg=true)](https://ci.appveyor.com/project/mcollina/native-hdr-histogram)\n[![Build Status](https://travis-ci.org/mcollina/native-hdr-histogram.svg?branch=master)](https://travis-ci.org/mcollina/native-hdr-histogram)\n\n> HDR Histogram is designed for recoding histograms of value measurements\nin latency and performance sensitive applications. Measurements show\nvalue recording times as low as 3-6 nanoseconds on modern (circa 2014)\nIntel CPUs. A Histogram's memory footprint is constant, with no\nallocation operations involved in recording data values or in iterating through them.\n- from [hdr histogram][hdr] website\n\nThis library is blazingly fast, and you can use it to record\nhistograms with no overhead. Linux, Mac OS X and Windows are all\nsupported.\n\n  * <a href=\"#install\">Installation</a>\n  * <a href=\"#example\">Example</a>\n  * <a href=\"#api\">API</a>\n  * <a href=\"#licence\">Licence &amp; copyright</a>\n\n## Install\n\n```\nnpm i native-hdr-histogram --save\n```\n\nIf you see any errors, you might need to configure your system to compile native addons:\nfollow the instructions at [node-gyp][node-gyp].\n\n## Example\n\n```js\n'use strict'\n\nconst Histogram = require('native-hdr-histogram')\nconst max = 1000000\nconst key = 'record*' + max\nconst histogram = new Histogram(1, 100)\n\nconsole.time(key)\nfor (let i = 0; i < max; i++) {\n  histogram.record(Math.floor((Math.random() * 42 + 1)))\n}\nconsole.timeEnd(key)\n\nconsole.log('80 percentile is', histogram.percentile(80))\nconsole.log('99 percentile is', histogram.percentile(99))\n\nconsole.log(histogram.percentiles())\n```\n\n## API\n\n  * <a href=\"#histogram\"><code>Histogram</code></a>\n  * <a href=\"#record\"><code>histogram#<b>record()</b></code></a>\n  * <a href=\"#min\"><code>histogram#<b>min()</b></code></a>\n  * <a href=\"#max\"><code>histogram#<b>max()</b></code></a>\n  * <a href=\"#mean\"><code>histogram#<b>mean()</b></code></a>\n  * <a href=\"#stddev\"><code>histogram#<b>stddev()</b></code></a>\n  * <a href=\"#percentile\"><code>histogram#<b>percentile()</b></code></a>\n  * <a href=\"#percentiles\"><code>histogram#<b>percentiles()</b></code></a>\n  * <a href=\"#encode\"><code>histogram#<b>encode()</b></code></a>\n  * <a href=\"#decode\"><code>histogram#<b>decode()</b></code></a>\n  * <a href=\"#reset\"><code>histogram#<b>reset()</b></code></a>\n\n-------------------------------------------------------\n<a name=\"histogram\"></a>\n\n### Histogram(lowest, max, figures)\n\nCreate a new histogram with:\n\n* `lowest`: is the lowest possible number that can be recorded (default\n  1).\n* `max`: is the maximum number that can be recorded (default 100).\n* `figures`: the number of figures in a decimal number that will be\n  maintained, must be between 1 and 5 (inclusive) (default 3).\n\n-------------------------------------------------------\n<a name=\"record\"></a>\n\n### histogram.record(value)\n\nRecord `value` in the histogram. Returns `true` if the recording was\nsuccessful, `false` otherwise.\n\n-------------------------------------------------------\n<a name=\"min\"></a>\n\n### histogram.min()\n\nReturn the minimum value recorded in the histogram.\n\n-------------------------------------------------------\n<a name=\"max\"></a>\n\n### histogram.max()\n\nReturn the maximum value recorded in the histogram.\n\n-------------------------------------------------------\n<a name=\"mean\"></a>\n\n### histogram.mean()\n\nReturn the mean of the histogram.\n\n-------------------------------------------------------\n<a name=\"stddev\"></a>\n\n### histogram.stddev()\n\nReturn the standard deviation of the histogram.\n\n-------------------------------------------------------\n<a name=\"percentile\"></a>\n\n### histogram.percentile(percentile)\n\nReturns the value at the given percentile. `percentile`Â must be >\n0 and <= 100, otherwise it will throw.\n\n-------------------------------------------------------\n<a name=\"percentiles\"></a>\n\n### histogram.percentiles()\n\nReturns all the percentiles.\n\nSample output:\n\n```js\n[ { percentile: 0, value: 1 },\n  { percentile: 50, value: 22 },\n  { percentile: 75, value: 32 },\n  { percentile: 87.5, value: 37 },\n  { percentile: 93.75, value: 40 },\n  { percentile: 96.875, value: 41 },\n  { percentile: 98.4375, value: 42 },\n  { percentile: 100, value: 42 } ]\n```\n\n-------------------------------------------------------\n<a name=\"encode\"></a>\n\n### histogram.encode()\n\nReturns a `Buffer` containing a serialized version of the histogram\n\n-------------------------------------------------------\n<a name=\"decode\"></a>\n\n### histogram.decode(buf)\n\nReads a `Buffer` and deserialize an histogram.\n\n-------------------------------------------------------\n<a name=\"reset\"></a>\n\n### histogram.reset()\n\nResets the histogram so it can be reused.\n\n## Acknowledgements\n\nThis project was kindly sponsored by [nearForm](http://nearform.com).\n\nThe pre-compilation work of this project is only possible because of [mapbox's][mapbox]\namazing work on [node-pre-gyp][node-pre-gyp]. A lot of the functionality enabled\nis following the example set by their [node-sqlite3 library][sqlite3].\n\n## License\n\nThis library is licensed as MIT\n\nHdrHistogram_c is licensed as [BSD license][HdrHistogram_c-license]\n\nzlib is licensed as [zlib License][zlib-license]\n\nThe scripts used in the scripts folder are modified [BSD licensed][sqlite3-scripts-license] scripts from the [node-sqlite3][sqlite3] libary.\n\n[hdr]: http://hdrhistogram.org/\n[cimpl]: https://github.com/HdrHistogram/HdrHistogram_c\n[node-gyp]: https://github.com/nodejs/node-gyp#installation\n[mapbox]: http://mapbox.com\n[node-pre-gyp]: https://github.com/mapbox/node-pre-gyp\n[sqlite3]: https://github.com/mapbox/node-sqlite3\n[HdrHistogram_c-license]: https://github.com/HdrHistogram/HdrHistogram_c/blob/master/LICENSE.txt\n[sqlite3-scripts-license]: https://github.com/mapbox/node-sqlite3/blob/master/LICENSE\n[zlib-license]: http://www.zlib.net/zlib_license.html\n","starsCount":1,"created":"2016-02-29T09:05:21.608Z","modified":"2017-06-02T08:20:10.360Z","lastPublisher":{"name":"thekemkid","email":"glenkeane.94@gmail.com"},"owners":[{"name":"matteo.collina","email":"hello@matteocollina.com"}],"other":{"_attachments":{},"_id":"native-hdr-histogram","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/native-hdr-histogram-0.4.6.tgz_1496391609034_0.08621893054805696"},"_npmUser":{"name":"thekemkid","email":"glenkeane.94@gmail.com"},"_npmVersion":"5.0.0","_rev":"8-34c7eeb882b92aef3c289f3d090533cf","author":{"name":"Matteo Collina","email":"hello@matteocollina.com"},"bugs":{"url":"https://github.com/mcollina/native-hdr-histogram/issues"},"contributors":[{"name":"Glen Keane","email":"glenkeane.94@gmail.com","url":"http://glenkeane.me/"}],"directories":{},"dist-tags":{"latest":"0.4.6"},"dist":{"integrity":"sha512-D32Vsp18OGkLZJe5F+Nid6bPlEmOM005lw4C9B5X18S0eSz/A8T3yDDnnccX7VZqV0ZM2YZWE0TnaWG4E+roIg==","shasum":"5f05594be40450f782d40caf87844cb52e9c4c70","tarball":"https://registry.npmjs.org/native-hdr-histogram/-/native-hdr-histogram-0.4.6.tgz"},"maintainers":[{"name":"matteo.collina","email":"hello@matteocollina.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-02T08:20:10.360Z","created":"2016-02-29T09:05:21.608Z","0.0.1":"2016-02-29T09:05:21.608Z","0.1.0":"2016-02-29T09:46:24.647Z","0.1.1":"2016-03-31T17:22:10.938Z","0.2.0":"2016-04-07T15:44:05.990Z","0.2.1":"2016-06-01T13:21:56.348Z","0.3.0-pre2":"2016-06-29T14:49:02.095Z","0.3.0":"2016-06-29T15:14:19.005Z","0.3.1":"2016-07-01T12:33:32.915Z","0.3.2":"2016-07-01T21:57:55.818Z","0.3.3":"2016-07-27T00:33:34.092Z","0.3.4":"2016-08-16T21:16:22.982Z","0.3.5":"2016-08-17T08:26:55.004Z","0.3.6":"2016-11-06T20:52:02.078Z","0.4.0":"2016-11-06T20:52:37.842Z","0.4.1":"2016-11-11T14:44:23.975Z","0.4.2":"2016-12-09T15:51:47.399Z","0.4.3":"2016-12-10T20:59:37.166Z","0.4.4":"2016-12-12T13:53:53.537Z","0.4.6":"2017-06-02T08:20:10.360Z"},"users":{"shanewholloway":true}}}