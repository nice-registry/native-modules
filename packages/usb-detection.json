{"name":"usb-detection","version":"1.4.0","description":"Listen to USB devices and detect changes on them.","main":"index.js","gypfile":true,"scripts":{"test":"mocha --timeout 10000","postinstall":"node-gyp rebuild","install":"node-gyp rebuild"},"repository":"https://github.com/MadLittleMods/node-usb-detection","keywords":["usb","device","hardware","list","insert","add","remove","change","plug","unplug","notification"],"homepage":"https://github.com/MadLittleMods/node-usb-detection","license":{"type":"MIT","url":"https://raw.github.com/MadLittleMods/node-usb-detection/master/licence"},"dependencies":{"bindings":"1.1.0","bluebird":"^2.9.27","eventemitter2":">=0.4.11","nan":"^2.2.0"},"devDependencies":{"chai":"^3.0.0","chai-as-promised":"^5.1.0","chalk":"^1.0.0","mocha":"^2.2.5"},"gitHead":"b14b9965c7e2ef033582a75f180f8dc08cf1ca19","versions":[{"number":"1.0.0","date":"2013-06-18T11:53:43.776Z"},{"number":"1.0.1","date":"2013-07-22T09:45:54.067Z"},{"number":"1.0.2","date":"2013-07-29T06:21:18.640Z"},{"number":"1.0.3","date":"2013-09-05T05:40:52.198Z"},{"number":"1.1.0","date":"2015-05-31T05:53:12.482Z"},{"number":"1.2.0","date":"2015-08-07T11:41:59.733Z"},{"number":"1.3.0","date":"2015-10-12T01:52:54.244Z"},{"number":"1.4.0","date":"2016-03-21T01:05:00.572Z"}],"readme":"[![npm version](https://badge.fury.io/js/usb-detection.svg)](http://badge.fury.io/js/usb-detection)\r\n\r\n\r\n# usb-detection\r\n\r\n`usb-detection` allows you to listen for insert/remove events of USB devices on your system.\r\n\r\n\r\n### [Changelog](https://github.com/MadLittleMods/node-usb-detection/blob/master/CHANGELOG.md)\r\n\r\n\r\n# Install\r\n\r\n```\r\nnpm install usb-detection\r\n```\r\n\r\nThis assumes you also have everything on your system necessary to compile ANY native module for Node.js. This may not be the case, though, so please ensure the following requirements are satisfied before filing an issue about \"Does not install\". For all operating systems, please ensure you have Python 2.x installed AND not 3.0, [node-gyp](https://github.com/TooTallNate/node-gyp) (what we use to compile) requires Python 2.x.\r\n\r\n### Windows:\r\n\r\n - Visual Studio 2013 Community\r\n - Visual Studio 2010\r\n - Visual C++ Build Tools 2015: https://github.com/nodejs/node-gyp/issues/629#issuecomment-153196245\r\n\r\nIf you are having problems building, [please read this](https://github.com/TooTallNate/node-gyp/issues/44).\r\n\r\n### Mac OS X:\r\n\r\nEnsure that you have at a minimum, the xCode Command Line Tools installed appropriate for your system configuration. If you recently upgraded your OS, it probably removed your installation of Command Line Tools, please verify before submitting a ticket.\r\n\r\n### Linux:\r\n\r\nYou know what you need for you system, basically your appropriate analog of build-essential. Keep rocking!\r\n\r\nTo compile and install native addons from npm you may also need to install build tools *([source](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#debian-and-ubuntu-based-linux-distributions))*:\r\n\r\n```\r\nsudo apt-get install -y build-essential\r\n```\r\n\r\nAlso install libudev:\r\n\r\n```\r\nsudo apt-get install libudev-dev\r\n```\r\n\r\n\r\n# Usage\r\n\r\n```js\r\nvar usbDetect = require('usb-detection');\r\n\r\n// Detect add/insert\r\nusbDetect.on('add', function(device) { console.log('add', device); });\r\nusbDetect.on('add:vid', function(device) { console.log('add', device); });\r\nusbDetect.on('add:vid:pid', function(device) { console.log('add', device); });\r\n\r\n// Detect remove\r\nusbDetect.on('remove', function(device) { console.log('remove', device); });\r\nusbDetect.on('remove:vid', function(device) { console.log('remove', device); });\r\nusbDetect.on('remove:vid:pid', function(device) { console.log('remove', device); });\r\n\r\n// Detect add or remove (change)\r\nusbDetect.on('change', function(device) { console.log('change', device); });\r\nusbDetect.on('change:vid', function(device) { console.log('change', device); });\r\nusbDetect.on('change:vid:pid', function(device) { console.log('change', device); });\r\n\r\n// Get a list of USB devices on your system, optionally filtered by `vid` or `pid`\r\nusbDetect.find(function(err, devices) { console.log('find', devices, err); });\r\nusbDetect.find(vid, function(err, devices) { console.log('find', devices, err); });\r\nusbDetect.find(vid, pid, function(err, devices) { console.log('find', devices, err); });\r\n// Promise version of `find`:\r\nusbDetect.find().then(function(devices) { console.log(devices); }).catch(function(err) { console.log(err); });\r\n```\r\n\r\n\r\n# API\r\n\r\n## `on(eventName, callback)`\r\n\r\n - `eventName`\r\n \t - `add`: also aliased as `insert`\r\n \t \t - `add:vid`\r\n \t \t - `add:vid:pid`\r\n \t - `remove`\r\n \t \t - `remove:vid`\r\n \t \t - `remove:vid:pid`\r\n \t - `change`\r\n \t \t - `change:vid`\r\n \t \t - `change:vid:pid`\r\n - `callback`: Function that is called whenever the event occurs\r\n \t - Takes a `device`\r\n\r\n\r\n```js\r\nvar usbDetect = require('usb-detection');\r\nusbDetect.on('add', function(device) {\r\n\tconsole.log(device);\r\n});\r\n\r\n/* Console output:\r\n{\r\n\tlocationId: 0,\r\n\tvendorId: 5824,\r\n\tproductId: 1155,\r\n\tdeviceName: 'Teensy USB Serial (COM3)',\r\n\tmanufacturer: 'PJRC.COM, LLC.',\r\n\tserialNumber: '',\r\n\tdeviceAddress: 11\r\n}\r\n*/\r\n```\r\n\r\n\r\n## `find(vid, pid, callback)`\r\n\r\n**Note:** All `find` calls return a promise even with the node-style callback flavors.\r\n\r\n - `find()`\r\n - `find(vid)`\r\n - `find(vid, pid)`\r\n - `find(callback)`\r\n - `find(vid, callback)`\r\n - `find(vid, pid, callback)`\r\n\r\nParameters:\r\n\r\n - `vid`: restrict search to a certain vendor id\r\n - `pid`: restrict search to s certain product id\r\n - `callback`: Function that is called whenever the event occurs\r\n \t - Takes a `err` and `devices` parameter.\r\n\r\n\r\n```js\r\nvar usbDetect = require('usb-detection');\r\nusbDetect.find(function(err, devices) {\r\n\tconsole.log(devices, err);\r\n});\r\n// Equivalent to:\r\n//\t\tusbDetect.find().then(function(devices) { console.log(devices); }).catch(function(err) { console.log(err); });\r\n\r\n/* Console output:\r\n[\r\n\t{\r\n\t\tlocationId: 0,\r\n\t\tvendorId: 0,\r\n\t\tproductId: 0,\r\n\t\tdeviceName: 'USB Root Hub',\r\n\t\tmanufacturer: '(Standard USB Host Controller)',\r\n\t\tserialNumber: '',\r\n\t\tdeviceAddress: 2\r\n\t},\r\n\t{\r\n\t\tlocationId: 0,\r\n\t\tvendorId: 5824,\r\n\t\tproductId: 1155,\r\n\t\tdeviceName: 'Teensy USB Serial (COM3)',\r\n\t\tmanufacturer: 'PJRC.COM, LLC.',\r\n\t\tserialNumber: '',\r\n\t\tdeviceAddress: 11\r\n\t}\r\n]\r\n*/\r\n```\r\n\r\n\r\n\r\n\r\n# FAQ\r\n\r\n### The script/process is not exiting/quiting\r\n\r\n```js\r\nvar usbDetect = require('usb-detection');\r\n\r\n// Do some detection\r\n\r\n// After this call, the process will be able to quit\r\nusbDetect.stopMonitoring();\r\n```\r\n\r\n\r\n\r\n# Testing\r\n\r\nWe have a suite of Mocha/Chai tests.\r\n\r\nThe tests require some manual interaction of plugging/unplugging a USB device. Follow the cyan background text instructions.\r\n\r\n```sh\r\nnpm test\r\n```\r\n","starsCount":7,"created":"2013-06-18T11:53:39.647Z","modified":"2017-05-22T08:54:28.065Z","lastPublisher":{"name":"mlm","email":"contact@ericeastwood.com"},"owners":[{"email":"contact@ericeastwood.com","name":"mlm"},{"email":"adriano@raiano.ch","name":"adrai"}],"other":{"_attachments":{},"_from":".","_id":"usb-detection","_nodeVersion":"4.2.3","_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/usb-detection-1.4.0.tgz_1458522297931_0.3595908833667636"},"_npmUser":{"name":"mlm","email":"contact@ericeastwood.com"},"_npmVersion":"2.14.7","_rev":"3-7a92c52626e2d919f6b3d9bc9460c420","_shasum":"de948e039684264fa1d0929882c1bb34677c2dbb","bugs":{"url":"https://github.com/MadLittleMods/node-usb-detection/issues"},"directories":{},"dist-tags":{"latest":"1.4.0"},"dist":{"shasum":"de948e039684264fa1d0929882c1bb34677c2dbb","tarball":"http://registry.npmjs.org/usb-detection/-/usb-detection-1.4.0.tgz"},"maintainers":[{"email":"contact@ericeastwood.com","name":"mlm"},{"email":"adriano@raiano.ch","name":"adrai"}],"readmeFilename":"README.md","time":{"modified":"2017-05-22T08:54:28.065Z","created":"2013-06-18T11:53:39.647Z","1.0.0":"2013-06-18T11:53:43.776Z","1.0.1":"2013-07-22T09:45:54.067Z","1.0.2":"2013-07-29T06:21:18.640Z","1.0.3":"2013-09-05T05:40:52.198Z","1.1.0":"2015-05-31T05:53:12.482Z","1.2.0":"2015-08-07T11:41:59.733Z","1.3.0":"2015-10-12T01:52:54.244Z","1.4.0":"2016-03-21T01:05:00.572Z"},"users":{"irae":true,"adrai":true,"mlm":true,"afelicioni":true,"goliatone":true,"wgerven":true,"hanhdt":true}}}