{"name":"node-ios-device","description":"iOS device library","version":"1.4.0","repository":"https://github.com/appcelerator/node-ios-device","keywords":["appcelerator","ios","iphone","ipad","install","mobiledevice","mobile"],"dependencies":{"debug":"^2.6.8","nan":"^2.6.2","node-pre-gyp":"^0.6.36","node-pre-gyp-init":"^1.0.0"},"devDependencies":{"aws-sdk":"^2.64.0"},"scripts":{"install":"node ./bin/run.js node-pre-gyp install --fallback-to-build","build-n-publish-binding":"node ./bin/run.js node-pre-gyp rebuild package publish","prepublish":"node ./bin/run.js node ./bin/build-all.js","rebuild":"node ./bin/run.js node-pre-gyp rebuild","rebuild-debug":"node ./bin/run.js node-pre-gyp --debug rebuild","xcode":"node ./bin/run.js node-pre-gyp configure -- -f xcode","download-all":"node ./bin/download-all.js"},"binary":{"module_name":"node_ios_device","module_path":"./binding/{node_abi}-{platform}-{arch}/","remote_path":"./{name}/v{version}","host":"https://appc-node-binaries.s3.amazonaws.com"},"license":"Apache-2.0","gypfile":true,"main":"./ios-device","engines":{"node":">=0.10"},"gitHead":"b9617356cbe7d07a332f8580d9c20c3701d9c957","homepage":"https://github.com/appcelerator/node-ios-device#readme","bundleDependencies":["node-pre-gyp"],"versions":[{"number":"0.1.0","date":"2013-10-25T21:26:30.889Z"},{"number":"0.1.1","date":"2013-10-25T23:58:20.824Z"},{"number":"0.1.2","date":"2013-10-27T08:21:57.931Z"},{"number":"0.1.3","date":"2013-11-06T23:01:36.945Z"},{"number":"0.2.0","date":"2014-01-23T02:13:14.635Z"},{"number":"0.2.1","date":"2014-03-26T00:04:29.552Z"},{"number":"0.2.2","date":"2014-03-27T18:55:31.863Z"},{"number":"0.3.0","date":"2014-09-13T01:00:02.577Z"},{"number":"0.3.1","date":"2014-09-26T00:22:54.056Z"},{"number":"0.3.2","date":"2015-02-12T21:54:40.037Z"},{"number":"0.4.0","date":"2015-05-20T18:14:53.328Z"},{"number":"0.4.0-beta","date":"2015-05-20T18:16:48.169Z"},{"number":"0.4.1-beta","date":"2015-05-20T18:34:31.664Z"},{"number":"0.4.1-beta2","date":"2015-05-20T22:21:46.763Z"},{"number":"0.4.1-beta3","date":"2015-06-05T22:19:47.585Z"},{"number":"0.4.1-beta4","date":"2015-06-05T23:25:07.892Z"},{"number":"0.4.1","date":"2015-06-05T23:30:47.272Z"},{"number":"0.5.0","date":"2015-08-07T21:18:19.737Z"},{"number":"0.5.1","date":"2015-08-12T14:01:02.274Z"},{"number":"0.5.2","date":"2015-09-08T20:04:20.325Z"},{"number":"0.6.0","date":"2015-10-27T23:08:01.175Z"},{"number":"0.7.0","date":"2015-10-29T21:37:40.524Z"},{"number":"0.7.1","date":"2016-01-14T20:32:27.805Z"},{"number":"0.8.0","date":"2016-02-12T05:54:47.109Z"},{"number":"0.8.1","date":"2016-02-12T07:34:46.499Z"},{"number":"0.8.2","date":"2016-02-12T17:36:13.502Z"},{"number":"0.8.3","date":"2016-02-16T15:18:59.421Z"},{"number":"0.9.0","date":"2016-05-02T05:13:48.604Z"},{"number":"0.9.1","date":"2016-05-04T15:26:36.654Z"},{"number":"0.9.2","date":"2016-05-05T18:12:08.824Z"},{"number":"0.9.3","date":"2016-05-06T15:35:41.513Z"},{"number":"0.9.4","date":"2016-05-06T17:30:44.591Z"},{"number":"0.9.5","date":"2016-05-07T06:03:42.915Z"},{"number":"0.10.0","date":"2016-07-26T23:11:09.975Z"},{"number":"0.10.1","date":"2016-07-28T20:52:33.440Z"},{"number":"0.11.0-beta","date":"2016-08-04T07:18:52.613Z"},{"number":"0.11.0","date":"2016-08-04T15:32:46.245Z"},{"number":"0.11.1","date":"2016-08-18T22:00:44.977Z"},{"number":"0.11.2","date":"2016-08-24T23:34:36.635Z"},{"number":"1.0.0-beta","date":"2016-10-07T18:01:59.559Z"},{"number":"1.0.0-beta2","date":"2016-10-10T20:22:55.434Z"},{"number":"1.0.0","date":"2016-10-10T23:24:39.798Z"},{"number":"1.0.1","date":"2016-10-13T02:00:43.384Z"},{"number":"1.1.0","date":"2016-11-01T17:00:54.663Z"},{"number":"1.2.0","date":"2017-03-16T21:33:06.092Z"},{"number":"1.2.1","date":"2017-03-21T18:14:14.377Z"},{"number":"1.3.0","date":"2017-03-29T23:13:49.651Z"},{"number":"1.3.1","date":"2017-04-03T15:47:35.049Z"},{"number":"1.3.2","date":"2017-06-07T16:58:57.672Z"},{"number":"1.3.3","date":"2017-06-07T17:16:08.970Z"},{"number":"1.4.0","date":"2017-07-24T19:08:10.541Z"}],"readme":"# node-ios-device [![Build Status](https://travis-ci.org/appcelerator/node-ios-device.svg?branch=master)](https://travis-ci.org/appcelerator/node-ios-device)\n\nQueries connected iOS devices, installs apps, and relays log output.\n\n## Prerequisites\n\nnode-ios-device is currently compatible with the following versions:\n\n * Node.js\n   * 0.10.x (module API v11)\n   * 4.x (module API v46)\n   * 5.x (module API v47)\n   * 6.x (module API v48)\n   * 7.x (module API v51)\n   * 8.x (module API v57)\n * io.js\n   * 3.x (module API v45)\n\nOnly Mac OS X (darwin) is supported. You should make this module an optional\ndependency of your application and it will only be downloaded on OS X.\n\n> Note: node-ios-device@2.0.0 will only support Node.js 4 and newer.\n\n> Note: Support for Node.js 0.12 and io.js <3.x has been dropped because they fail to compile with\n> Xcode 8.3 due to an issue with V8. Interestingly, older versions of clang didn't have a problem.\n> Apple claims they cannot reproduce the issue and that the version of clang that ships with Xcode\n> 8.3 is working as expected. If you still need to support Node.js 0.12 and io.js <3.x, then\n> best to stick with node-ios-device@1.2.x.\n\n## Installation\n\nFrom NPM:\n\n\tnpm install node-ios-device --save-optional\n\n## Example\n\n```javascript\nvar iosDevice = require('node-ios-device');\n\n// get all connected iOS devices\niosDevice.devices(function (err, devices) {\n\tif (err) {\n\t\tconsole.error('Error!', err);\n\t} else {\n\t\tconsole.log('Connected devices:');\n\t\tconsole.log(devices);\n\t}\n});\n\n// continuously watch for devices to be connected or disconnected\niosDevice\n\t.trackDevices()\n\t.on('devices', function (devices) {\n\t\tconsole.log('Connected devices:');\n\t\tconsole.log(devices);\n\t})\n\t.on('error', function (err) {\n\t\tconsole.error('Error!', err);\n\t});\n\n// install an iOS app\niosDevice.installApp('<device udid>', '/path/to/my.app', function (err) {\n\tif (err) {\n\t\tconsole.error('Error!', err);\n\t} else {\n\t\tconsole.log('Success!');\n\t}\n});\n\n// relay the syslog output to the console\niosDevice\n\t.log('<device udid>')\n\t.on('log', function (msg) {\n\t\tconsole.log(msg);\n\t})\n\t.on('error', function (err) {\n\t\tconsole.error('Error!', err);\n\t});\n\n// relay output from a TCP port created by an iOS app\niosDevice\n\t.log('<device udid>', 1337)\n\t.on('log', function (msg) {\n\t\tconsole.log(msg);\n\t})\n\t.on('error', function (err) {\n\t\tconsole.error('Error!', err);\n\t});\n```\n\n## API\n\n### devices(callback)\n\nRetrieves an array of all connected iOS devices.\n\n* `{function} callback(err, devices)` - A function to call with the connected devices\n\t* `{null|Error} err` - An `Error` if there was a problem, otherwise `null`\n\t* `{Array<Object>} devices` - An array of Device objects\n\nNote that only devices connected via a USB cable will be returned. Devices\nconnected via Wi-Fi will not be returned. The main reason we do this is because\nyou can only relay the syslog from USB connected devices. This restriction be\nlifted in the future.\n\nDevice objects contain the following information:\n\n* `udid` - The device's unique device id (e.g. \"a4cbe14c0441a2bf87f397602653a4ac71eb0336\")\n* `name` - The name of the device (e.g. \"My iPhone\")\n* `buildVersion` - The build version (e.g. \"10B350\")\n* `cpuArchitecture` - The CPU architecture (e.g. \"armv7s\")\n* `deviceClass` - The type of device (e.g. \"iPhone\", \"iPad\")\n* `deviceColor` - The color of the device (e.g. \"black\", \"white\")\n* `hardwareModel` - The device module (e.g. \"[N41AP](http://theiphonewiki.com/wiki/N41ap)\")\n* `modelNumber` - The model number (e.g. \"MD636\")\n* `productType` - The product type or model id (e.g. \"iPhone5,1\")\n* `productVersion` - The iOS version (e.g. \"6.1.4\")\n* `serialNumber` - The device serial number (e.g. \"XXXXXXXXXXXX\")\n\nThere is more data that could have been retrieved from the device, but the\nproperties above seemed the most reasonable.\n\n### trackDevices()\n\nContinuously retrieves an array of all connected iOS devices. Whenever a device\nis connected or disconnected, the `devices` event is emitted.\n\nReturns a `Handle` instance that contains a `stop()` method to discontinue\ntracking devices.\n\n#### Event: 'devices'\n\nEmitted when a device is connected or disconnected.\n\n- `{Array<Object>} devices` - An array of devices\n\n#### Event: 'error'\n\nEmitted if there was an error such as platform is unsupported, failed to load or\ncompile a compatible `node-ios-device` binary, or failed to detect devices.\n\n- `{Error} err` - The error\n\n#### Example:\n\n```javascript\nconst handle = iosDevice\n\t.trackDevices()\n\t.on('devices', console.log);\n\nsetTimeout(function () {\n\t// turn off tracking after 1 minute\n\thandle.stop();\n}, 60000);\n```\n\n### installApp(udid, appPath, callback)\n\nInstalls an iOS app on the specified device.\n\n* `{String} udid` - The device udid\n* `{String} appPath` - The path to the iOS .app\n* `{Function} callback(err)` - A function to call when the install finishes\n\t* `{null|Error} err` - An `Error` if there was a problem, otherwise `null`\n\nCurrently, an `appPath` that begins with `~` is not supported.\n\nThe `appPath` must resolve to an iOS .app, not the .ipa file.\n\n### log(udid [, port])\n\nRelays a log from the iOS device. There are two modes. If you do not specify a\nport, it will relay the device's syslog and you'll need to parse out any app\nspecific output yourself. If you specify a port, then it will connect to that\nport and relay all messages.\n\nStarting with iOS 10, relaying the syslog is virtually useless. iOS 10 has a new\nlogging system that skips the syslog. You can get log output using the `log`\ncommand introduced in macOS Sierra, but it's not available for OS X El Capitan\nusers. Because of this, `node-ios-device` added the ability to specify a port,\nbut then your iOS app must contain a TCP server that accepts connects and\noutputs log messages to the `node-ios-device` log.\n\n* `{String} udid` - The device udid\n* `{String} port` (optional) - The TCP port listening in the iOS app to connect to\n\nReturns a `Handle` instance that contains a `stop()` method to discontinue\nemitting messages.\n\n#### Event: 'log'\n\nEmitted for each line of output. Empty lines are omitted.\n\n- `{String} message` - The log message.\n\n#### Event: 'app-started'\n\nEmitted when `node-ios-device` is able to successfully connect to the specified\nport on the device. This is only supported when specifying a port.\n\n#### Event: 'app-quit'\n\nEmitted when the app is quit. This is only supported when specifying a port.\n\n#### Event: 'disconnect'\n\nEmitted when the device is physically disconnected. Note that this does not stop\nthe log relaying. You must manually call `handle.stop()`.\n\n#### Event: 'error'\n\nEmitted if there was an error such as if the device is not initially connected,\nplatform is unsupported, failed to load or compile a compatible\n`node-ios-device` binary, or failed to detect devices.\n\n- `{Error} err` - The error\n\n#### Example:\n\n```javascript\nconst handle = iosDevice\n\t.log('<device udid>')\n\t.on('log', console.log);\n});\n\nsetTimeout(function () {\n\t// turn off logging after 1 minute\n\thandle.stop();\n}, 60000);\n```\n\nWhen calling `log()` without a port to relay the syslog, it will print out\nseveral older messages. If you are only interested in new messages, then you'll\nhave to debounce the messages using something like `_.debounce()` or use a timer\nand a ready flag like this:\n\n```javascript\nlet ready = false;\nlet timer = null;\n\niosDevice\n\t.log('<device udid>')\n\t.on('log', function (msg) {\n\t\tif (ready) {\n\t\t\tconsole.log(msg);\n\t\t} else {\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = setTimeout(function () {\n\t\t\t\tready = true;\n\t\t\t}, 500);\n\t\t}\n\t});\n```\n\n## Maintainer Info\n\n### Development\n\nTo manually build `node-ios-device`, simply run:\n\n    npm run rebuild\n\nTo build it for all versions of Node.js, run:\n\n    bin/build-all.sh\n\nTo debug `node-ios-device`,\n\n - Run `npm run xcode` to generate the Xcode project\n - Open the Xcode project from the `build` directory\n - Edit the scheme\n - From the \"Run (debug)\" menu, select the \"Info\" tab on the right\n - Click on the \"Executable\" dropdown and select \"Other...\"\n - Locate the Node.js executable (probably `/usr/local/bin/node`)\n - Change to the \"Arguments\" tab\n - Set the \"Arguments Passed On Launch\" to the JS file you want to run\n   - This will likely be one of the test cases\n   - Use an absolute path since all paths are relative to the Node executable\n - Add the environment variable `DEBUG=*`\n - Close out the schemes and click \"Run\"\n\n### Publishing\n\nThis section is intended for Appcelerator release managers.\n\nTo publish a new release to NPM, run `npm publish`. This will build\n`node-ios-device` for all Node.js module API versions and then upload each\nbinary to an Appcelerator Amazon S3 bucket. You must make sure you have a\n`~/.node_pre_gyprc` containing `{ \"accessKeyId\": \"\", \"secretAccessKey\": \"\" }`.\n\n## License\n\nThis project is open source and provided under the Apache Public License\n(version 2). Please make sure you see the `LICENSE` file included in this\ndistribution for more details on the license.  Also, please take notice of the\nprivacy notice at the end of the file.\n\nThis project contains `mobiledevice.h` from\n[https://bitbucket.org/tristero/mobiledeviceaccess](https://bitbucket.org/tristero/mobiledeviceaccess)\nand is available under public domain.\n\n#### (C) Copyright 2012-2017, [Appcelerator](http://www.appcelerator.com/) Inc. All Rights Reserved.\n","starsCount":4,"created":"2013-10-25T21:26:29.685Z","modified":"2017-07-24T19:08:10.541Z","lastPublisher":{"name":"appcelerator","email":"npmjs@appcelerator.com"},"owners":[{"name":"cb1kenobi","email":"chris@cb1inc.com"},{"name":"ingo","email":"ingo@muschenetz.com"},{"name":"appcelerator","email":"npmjs@appcelerator.com"}],"other":{"_attachments":{},"_from":".","_id":"node-ios-device","_nodeVersion":"4.7.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-ios-device-1.4.0.tgz_1500923290447_0.9622688814997673"},"_npmUser":{"name":"appcelerator","email":"npmjs@appcelerator.com"},"_npmVersion":"2.15.11","_rev":"10-64f135deb5e4732d6b900109b72bb980","_shasum":"d9345859d81ec088367cab16eafebf77c78c2a56","author":{"name":"Appcelerator, Inc.","email":"info@appcelerator.com"},"bugs":{"url":"https://github.com/appcelerator/node-ios-device/issues"},"directories":{},"dist-tags":{"latest":"1.4.0","0.4.1_beta3":"0.4.1-beta3","0.4.1_beta4":"0.4.1-beta4","v0.11-beta":"0.11.0-beta","v1-beta":"1.0.0-beta","v1-beta2":"1.0.0-beta2"},"dist":{"shasum":"d9345859d81ec088367cab16eafebf77c78c2a56","tarball":"https://registry.npmjs.org/node-ios-device/-/node-ios-device-1.4.0.tgz"},"maintainers":[{"name":"cb1kenobi","email":"chris@cb1inc.com"},{"name":"ingo","email":"ingo@muschenetz.com"},{"name":"appcelerator","email":"npmjs@appcelerator.com"}],"readmeFilename":"README.md","time":{"modified":"2017-07-24T19:08:10.541Z","created":"2013-10-25T21:26:29.685Z","0.1.0":"2013-10-25T21:26:30.889Z","0.1.1":"2013-10-25T23:58:20.824Z","0.1.2":"2013-10-27T08:21:57.931Z","0.1.3":"2013-11-06T23:01:36.945Z","0.2.0":"2014-01-23T02:13:14.635Z","0.2.1":"2014-03-26T00:04:29.552Z","0.2.2":"2014-03-27T18:55:31.863Z","0.3.0":"2014-09-13T01:00:02.577Z","0.3.1":"2014-09-26T00:22:54.056Z","0.3.2":"2015-02-12T21:54:40.037Z","0.4.0":"2015-05-20T18:14:53.328Z","0.4.0-beta":"2015-05-20T18:16:48.169Z","0.4.1-beta":"2015-05-20T18:34:31.664Z","0.4.1-beta2":"2015-05-20T22:21:46.763Z","0.4.1-beta3":"2015-06-05T22:19:47.585Z","0.4.1-beta4":"2015-06-05T23:25:07.892Z","0.4.1":"2015-06-05T23:30:47.272Z","0.5.0":"2015-08-07T21:18:19.737Z","0.5.1":"2015-08-12T14:01:02.274Z","0.5.2":"2015-09-08T20:04:20.325Z","0.6.0":"2015-10-27T23:08:01.175Z","0.7.0":"2015-10-29T21:37:40.524Z","0.7.1":"2016-01-14T20:32:27.805Z","0.8.0":"2016-02-12T05:54:47.109Z","0.8.1":"2016-02-12T07:34:46.499Z","0.8.2":"2016-02-12T17:36:13.502Z","0.8.3":"2016-02-16T15:18:59.421Z","0.9.0":"2016-05-02T05:13:48.604Z","0.9.1":"2016-05-04T15:26:36.654Z","0.9.2":"2016-05-05T18:12:08.824Z","0.9.3":"2016-05-06T15:35:41.513Z","0.9.4":"2016-05-06T17:30:44.591Z","0.9.5":"2016-05-07T06:03:42.915Z","0.10.0":"2016-07-26T23:11:09.975Z","0.10.1":"2016-07-28T20:52:33.440Z","0.11.0-beta":"2016-08-04T07:18:52.613Z","0.11.0":"2016-08-04T15:32:46.245Z","0.11.1":"2016-08-18T22:00:44.977Z","0.11.2":"2016-08-24T23:34:36.635Z","1.0.0-beta":"2016-10-07T18:01:59.559Z","1.0.0-beta2":"2016-10-10T20:22:55.434Z","1.0.0":"2016-10-10T23:24:39.798Z","1.0.1":"2016-10-13T02:00:43.384Z","1.1.0":"2016-11-01T17:00:54.663Z","1.2.0":"2017-03-16T21:33:06.092Z","1.2.1":"2017-03-21T18:14:14.377Z","1.3.0":"2017-03-29T23:13:49.651Z","1.3.1":"2017-04-03T15:47:35.049Z","1.3.2":"2017-06-07T16:58:57.672Z","1.3.3":"2017-06-07T17:16:08.970Z","1.4.0":"2017-07-24T19:08:10.541Z"},"users":{"andrebassi":true,"daikiki":true,"abblause":true,"brentonhouse":true}}}