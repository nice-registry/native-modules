{"name":"jontelldus","version":"1.0.6","description":"Node wrapper for telldus-core","keywords":["telldus","telldus-core","tellstick","nexa"],"engines":{"node":">= 0.12.0"},"license":"MIT","main":"./index.js","scripts":{"install":"node-gyp configure build","test":"echo \"No tests :/\""},"repository":"https://github.com/spuun/node-jontelldus","os":["darwin","linux","win32"],"dependencies":{"nan":">=2.1.0"},"gitHead":"002c503da2604551e74f00d0c0a0543af113749a","homepage":"https://github.com/spuun/node-jontelldus#readme","versions":[{"number":"1.0.0","date":"2015-12-17T12:03:07.090Z"},{"number":"1.0.1","date":"2015-12-20T20:24:58.862Z"},{"number":"1.0.2","date":"2016-01-03T13:14:57.692Z"},{"number":"1.0.3","date":"2016-01-04T11:16:07.568Z"},{"number":"1.0.4","date":"2016-01-04T18:06:37.885Z"},{"number":"1.0.5","date":"2016-01-12T11:42:40.804Z"},{"number":"1.0.6","date":"2017-03-04T20:28:55.315Z"}],"readme":"# node-jontelldus\nTelldus-core wrapper.\n\nUnder development, poorly tested. I've used node 5.1.0, [but it should compile with node 0.12 and 4 aswell](https://travis-ci.org/spuun/node-jontelldus).\n\n## Requirements\nTelldus-core must be installed.\n\n## Methods\n| method | description |\n|--------|-------------|\n| [getDevices](#getdevices)(callback(devices)) | get all devices |\n| [addDevice](#adddevice)(deviceConfiguration, callback(deviceId) | add a new device |\n| [removeDevice](#removedevice)(deviceId, callback(err)) | remove a device |\n| [updateDevice](#updatedevice)(deviceConfiguration, callback(err, deviceId)) | update a device |\n| [turnOn](#turnon)(deviceId, callback(error)) | send on command to device | \n| [turnOff](#turnoff)(deviceId, callback(error)) | send off command to device |\n| [up](#up)(deviceId, callback(error)) | send up command to device |\n| [down](#down)(deviceId, callback(error)) | send down command to device |\n| [dim](#dim)(deviceId, level, callback(error)) | send dim command to device |\n| [bell](#bell)(deviceId, callback(error)) | send bell command to device |\n| [execute](#execute)(deviceId, callback(error)) | send execute command to device |\n| [stop](#stop)(deviceId, callback(error)) | send stop command to device |\n| [learn](#learn)(deviceId, callback(error)) | send learn command for device |\n| [addRawDeviceEventListener](#addrawdeviceeventlistener--removerawdeviceeventlistener)(listener(data)) | add a raw device event listener |\n| [addSensorEventListener](#addsensoreventlistener--removesensoreventlistener)(listener(sensorEventData)) | add a sensor event listener |\n| [addDeviceEventListener](#adddeviceeventlistener--removedeviceeventlistener)(listener(deviceEventData)) | add a device event listener |\n| [removeRawDeviceEventListener](#addrawdeviceeventlistener--removerawdeviceeventlistener)(listener, callback(err)) | remove a raw device event listener |\n| [removeDeviceEventListener](#adddeviceeventlistener--removedeviceeventlistener)(listener, callback(err)) | remove a device event listener |\n| [removeSensorEventListener](#addsensoreventlistener--sensordeviceeventlistener)(listener, callback(err)) | remove a sensor event listener |\n| [sendRawCommand](#sendrawcommand)(command, callback(error)) | send raw device command |\n\n\n## Properties\n| property | description |\n|----------|-------------|\n| sensorValueType | enum with sensor value types (Temperature, Humidity, RainTotal, RainRate, WindDirection, WindAverage, WindGust) |\n| method | enum with methods (TurnOn, TurnOff, Bell, Toggle, Dim, Execute, Up, Down, Stop) |\n| errorCode | enum with error codes (NoError, NotFound, PermissionDenied, DeviceNotFound, MethodNotSupported, Communication, ConnectingService, UnknownResponse, Syntax, BrokenPipe, CommunicatingService, Unknown) |\n\n## Examples\nCode examples is probably better than wall of text.\n\n### getDevices\n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.getDevices((devices) => {\n  console.log(devices);\n});\n```\n\n### addDevice\n```javascript\nvar jtelldus = require('jontelldus');\nvar device = {\n  name: \"Lamp\",\n  model: \"selflearning-switch\",\n  protocol: \"arctech\",\n  parameters: {\n    house: 10,\n    unit: 1\n  }\n};\njtelldus.addDevice(device, (err, deviceId) => {\n  if (!err) {\n    console.log('Device added. Id = ' + deviceId);\n  }\n});\n```\n\n\n### removeDevice\n```javascript\nvar jtelldus = require('jontelldus');\n\njtelldus.removeDevice(1, (err) => {\n  if (!err) {\n    console.log('Device 1 removed');\n  }\n});\n```\n\n### updateDevice\n```javascript\nvar jtelldus = require('jontelldus');\nvar device = {\n  id: 1, // id is required!\n  name: 'Blue lamp'\n  parameters: {\n    house: 10,\n    unit: 3\n  }\n};\njtelldus.updateDevice(device, (err, deviceId) => {\n  if (!err) {\n    console.log('Device updated. Id = ' + deviceId);\n  }\n});\n```\n\n### turnOn \n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.turnOn(1, (error) => {\n  if (!error) {\n    console.log('On sent to device 1');\n  }\n});\n```\n\n### turnOff \n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.turnOff(1, (error) => {\n  if (!error) {\n    console.log('Off sent to device 1');\n  }\n});\n```\n\n### up \n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.up(1, (error) => {\n  if (!error) {\n    console.log('Up sent to device 1');\n  }\n});\n```\n\n### down\n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.down(1, (error) => {\n  if (!error) {\n    console.log('Down sent to device 1');\n  }\n});\n```\n\n### dim\n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.dim(1, 30, (error) => {\n  if (!error) {\n    console.log('Dim set to level 30 for device 1');\n  }\n});\n```\n\n### bell \n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.bell(1, (error) => {\n  if (!error) {\n    console.log('Bell sent to device 1');\n  }\n});\n```\n\n### execute \n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.execute(1, (error) => {\n  if (!error) {\n    console.log('Execute sent to device 1');\n  }\n});\n```\n\n### stop\n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.stop(1, (error) => {\n  if (!error) {\n    console.log('Stop sent to device 1');\n  }\n});\n```\n\n### learn\n```javascript\nvar jtelldus = require('jontelldus');\njtelldus.learn(1, (error) => {\n  if (!error) {\n    console.log('Learn sent to device 1');\n  }\n});\n```\n\n### addRawDeviceEventListener / removeRawDeviceEventListener\n```javascript\nvar jtelldus = require('jontelldus');\nvar listener = (event) => {\n  console.log('RAW EVENT', event);\n};\njtelldus.addRawDeviceEventListener(listener);\njtelldus.removeRawDeviceEventListener(listener);\n```\n\n### addSensorEventListener / removeSensorEventListener\n```javascript\nvar jtelldus = require('jontelldus');\nvar listener = (event) => {\n  console.log('SENSOR EVENT', event);\n};\njtelldus.addSensorEventListener(listener);\njtelldus.removeSensorEventListener(listener);\n```\n\n### addDeviceEventListener / removeDeviceEventListener\n```javascript\nvar jtelldus = require('jontelldus');\nvar listener = (event) => {\n  console.log('DEVICE EVENT', event);\n};\njtelldus.addDeviceEventListener(listener);\njtelldus.removeDeviceEventListener(listener);\n```\n\n### sendRawCommand\n```javascript\nvar jtelldus = require('jontelldus');\nvar command = 'class:command;protocol:waveman;model:codeswitch;house:A;unit:1;method:turnoff;';\njtelldus.sendRawCommand(command, (error) => {\n  if (error) {\n    console.log(error);\n  }\n});\n```\n","created":"2015-12-17T12:03:07.090Z","modified":"2017-03-04T20:28:55.315Z","lastPublisher":{"name":"spuun","email":"jon@spuun.se"},"owners":[{"name":"spuun","email":"jon@spuun.se"}],"other":{"_attachments":{},"_from":".","_id":"jontelldus","_nodeVersion":"7.0.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jontelldus-1.0.6.tgz_1488659332455_0.16600965149700642"},"_npmUser":{"name":"spuun","email":"jon@spuun.se"},"_npmVersion":"3.10.8","_rev":"2-e717cdb339bdcef19b3cc8c3b166f205","_shasum":"2ad9b9bfbcd5bcc433993d78c8722dc61372ec5c","author":{"name":"Jon BÃ¶rjesson","email":"jon@spuun.se"},"bugs":{"url":"https://github.com/spuun/node-jontelldus/issues"},"directories":{},"dist-tags":{"latest":"1.0.6"},"dist":{"shasum":"2ad9b9bfbcd5bcc433993d78c8722dc61372ec5c","tarball":"https://registry.npmjs.org/jontelldus/-/jontelldus-1.0.6.tgz"},"maintainers":[{"name":"spuun","email":"jon@spuun.se"}],"readmeFilename":"README.md","time":{"modified":"2017-03-04T20:28:55.315Z","created":"2015-12-17T12:03:07.090Z","1.0.0":"2015-12-17T12:03:07.090Z","1.0.1":"2015-12-20T20:24:58.862Z","1.0.2":"2016-01-03T13:14:57.692Z","1.0.3":"2016-01-04T11:16:07.568Z","1.0.4":"2016-01-04T18:06:37.885Z","1.0.5":"2016-01-12T11:42:40.804Z","1.0.6":"2017-03-04T20:28:55.315Z"}}}