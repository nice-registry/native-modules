{"name":"fast-deepclone","main":"index.js","version":"1.0.0","description":"Deep clone an object","keywords":["deepclone","clonedeep","deep clone","deep","clone","copy","deep copy","clonecopy","deepcopy"],"scripts":{"configure":"node-gyp configure","build":"node-gyp build","test":"npm run lint && npm run unit-tests","unit-tests":"mocha --recursive","lint":"eslint --max-warnings=0 *.js test/","install":"node-gyp rebuild"},"repository":"https://github.com/scottinet/fast-deepclone","dependencies":{"bindings":"^1.2.1","nan":"^2.4.0"},"devDependencies":{"benchmark":"^2.1.4","clone":"^2.1.1","eslint":"^3.19.0","lodash":"^4.17.4","mocha":"^3.4.2","node-gyp":"^3.4.0","random-object":"^1.3.4"},"license":"MIT","gypfile":true,"gitHead":"2959e63721d8ec065f8137b0716cd60d9dab4147","homepage":"https://github.com/scottinet/fast-deepclone#readme","versions":[{"number":"1.0.0","date":"2017-06-03T09:16:27.107Z"}],"readme":"[![Build Status](https://travis-ci.org/scottinet/fast-deepclone.svg?branch=master)](https://travis-ci.org/scottinet/fast-deepclone)\n\n# fast-deepclone\n\nFast and safe JSON deep-cloning utility\n\n\n## Behavior\n\nPOJOs and arrays are always duplicated. \n\nCircular references are carried over to the cloned object.\n\nObjects properties and prototypes are ignored.\n\nThe resulting duplicated objects keep the same references to the following objects:\n\n* functions and generator functions\n* native Error objects\n* WeakMap \n* WeakSet \n* Promise\n* symbols\n* object version of scalar values (e.g. BooleanObject)\n\nThis module also allows to either keep references or to duplicate the following objects, depending on the provided options:\n\n* Buffer\n* TypedArrays\n* Map\n* Set\n* Date \n* RegExp\n\n\n## Installation\n\n`npm fast-deepclone`\n\nThis module can only be used with NodeJS (tested on all major versions from v4 to v8 included).\n\n\n## How to use\n\n\n```js\nconst deepClone = require('fast-deepclone');\n\n\n/*\n  Clone objects, keeping references to Buffer, TypedArrays,\n  Map, Set, Date and RegExp.\n  This means that modifying one of those objects in the\n  source object will also impact the target object\n */\nconst clonedTarget = deepClone(source);\n// or: const clonedTarget = deepClone(source, false);\n\n/*\n  Copy objects: new Buffer, TypedArrays, Map, Set, Date\n  and RegExp objects are created in the target object,\n  and their values are copied from the source\n */\nconst copiedTarget = deepClone(source, true);\n```\n\n## When to use this module\n\nThis module is written in C++, using V8 for faster object access.  \nThis is, to my knowledge, the fastest deep-cloning module currently available, but it can only work with NodeJS.\n\nIf you need a deep-cloning tool in browsers, check either [lodash.cloneDeep](https://www.npmjs.com/package/lodash) or [clone](https://www.npmjs.com/package/clone). These modules are well-written, well-tested, and they also handle circular references/JS Objects.\n\nMoreover, if all you need to duplicate are POJO objects (i.e. objects containing only objects, arrays or scalar values), and if you are absolutely certain that there is no circular reference in them, then you may want to use `JSON.parse(JSON.stringify(<object_to_clone>))` instead.  \nDuplicating objects using `JSON` functions is way faster. Around 2x to 6x faster than this module, depending on the nature of the duplicated object.  \nThis is because these functions are hardcoded within V8 and have access to internal structures, not exposed in the V8 public API. Which is not necessarily a bad thing, if a bit frustrating.\n\n\n## Benchmarks\n\nObtained by running `node benchmark.js` at the root of the project, using NodeJS v7.10.0:\n\n```\n== Empty objects\nlodash.cloneDeep x 1,267,300 ops/sec ±0.94% (87 runs sampled)\nclone x 741,513 ops/sec ±0.58% (94 runs sampled)\nfast-deepclone (clone mode) x 2,732,798 ops/sec ±0.54% (90 runs sampled)\nfast-deepclone (copy mode) x 2,651,307 ops/sec ±0.38% (93 runs sampled)\n\n== Fast POJO objects (5 properties, depth === 3)\nlodash.cloneDeep x 82,981 ops/sec ±0.97% (92 runs sampled)\nclone x 86,903 ops/sec ±0.35% (95 runs sampled)\nfast-deepclone (clone mode) x 96,752 ops/sec ±0.53% (95 runs sampled)\nfast-deepclone (copy mode) x 95,926 ops/sec ±0.61% (96 runs sampled)\n\n== Slow POJO objects (100 properties, depth === 100)\nlodash.cloneDeep x 101 ops/sec ±2.99% (72 runs sampled)\nclone x 111 ops/sec ±2.89% (68 runs sampled)\nfast-deepclone (clone mode) x 367 ops/sec ±0.78% (89 runs sampled)\nfast-deepclone (copy mode) x 357 ops/sec ±0.49% (88 runs sampled)\n\n== Fast objects w/ constructors and circular refs\nlodash.cloneDeep x 7,494 ops/sec ±1.05% (95 runs sampled)\nclone x 7,950 ops/sec ±3.35% (87 runs sampled)\nfast-deepclone (clone mode) x 73,751 ops/sec ±0.44% (93 runs sampled)\nfast-deepclone (copy mode) x 49,588 ops/sec ±0.21% (92 runs sampled)\n```\n\nResults obtained on fast POJO objects are a bit weird using NodeJS v8.0.0, I'll update the benchmarks once one or more minor versions of NodeJS v8 are released, as I don't think NodeJS v8 is stable yet.\n\n## License\n\n[MIT](https://opensource.org/licenses/MIT)\n","created":"2017-06-03T09:16:27.107Z","modified":"2017-06-03T09:16:27.107Z","lastPublisher":{"name":"scottinet","email":"scottinet@kuzzle.io"},"owners":[{"name":"scottinet","email":"scottinet@kuzzle.io"}],"other":{"_attachments":{},"_id":"fast-deepclone","_nodeVersion":"6.10.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/fast-deepclone-1.0.0.tgz_1496481386146_0.03725145268253982"},"_npmUser":{"name":"scottinet","email":"scottinet@kuzzle.io"},"_npmVersion":"5.0.0","_rev":"1-82551d72bbb7bbaeabad2a9dcc9dd442","author":{"name":"Sebastien Cottinet","url":"https://github.com/scottinet"},"bugs":{"url":"https://github.com/scottinet/fast-deepclone/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"integrity":"sha512-wMn/8iIR9lT+pewUXgp8kVjJ8lHE6wqwx64kjBfU1SVLZYmsymsj8OWYda4m8Xlmhh+hJ7HoGuGVzml0qPElMQ==","shasum":"3bea3cb1d926e8a94da4fb53982cee2b379d1bf8","tarball":"https://registry.npmjs.org/fast-deepclone/-/fast-deepclone-1.0.0.tgz"},"maintainers":[{"name":"scottinet","email":"scottinet@kuzzle.io"}],"readmeFilename":"README.md","time":{"modified":"2017-06-03T09:16:27.107Z","created":"2017-06-03T09:16:27.107Z","1.0.0":"2017-06-03T09:16:27.107Z"}}}