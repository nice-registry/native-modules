{"name":"ogg","description":"Node.js native binding to libogg","keywords":["ogg","libogg","encode","decode","stream"],"version":"1.2.5","license":"MIT","repository":"https://github.com/TooTallNate/node-ogg","main":"./index.js","dependencies":{"bindings":"~1.2.0","debug":"2","nan":"2","readable-stream":"1.0"},"devDependencies":{"mocha":"*","ogg-packet":"1"},"scripts":{"test":"mocha --reporter spec","install":"node-gyp rebuild"},"gypfile":true,"gitHead":"7a754d231bf24698e707653011c2ac235a2c69d6","homepage":"https://github.com/TooTallNate/node-ogg#readme","versions":[{"number":"0.0.1","date":"2012-11-16T00:08:03.822Z"},{"number":"1.0.0","date":"2013-02-17T03:57:43.552Z"},{"number":"1.1.0","date":"2013-03-07T09:48:34.789Z"},{"number":"1.1.1","date":"2013-03-07T09:52:30.265Z"},{"number":"1.1.2","date":"2014-07-28T17:42:32.837Z"},{"number":"1.2.0","date":"2015-05-07T19:28:38.902Z"},{"number":"1.2.1","date":"2015-05-24T22:32:38.987Z"},{"number":"1.2.2","date":"2015-12-13T00:10:24.958Z"},{"number":"1.2.3","date":"2016-01-20T22:07:53.029Z"},{"number":"1.2.4","date":"2016-01-21T05:10:34.759Z"},{"number":"1.2.5","date":"2016-07-07T21:46:04.488Z"}],"readme":"node-ogg\n========\n### Node.js native binding to libogg\n[![Build Status](https://travis-ci.org/TooTallNate/node-ogg.svg?branch=master)](https://travis-ci.org/TooTallNate/node-ogg)\n\nThis module provides a Writable stream interface for decoding `ogg` files, and a\nReadable stream for encoding `ogg` files. `libogg` only provides the interfaces\nfor multiplexing the various streams embedding into an ogg file (and vice versa),\ntherefore this module is intended to be used in conjunction with a\n`node-ogg`-compatible stream module, like `node-vorbis` and `node-theora`.\n\n\nInstallation\n------------\n\n`node-ogg` comes bundled with its own copy of `libogg`, so\nthere's no need to have the library pre-installed on your system.\n\nSimply compile and install `node-ogg` using `npm`:\n\n``` bash\n$ npm install ogg\n```\n\n__NOTE:__ `node-ogg` requires to be built using `node-gyp` v0.8.0 or newer!\n\n\nExample\n-------\n\nHere's an example of using the `Decoder` class and simply listening for the raw\nevents and `console.log()`s information about each \"packet\" emitted from each ogg\nstream:\n\n``` javascript\nvar fs = require('fs');\nvar ogg = require('ogg');\nvar file = __dirname + '/Hydrate-Kenny_Beltrey.ogg';\n\nvar decoder = new ogg.Decoder();\n\ndecoder.on('stream', function (stream) {\n  console.log('new \"stream\":', stream.serialno);\n\n  // emitted for each `ogg_packet` instance in the stream.\n  stream.on('data', function (packet) {\n    console.log('got \"packet\":', packet.packetno);\n  });\n\n  // emitted after the last packet of the stream\n  stream.on('end', function () {\n    console.log('got \"end\":', stream.serialno);\n  });\n});\n\n// pipe the ogg file to the Decoder\nfs.createReadStream(file).pipe(decoder);\n```\n\nSee the `examples` directory for some more example code.\n\n\nAPI\n---\n\n### Decoder class\n\nThe `Decoder` class is a `Writable` stream that accepts an ogg file written to\nit, and emits \"stream\" events when a new stream is encountered. The\n`DecoderStream` instance is a readable stream that outputs `ogg_packet` Buffer\ninstances.encountered, which\nyou are then expected to pass along to a ogg stream decoder.\n\n### Encoder class\n\nThe `Encoder` class is a `Readable` stream where you are given `EncoderStream`\ninstances and are required to write `ogg_packet`s received from an ogg stream\nencoder to them in order to create a valid ogg file.\n\n\nOGG Stream Decoders/Encoders\n----------------------------\n\nHere's a list of known ogg stream decoders and encoders that are compatible with / depend on `node-ogg`.\nPlease send pull requests for additional modules if you write one.\n\n| **Module**                       | **Decoder?** | **Encoder?**\n|:--------------------------------:|:------------:|:------------:\n|   [`node-vorbis`][node-vorbis]   |      ✓       |      ✓\n|   [`node-opus`][node-opus]       |      ✓       |      ✓\n\n[node-vorbis]: https://github.com/TooTallNate/node-vorbis\n[node-opus]: https://github.com/Rantanen/node-opus\n","starsCount":1,"created":"2012-11-16T00:08:03.000Z","modified":"2017-07-09T12:12:45.911Z","lastPublisher":{"name":"tootallnate","email":"nathan@tootallnate.net"},"owners":[{"name":"linusu","email":"linus@folkdatorn.se"},{"name":"tootallnate","email":"nathan@tootallnate.net"}],"other":{"_attachments":{},"_from":".","_id":"ogg","_nodeVersion":"4.4.5","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/ogg-1.2.5.tgz_1467927961325_0.8236314619425684"},"_npmUser":{"name":"tootallnate","email":"nathan@tootallnate.net"},"_npmVersion":"2.15.5","_rev":"2-c18a8aa09c331177daff6af02e6ee5cb","_shasum":"ef4f1e34f48a50d1bef10e89356774bf696f65a9","author":{"name":"Nathan Rajlich","email":"nathan@tootallnate.net","url":"http://tootallnate.net"},"bugs":{"url":"https://github.com/TooTallNate/node-ogg/issues"},"directories":{},"dist-tags":{"latest":"1.2.5"},"dist":{"shasum":"ef4f1e34f48a50d1bef10e89356774bf696f65a9","tarball":"http://registry.npmjs.org/ogg/-/ogg-1.2.5.tgz"},"maintainers":[{"name":"linusu","email":"linus@folkdatorn.se"},{"name":"tootallnate","email":"nathan@tootallnate.net"}],"readmeFilename":"README.md","time":{"modified":"2017-07-09T12:12:45.911Z","created":"2012-11-16T00:08:03.000Z","0.0.1":"2012-11-16T00:08:03.822Z","1.0.0":"2013-02-17T03:57:43.552Z","1.1.0":"2013-03-07T09:48:34.789Z","1.1.1":"2013-03-07T09:52:30.265Z","1.1.2":"2014-07-28T17:42:32.837Z","1.2.0":"2015-05-07T19:28:38.902Z","1.2.1":"2015-05-24T22:32:38.987Z","1.2.2":"2015-12-13T00:10:24.958Z","1.2.3":"2016-01-20T22:07:53.029Z","1.2.4":"2016-01-21T05:10:34.759Z","1.2.5":"2016-07-07T21:46:04.488Z"},"users":{"beefex":true}}}