{"name":"vsjs","version":"0.1.0","description":"Allows frames to be fetched from vapoursynth files.","dependencies":{"nan":"^2.4.0","bindings":"^1.2.1"},"devDependencies":{},"repository":"https://github.com/mgroshans/vsjs","license":"AGPL-3.0","scripts":{"install":"node-gyp rebuild"},"gypfile":true,"gitHead":"03caddf7942430eff367f21338c1684e3d3eedec","homepage":"https://github.com/mgroshans/vsjs#readme","versions":[{"number":"0.1.0","date":"2016-09-09T06:14:36.500Z"}],"readme":"#vsjs\nVapourSynth for JavaScript.\n\n##Documentation\n### Vapoursynth Object\n#### Constructor\nThis module allows you to create `Vapoursynth` objects with the following\nsyntax:\n```javascript\nlet clip = vsjs.Vapoursynth(scriptContents, [scriptFilename]);\n```\n`scriptContents` is the actual contents of the script (as a buffer) which\nshould be evaluated.\n\n`scriptFilename` is the path of the script being evaluated. This is optional.\nSee\n[the vapoursynth C documentation](http://vapoursynth.com/doc/api/vsscript.h.html#vsscript-evaluatescript)\nfor more information on vapoursynth's behavior if no filename is specified.\n\n#### getInfo()\n```javascript\nclip.getInfo();\n```\nWhich returns some useful information about the clip:\n```json\n{\n  \"height\": 480,\n  \"width\": 640,\n  \"numFrames\": 1000,\n  \"fps\": {\n    \"numerator\": 24000,\n    \"denominator\": 1001\n  },\n  \"frameSize\": 460800\n}\n```\n`frameSize` indicates how large the buffer must be to fetch frames from this\nclip.\n\n#### getFrame()\n```javascript\nclip.getFrame(frameNumber, frameBuffer, callback);\n```\n`frameNumber` is the desired frame.\n\n`frameBuffer` is the destination buffer. If no error occurs it will be populated\nwith the frame data.\n\n`callback` will be called when the frame data has been fetched with the\nfollowing arguments:\n```javascript\ncallback(error, frameNumber, frameBuffer);\n```\n`error` is any exception encountered while getting the frame. If no exception\nwas encountered it will be null.\n\n`frameNumber` is the number of the fetched frame.\n\n`frameBuffer` is the same buffer which was originally provided, but now with\npopulated with frame data.\n\n##Example\n```javascript\nconst fs = require('fs');\nconst vsjs = require('vsjs');\n\nconst pathToScript = 'C:\\\\VapourSynth\\\\example.vpy';\nconst clip = vsjs.Vapoursynth(fs.readFileSync(pathToScript), pathToScript);\n\nconsole.log(clip.getInfo());\n\nclip.getFrame(0, Buffer.alloc(clip.getInfo().frameSize), (err, frameNumber, buffer) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(`buffer now contains frame ${frameNumber}`);\n    }\n});\n```\n\n##Build\nInstall our dependencies:\n```\n> npm install\n```\nThen we go through the normal node-gyp process:\n```\n> node-gyp configure [--VS_SDK=\"C:/Vapoursynth/Install/sdk\"]\n> node-gyp build\n```\nTo be honest I'm not sure if I've followed all the best practices for gyp\nbuilds or if the build will work on non-windows systems. If you have trouble\nbuilding please try editing the binding.gyp or open an issue. \n","created":"2016-09-09T06:14:36.500Z","modified":"2016-09-09T06:14:36.500Z","lastPublisher":{"name":"mgroshans","email":"mikegroshans@gmail.com"},"owners":[{"name":"mgroshans","email":"mikegroshans@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"vsjs","_nodeVersion":"6.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/vsjs-0.1.0.tgz_1473401676245_0.20574180758558214"},"_npmUser":{"name":"mgroshans","email":"mikegroshans@gmail.com"},"_npmVersion":"3.10.6","_rev":"1-51090d00a9ce7a54a14f6cf568e15abd","_shasum":"97cc84499d452e7bd053991f345ba8dfdbd958a8","author":{"name":"Michael Groshans"},"bugs":{"url":"https://github.com/mgroshans/vsjs/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"97cc84499d452e7bd053991f345ba8dfdbd958a8","tarball":"http://registry.npmjs.org/vsjs/-/vsjs-0.1.0.tgz"},"maintainers":[{"name":"mgroshans","email":"mikegroshans@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-09-09T06:14:36.500Z","created":"2016-09-09T06:14:36.500Z","0.1.0":"2016-09-09T06:14:36.500Z"}}}