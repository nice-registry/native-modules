{"name":"node-sourcekit","version":"1.0.0-alpha.1","description":"SourceKit bindings for Node.js","engines":{"node":"~6.3.0"},"main":"./lib/node-sourcekit","keywords":["SourceKit","swift","syntax","ast"],"license":"MIT","gypfile":true,"scripts":{"test":"mocha --reporter spec","install":"node-gyp rebuild"},"dependencies":{"bindings":"^1.2.1","nan":"^2.4.0"},"devDependencies":{"chai":"^3.5.0","chai-as-promised":"^5.3.0","mocha":"^3.0.1"},"gitHead":"be699f5972a65ae5aafce36a6351f9bb4be810ac","versions":[{"number":"1.0.0-alpha.1","date":"2016-08-08T21:19:58.631Z"}],"readme":"# node-sourcekit\n\n![Downloads](https://img.shields.io/github/downloads/RLovelett/node-sourcekit/total.svg?style=flat-square)\n![NPM](https://img.shields.io/github/npm/dm/node-sourcekit.svg?style=flat-square)\n![NPM](https://img.shields.io/github/npm/dt/node-sourcekit.svg?style=flat-square)\n![License](https://img.shields.io/github/license/RLovelett/node-sourcekit.svg?style=flat-square)\n\nnode-sourcekit is a native C++ wrapper for the [SourceKit framework](https://github.com/apple/swift/tree/48bfec49fb4e97584caaa409a99fac48d47de6b0/tools/SourceKit)\nthat exposes the SourceKit protocol to Node.js. SourceKit is a framework in the\n[Swift](https://swift.org) language that provides IDE type features for the Swift\nlanguage. Features like indexing, syntax-coloring, code-completion. SourceKit currently only\nsupports the Swift language.\n\nThis project was created to support [vscode-swift](https://github.com/RLovelett/vscode-swift) and [nuclide-swift](https://github.com/facebook/nuclide/tree/master/pkg/nuclide-swift).\n\n## TODO\n\nThe final goal of the package is to provide 100% support for all the known SourceKit\nrequests. The documentented requests can be found in the SourceKit docs in\n[Protocol.md](https://github.com/apple/swift/blob/master/tools/SourceKit/docs/Protocol.md).\n\nThe list of _known_ SourceKit requests _yet_ to to be documented can be found in\n[Swift Bug #2117](https://bugs.swift.org/browse/SR-2117).\n\nAdditionally I would like to provide [Typescript](https://www.typescriptlang.org) type definitions for this project.\n\n## Usage\n\n| node-sourcekit API | SourceKit Protocol |\n| -------------:|:------------|\n| [#cursorinfo](#cursor-info) | [source.request.cursorinfo](https://github.com/apple/swift/blob/master/tools/SourceKit/docs/Protocol.md#cursor-info) |\n\n### Cursor Info\n\nSourceKit is capable of providing information about a specific symbol at a specific\ncursor position, or byte offset, in a document.\n\nTo gather documentation, SourceKit must be given the fully qualified path to a Swift\nsource document.\n\n#### Example\n\n```swift\n// sourcefile.swift\nstruct Foo {\n    let bar: Int\n}\n```\n\n```javascript\nconst SourceKit = require('node-sourcekit');\nlet source = '/full/path/to/sourcefile.swift';\nlet options = {\n    sourcefile: source,\n    offset: 27,\n    compilerargs: [\n        source\n    ]\n};\n// `cursorinfo` returns an ES6 `Promise`\nSourceKit.cursorinfo(options).then(console.log);\n// The output should look similar to:\n// { 'key.kind': 'source.lang.swift.decl.struct',\n//   'key.name': 'Foo',\n//   'key.usr': 's:V7example3Foo',\n//   'key.filepath': '/full/path/to/sourcefile.swift',\n//   'key.offset': 27,\n//   'key.length': 3,\n//   'key.typename': 'Foo.Type',\n//   'key.annotated_decl': '<Declaration>struct Foo</Declaration>',\n//   'key.fully_annotated_decl': '<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Foo</decl.name></decl.struct>',\n//   'key.typeusr': '_Tt' }\n```\n\n## Development/Contributing\n\nThere are a set of tests that are expected to be passing before an contribution will\nbe accepted. To run these checkout the code and then run the following:\n\n```\nnpm install\nnpm test\n```\n\n### Xcode\n\nI found an invaluable guide [How to debug node.js addons in xcode?](https://github.com/anvaka/how-to-debug-node-js-addons).\n\nIf you want to be able to debug the C++ code in this project that is the best resource\nI have found to date.\n\n### Getting Started\n\nAfter I had struggled for awhile I found this series,\n[Getting your C++ to the Web with Node.js by Scott Frees](https://blog.scottfrees.com/getting-your-c-to-the-web-with-node-js),\nand I really wish I had found it to start with. It is thorough and wonderful.\n\nThe most illuminating in the series, with respect to node-sourcekit, is\n[Part 4: Building an Asynchronous C++ Addon for Node.js using Nan](https://blog.scottfrees.com/building-an-asynchronous-c-addon-for-node-js-using-nan).\n\nAdditionally a few other resources I've found can be found\n[here](https://gist.github.com/dmh2000/9519489)\nand\n[here](https://github.com/paulhauner/example-async-node-addon).\n\nHope that helps!\n\n## License\n\n![MIT License](https://img.shields.io/github/license/RLovelett/node-sourcekit.svg?style=flat-square)\n","created":"2016-08-08T21:19:58.631Z","modified":"2016-08-08T21:19:58.631Z","lastPublisher":{"name":"rlovelett","email":"ryan@lovelett.me"},"owners":[{"name":"rlovelett","email":"ryan@lovelett.me"}],"other":{"_attachments":{},"_from":".","_id":"node-sourcekit","_nodeVersion":"6.3.1","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/node-sourcekit-1.0.0-alpha.1.tgz_1470691196239_0.5588738883379847"},"_npmUser":{"name":"rlovelett","email":"ryan@lovelett.me"},"_npmVersion":"3.10.3","_rev":"1-662b46aa4d3db40699577d2890c7f4b4","_shasum":"01bb206dc78dd522b3409e7f33b763b20f82bb7a","author":{"name":"Ryan Lovelett","email":"ryan@lovelett.me","url":"https://github.com/RLovelett"},"directories":{},"dist-tags":{"latest":"1.0.0-alpha.1"},"dist":{"shasum":"01bb206dc78dd522b3409e7f33b763b20f82bb7a","tarball":"http://registry.npmjs.org/node-sourcekit/-/node-sourcekit-1.0.0-alpha.1.tgz"},"maintainers":[{"name":"rlovelett","email":"ryan@lovelett.me"}],"readmeFilename":"README.md","time":{"modified":"2016-08-08T21:19:58.631Z","created":"2016-08-08T21:19:58.631Z","1.0.0-alpha.1":"2016-08-08T21:19:58.631Z"}}}