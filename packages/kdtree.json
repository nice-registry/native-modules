{"name":"kdtree","version":"0.1.2","description":"Basic libkdtree binding to node","main":"./build/Release/kdtree","scripts":{"test":"make test","install":"node-gyp rebuild"},"repository":"https://github.com/justinethier/node-kdtree","license":"MIT","engines":{"node":">=v0.8.x"},"dependencies":{"nan":"2.4.x"},"gypfile":true,"gitHead":"a6e7dbbcf8084b06001664f821fe5f0b0c6eb9ba","homepage":"https://github.com/justinethier/node-kdtree#readme","versions":[{"number":"0.0.1","date":"2011-03-20T03:06:54.780Z"},{"number":"0.0.2","date":"2011-03-21T02:59:35.552Z"},{"number":"0.0.3","date":"2011-03-22T02:53:53.878Z"},{"number":"0.0.4","date":"2011-03-23T03:02:44.325Z"},{"number":"0.0.5","date":"2012-04-18T13:40:20.183Z"},{"number":"0.0.6","date":"2012-04-18T13:48:45.937Z"},{"number":"0.0.7","date":"2013-03-19T17:43:38.682Z"},{"number":"0.0.8","date":"2014-03-12T20:49:07.799Z"},{"number":"0.0.9","date":"2014-03-24T02:45:08.516Z"},{"number":"0.0.10","date":"2014-03-24T02:49:39.368Z"},{"number":"0.1.0","date":"2015-03-05T14:59:32.902Z"},{"number":"0.1.1","date":"2016-12-01T17:26:52.072Z"},{"number":"0.1.2","date":"2016-12-02T17:25:11.637Z"}],"readme":"[<img src=\"https://raw.githubusercontent.com/justinethier/node-kdtree/master/doc/node-kdtree-logo.png\" alt=\"\">](https://github.com/justinethier/node-kdtree) \n#node-kdtree\n\nnode-kdtree is a node.js addon that defines a wrapper to libkdtree, allowing one to work with KD trees directly in node. A [KD tree](http://en.wikipedia.org/wiki/Kd-tree) is a data structure that organizes points in a multi-dimensional space, and in particular is useful for performing efficient nearest neighbor searches.\n\n## Dependencies\nThe [kdtree](https://github.com/jtsiomb/kdtree) C library is required. In order to install, get the latest version from [here](https://github.com/jtsiomb/kdtree/releases) and run the following commands:\n\n    ./configure\n    make\n    sudo make install PREFIX=/usr \n\n## Installation\nThe easiest way to install node-kdtree is to use the [npm](https://github.com/isaacs/npm) package manager:\n\n    npm install kdtree\n\n## Usage\n\n###Creating a tree\nYou may create a tree by instantiating a new `KDTree` object:\n\n    var kd = require('kdtree');\n    var tree = new kd.KDTree(3); // A new tree for 3-dimensional points\n\nWhen creating a new tree we can specify the dimensions of the data. For example, a three-dimensional tree will contain points of the form (x, y, z). If a dimension is not specified, the tree defaults to three dimensions.\n\n###Adding data to a tree\nData may be added to the tree using the `insert` method:\n\n    tree.insert(1, 2, 3);\n    tree.insert(10, 20, 30);\n\nThere must be one argument for each dimension of the data - for example, a three dimensional tree would have three arguments to `insert`. An optional data parameter may also be specified to store a data value alongside the point data:\n\n    tree.insert(39.285785, -76.610262, \"USS Constellation\");\n\n###Nearest neighbor searches\nThe `nearest` method is used to find the point in the tree that is closest to a target point. For example:\n\n    > tree.nearest(39.273889, -76.738056);\n    [39.272051, -76.731917, \"Bill's Music, Inc.\"]\n\n`nearest` will return an array containing closest point, or an empty array if no points were found. As shown above, if the point contains a data value, that value will also be returned at the end of the array.\n\n\nA `nearestRange` method is also provided, which allows us to find all of the points within a given range. For example:\n\n    > tree.nearestRange(0, 0, 3);\n    [ [ 1, 1 ],\n      [ 0, 2 ],\n      [ 2, 0 ],\n      [ 1, 0 ],\n      [ 0, 1 ],\n      [ 0, 0 ] ]\n\nThe first arguments to `nearestRange` are the components of the point to begin searching at. The last argument is the search range.\n\n##API\n\n[API documentation](https://github.com/justinethier/node-kdtree/blob/master/doc/API.markdown)\n\n##Credits\n\nnode-kdtree is developed by [Justin Ethier](http://github.com/justinethier).\n\nThanks to John Tsiombikas for developing libkdtree!\n\nPatches are welcome; please send via pull request on github.\n","starsCount":3,"created":"2011-03-20T03:06:54.639Z","modified":"2016-12-02T17:25:11.637Z","lastPublisher":{"name":"justinethier","email":"justin.ethier@gmail.com"},"owners":[{"name":"justinethier","email":"justin.ethier@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"kdtree","_nodeVersion":"7.2.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/kdtree-0.1.2.tgz_1480699511082_0.5670805161353201"},"_npmUser":{"name":"justinethier","email":"justin.ethier@gmail.com"},"_npmVersion":"4.0.2","_rev":"3-982b6abca6066aa5938eab3e92654d2b","_shasum":"cdadf2fb9bb0c0b1b65e7805468f9e9ba9a8942f","author":{"name":"Justin Ethier"},"bugs":{"url":"https://github.com/justinethier/node-kdtree/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"cdadf2fb9bb0c0b1b65e7805468f9e9ba9a8942f","tarball":"http://registry.npmjs.org/kdtree/-/kdtree-0.1.2.tgz"},"maintainers":[{"name":"justinethier","email":"justin.ethier@gmail.com"}],"readmeFilename":"README.markdown","time":{"modified":"2016-12-02T17:25:11.637Z","created":"2011-03-20T03:06:54.639Z","0.0.1":"2011-03-20T03:06:54.780Z","0.0.2":"2011-03-21T02:59:35.552Z","0.0.3":"2011-03-22T02:53:53.878Z","0.0.4":"2011-03-23T03:02:44.325Z","0.0.5":"2012-04-18T13:40:20.183Z","0.0.6":"2012-04-18T13:48:45.937Z","0.0.7":"2013-03-19T17:43:38.682Z","0.0.8":"2014-03-12T20:49:07.799Z","0.0.9":"2014-03-24T02:45:08.516Z","0.0.10":"2014-03-24T02:49:39.368Z","0.1.0":"2015-03-05T14:59:32.902Z","0.1.1":"2016-12-01T17:26:52.072Z","0.1.2":"2016-12-02T17:25:11.637Z"},"users":{"luk":true,"kai5263499":true,"mast4461":true}}}