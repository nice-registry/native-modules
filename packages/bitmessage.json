{"name":"bitmessage","version":"0.6.6","description":"JavaScript Bitmessage library","main":"./lib/index.js","browser":{"./lib/platform.js":"./lib/platform.browser.js"},"scripts":{"install":"node-gyp rebuild || exit 0","test":"ALL_TESTS=1 mocha && ALL_TESTS=1 xvfb-run -a karma start --browsers Chromium && ALL_TESTS=1 xvfb-run -a karma start --browsers Firefox && jshint .","m":"mocha","kc":"xvfb-run -a karma start --browsers Chromium","kf":"xvfb-run -a karma start --browsers Firefox","j":"jshint .","d":"jsdoc -c jsdoc.json","mv-docs":"rm -rf docs && jsdoc -c jsdoc.json && D=`mktemp -d` && mv docs \"$D\" && git checkout gh-pages && rm -rf docs && mv \"$D/docs\" . && rm -rf \"$D\""},"repository":"https://github.com/bitchan/bitmessage","keywords":["bitmessage","crypto","library","messaging"],"license":"CC0-1.0","homepage":"https://github.com/bitchan/bitmessage","devDependencies":{"chai":"*","jsdoc":"^3.3.2","jshint":"*","karma":"^0.12.31","karma-browserify":"^2.0.0","karma-chrome-launcher":"^0.1.7","karma-cli":"~0.0.4","karma-env-preprocessor":"^0.1.0","karma-firefox-launcher":"^0.1.4","karma-mocha":"^0.1.10","karma-mocha-reporter":"^0.3.1","mocha":"*"},"dependencies":{"bn.js":"^3.0.1","bs58":"^2.0.0","buffer-equal":"~0.0.1","eccrypto":"^1.0.3","es6-promise":"^3.0.2","hash.js":"^1.0.2","nan":"^2.1.0","object-assign":"^2.0.0","sha.js":"^2.3.1","webworkify":"^1.0.1","bignum":"^0.11.0"},"optionalDependencies":{"bignum":"^0.11.0"},"gitHead":"399e227815e893d3c6ed5de465d52cef249491c7","versions":[{"number":"0.1.0","date":"2014-12-18T16:53:05.299Z"},{"number":"0.1.1","date":"2014-12-28T17:22:49.772Z"},{"number":"0.2.0","date":"2015-01-06T01:29:02.165Z"},{"number":"0.3.0","date":"2015-01-13T23:39:47.801Z"},{"number":"0.4.0","date":"2015-01-31T11:56:24.691Z"},{"number":"0.5.0","date":"2015-02-12T10:47:02.074Z"},{"number":"0.6.0","date":"2015-02-24T17:23:30.819Z"},{"number":"0.6.1","date":"2015-02-28T19:56:58.578Z"},{"number":"0.6.2","date":"2015-03-16T19:32:30.022Z"},{"number":"0.6.3","date":"2015-05-29T12:16:11.711Z"},{"number":"0.6.4","date":"2015-07-12T18:39:14.879Z"},{"number":"0.6.5","date":"2015-07-13T19:12:39.459Z"},{"number":"0.6.6","date":"2015-11-13T19:36:27.007Z"}],"readme":"# bitmessage [![Build Status](https://travis-ci.org/bitchan/bitmessage.svg?branch=master)](https://travis-ci.org/bitchan/bitmessage)\n\n[![NPM](https://nodei.co/npm/bitmessage.png?downloads=true)](https://www.npmjs.com/package/bitmessage)\n\nJavaScript Bitmessage library for both browserify and node. The goal of this project is to implement Bitmessage protocol v3 for both platforms at the maximum possible level (we still can't create TCP connections or listen for incoming connections in the Browser but the Proof of work and crypto is fully doable).\n\nPublic library API is currently in alpha stage, breaking changes are very likely to happen.\n\nAPI documentation is available [here](https://bitchan.github.io/bitmessage/docs/).\n\n## References\n\n* [Bitmessage wiki](https://bitmessage.org/wiki/Main_Page)\n* [Protocol specification](https://bitmessage.org/wiki/Protocol_specification)\n* [Whitepaper](https://bitmessage.org/bitmessage.pdf)\n\n## Feature matrix\n\n- [x] Crypto\n  - [x] SHA-1\n  - [x] SHA-256\n  - [x] SHA-512\n  - [x] RIPEMD-160\n  - [x] PRNG\n  - [x] ECC keys handling\n  - [x] ECDSA\n  - [x] ECIES\n- [x] Common structures\n  - [x] message\n  - [x] object\n  - [x] var_int\n  - [x] var_str\n  - [x] var_int_list\n  - [x] net_addr\n  - [x] inv_vect\n  - [x] encrypted\n  - [x] service features\n  - [x] pubkey features\n- [x] Message types\n  - [x] version\n  - [x] addr\n  - [x] inv\n  - [x] getdata\n  - [x] error\n- [x] Object types\n  - [x] getpubkey\n  - [x] pubkey\n  - [x] msg\n  - [x] broadcast\n- [x] WIF\n- [x] POW\n- [x] High-level classes\n  - [x] Address\n  - [x] UserAgent\n- [ ] PyBitmessage configs parsing\n  - [ ] keys.dat\n  - [ ] knownnodes.dat\n  - [ ] messages.dat\n\n## Usage\n\n### Address\n\n```js\nvar Address = require(\"bitmessage\").Address;\n\n// Generate a new random Bitmessage identity.\nvar addr1 = Address.fromRandom();\nconsole.log(\"New random Bitmessage address:\", addr1.encode());\n\n// Or create it from passphrase.\nvar addr2 = Address.fromPassphrase(\"test\");\nconsole.log(\"Deterministic Bitmessage address:\", addr2.encode());\n```\n\n### Structures\n\n```js\nvar structs = require(\"bitmessage\").structs;\n\nvar encoded = Buffer.concat([\n  structs.var_int.encode(4),\n  Buffer(\"test\"),\n  structs.var_str.encode(\"test2\"),\n  structs.var_int_list.encode([1, 2, 3]),\n]);\n\nvar decoded1 = structs.var_str.decode(encoded);\nconsole.log(decoded1.str);  // test\nvar decoded2 = structs.var_str.decode(decoded1.rest);\nconsole.log(decoded2.str);  // test2\nvar decoded3 = structs.var_int.decode(decoded2.rest);\nconsole.log(decoded3.value);  // 3\nvar decoded4 = structs.var_int_list.decode(decoded2.rest);\nconsole.log(decoded4.list);  // [1, 2, 3]\n```\n\n### Messages\n\n```js\nvar structs = require(\"bitmessage\").structs;\nvar messages = require(\"bitmessage\").messages;\n\n// Simple encoding and decoding:\nvar vermsg = messages.version.encode({\n  remoteHost: \"1.1.1.1\",\n  remotePort: 8444,\n});\nconsole.log(messages.version.decode(vermsg).remoteHost);  // 1.1.1.1\n\n// Low-level encoding and decoding:\nvar addrPayload = messages.addr.encodePayload([\n  {host: \"2.2.2.2\", port: 28444},\n]);\nvar addrmsg = structs.message.encode(\"addr\", addrPayload);\nvar decoded = structs.message.decode(addrmsg);\nconsole.log(decoded.command);  // addr\nvar addr = messages.addr.decodePayload(decoded.payload);\nconsole.log(addr.addrs[0].host);  // 2.2.2.2\n\n// Encode with empty payload:\nvar verackmsg = structs.message.encode(\"verack\");\nconsole.log(structs.message.decode(verackmsg).command);  // verack\n```\n\n### Networking\n\nYou will need to install [bitmessage-transports](https://github.com/bitchan/bitmessage-transports) library.\n\n```js\nvar messages = require(\"bitmessage\").messages;\nvar TcpTransport = require(\"bitmessage-transports\").TcpTransport;\n\nvar tcp = new TcpTransport({\n  dnsSeeds: [[\"bootstrap8444.bitmessage.org\", 8444]],\n});\n\ntcp.bootstrap().then(function(nodes) {\n  var remoteHost = nodes[0][0];\n  var remotePort = nodes[0][1];\n  console.log(\"Connecting to\", nodes[0]);\n  tcp.connect(remotePort, remoteHost);\n});\n\ntcp.on(\"established\", function(version) {\n  console.log(\"Connection established to\", version.userAgent);\n\n  tcp.on(\"message\", function(command, payload) {\n    console.log(\"Got new\", command, \"message\");\n    var decoded;\n    if (command === \"addr\") {\n      decoded = messages.addr.decodePayload(payload);\n      console.log(\"Got\", decoded.addrs.length, \"node addresses\");\n    }\n  });\n});\n```\n\n## License\n\nbitmessage - JavaScript Bitmessage library\n\nWritten in 2014-2015 by Kagami Hiiragi <kagami@genshiken.org>\n\nTo the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.\n\nYou should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\n","starsCount":4,"created":"2014-12-18T16:53:05.299Z","modified":"2017-07-27T13:05:29.562Z","lastPublisher":{"name":"kagami","email":"kagami@genshiken.org"},"owners":[{"name":"kagami","email":"kagami@genshiken.org"}],"other":{"_attachments":{},"_from":".","_id":"bitmessage","_nodeVersion":"4.2.1","_npmUser":{"name":"kagami","email":"kagami@genshiken.org"},"_npmVersion":"2.14.7","_rev":"4-efa59494e96dc7a4b147997d5f07f08d","_shasum":"ac17a2b911d85d9f4e064a90e23581b4c24cf52f","author":{"name":"Kagami Hiiragi"},"bugs":{"url":"https://github.com/bitchan/bitmessage/issues"},"directories":{},"dist-tags":{"latest":"0.6.6"},"dist":{"shasum":"ac17a2b911d85d9f4e064a90e23581b4c24cf52f","tarball":"http://registry.npmjs.org/bitmessage/-/bitmessage-0.6.6.tgz"},"maintainers":[{"name":"kagami","email":"kagami@genshiken.org"}],"readmeFilename":"README.md","time":{"modified":"2017-07-27T13:05:29.562Z","created":"2014-12-18T16:53:05.299Z","0.1.0":"2014-12-18T16:53:05.299Z","0.1.1":"2014-12-28T17:22:49.772Z","0.2.0":"2015-01-06T01:29:02.165Z","0.3.0":"2015-01-13T23:39:47.801Z","0.4.0":"2015-01-31T11:56:24.691Z","0.5.0":"2015-02-12T10:47:02.074Z","0.6.0":"2015-02-24T17:23:30.819Z","0.6.1":"2015-02-28T19:56:58.578Z","0.6.2":"2015-03-16T19:32:30.022Z","0.6.3":"2015-05-29T12:16:11.711Z","0.6.4":"2015-07-12T18:39:14.879Z","0.6.5":"2015-07-13T19:12:39.459Z","0.6.6":"2015-11-13T19:36:27.007Z"},"users":{"ajsb85":true,"thejeshgn.com":true,"thejeshgn":true,"ukuli":true}}}