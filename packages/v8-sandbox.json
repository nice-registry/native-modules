{"name":"v8-sandbox","version":"0.0.2","description":"V8 Sandbox","homepage":"http://github.com/fulcrumapp/v8-sandbox","main":"dist/index.js","scripts":{"configure":"./node_modules/node-gyp/bin/node-gyp.js configure","build":"./node_modules/node-gyp/bin/node-gyp.js configure build && node_modules/.bin/babel lib --out-dir dist --source-maps","rebuild":"./node_modules/node-gyp/bin/node-gyp.js configure rebuild","test":"mocha test/setup.js test/index.js","clean":"rm -rf dist build","lint":"eslint 'lib/**/*.js'","install":"node-pre-gyp install --fallback-to-build","watch":"babel lib --out-dir dist --source-maps --watch"},"license":"BSD","repository":"https://github.com/fulcrumapp/v8-sandbox","eslintConfig":{"extends":"fulcrum"},"devDependencies":{"aws-sdk":"^2.49.0","babel-cli":"^6.9.0","babel-core":"^6.9.0","babel-eslint":"^6.0.4","babel-preset-es2015-node5":"^1.2.0","babel-preset-stage-1":"^6.5.0","chai":"^3.5.0","chai-as-promised":"^5.3.0","eslint":"^2.10.2","eslint-config-fulcrum":"^1.0.1","eslint-plugin-react":"^5.1.1","mocha":"^2.4.5","prettysize":"0.0.3"},"dependencies":{"async":"^2.4.1","bindings":"^1.2.1","eslint-plugin-babel":"^4.1.1","generic-pool":"^2.4.2","nan":"^2.3.3","node-gyp":"^3.3.1","node-pre-gyp":"^0.6.34","request":"^2.81.0"},"binary":{"module_name":"sandbox","module_path":"./build/Release/","host":"https://zhm.s3.amazonaws.com/v8-sandbox/"},"keywords":["sandbox","v8","js","javascript"],"gitHead":"bbcf0820f18348ce8308eeeba9a48772d474fb0e","versions":[{"number":"0.0.1","date":"2017-05-30T00:43:33.195Z"},{"number":"0.0.2","date":"2017-05-30T01:13:55.030Z"}],"readme":"# v8-sandbox\n\n[![Build Status](https://travis-ci.org/fulcrumapp/v8-sandbox.svg?branch=master)](https://travis-ci.org/fulcrumapp/v8-sandbox)\n[![Build status](https://ci.appveyor.com/api/projects/status/1drnn1nksas414gr?svg=true)](https://ci.appveyor.com/project/Fulcrum/v8-sandbox)\n\n\nSafely execute arbitrary untrusted Javascript. This module implements a hermetically sealed Javascript environment that can be used to run any Javascript code without being able to escape the sandbox. V8 is initialized and executed entirely from C++ so it's impossible for the JS stack frames to lead back to the nodejs environment. It's usable from a nodejs process, but the JS environment is pure V8 ECMA-262.\n\n## Installation\n\n```sh\nnpm install v8-sandbox\n```\n\n## API\n\n```js\nimport Sandbox from 'v8-sandbox';\n\nconst sandbox = new Sandbox();\n\nconst js = `\n\n// arbitrary JS, call setResult to set the final result of the script to accommodate async code\nsetResult({value: 1});\n\n`;\n\nsandbox.execute(js, 3000, (err, value) => {\n  console.log(value);\n});\n```\n\n```js\nimport Sandbox from 'v8-sandbox';\n\nconst sandbox = new Sandbox();\n\nconst js = `\n\nwhile (true) {}\n\n`;\n\nsandbox.execute(js, 3000, (err, value) => {\n  // timeout\n  console.log(err.isTimeout);\n});\n```\n","created":"2017-05-30T00:43:33.195Z","modified":"2017-05-30T01:13:55.030Z","lastPublisher":{"name":"zhm","email":"zac.mccormick@gmail.com"},"owners":[{"name":"zhm","email":"zac.mccormick@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"v8-sandbox","_nodeVersion":"7.10.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/v8-sandbox-0.0.2.tgz_1496106833852_0.5107071194797754"},"_npmUser":{"name":"zhm","email":"zac.mccormick@gmail.com"},"_npmVersion":"4.2.0","_rev":"2-5de18f8a13c315f3cb1edabcce30a912","_shasum":"063bee19ba5cc4008277af10896acb3404aa77f5","author":{"name":"Zac McCormick","email":"zac.mccormick@gmail.com","url":"http://github.com/zhm"},"bugs":{"url":"https://github.com/fulcrumapp/v8-sandbox/issues"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"063bee19ba5cc4008277af10896acb3404aa77f5","tarball":"https://registry.npmjs.org/v8-sandbox/-/v8-sandbox-0.0.2.tgz"},"maintainers":[{"name":"zhm","email":"zac.mccormick@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-30T01:13:55.030Z","created":"2017-05-30T00:43:33.195Z","0.0.1":"2017-05-30T00:43:33.195Z","0.0.2":"2017-05-30T01:13:55.030Z"}}}