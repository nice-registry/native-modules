{"name":"node-icu-charset-detector","version":"0.2.0","main":"./node-icu-charset-detector.js","description":"Simple binding for ICU charset detector","keywords":["charset-detection","icu"],"repository":"https://github.com/mooz/node-icu-charset-detector","homepage":"http://github.com/mooz/node-icu-charset-detector","licenses":[{"type":"MIT"}],"engines":{"node":">=0.6"},"dependencies":{"nan":"^2.3.3"},"scripts":{"install":"node-gyp rebuild"},"gypfile":true,"gitHead":"d490754f5eace41a5f4a9f600c722b4076b7e539","versions":[{"number":"0.0.1","date":"2012-05-17T07:03:09.929Z"},{"number":"0.0.2","date":"2012-05-17T07:05:31.021Z"},{"number":"0.0.3","date":"2012-05-17T07:30:17.583Z"},{"number":"0.0.4","date":"2012-11-24T15:02:46.379Z"},{"number":"0.0.5","date":"2012-11-26T04:23:05.641Z"},{"number":"0.0.6","date":"2013-02-23T13:36:07.814Z"},{"number":"0.0.7","date":"2013-09-04T13:39:05.122Z"},{"number":"0.1.0","date":"2015-02-18T14:34:09.879Z"},{"number":"0.1.1","date":"2015-09-09T12:13:04.139Z"},{"number":"0.1.2","date":"2015-09-20T13:09:29.394Z"},{"number":"0.1.3","date":"2015-09-22T14:19:52.414Z"},{"number":"0.1.4","date":"2015-12-13T14:09:19.814Z"},{"number":"0.2.0","date":"2016-05-10T13:45:55.272Z"}],"readme":"# ICU Character Set Detection for Node.js\n\n>Character set detection is the process of determining the character set, or encoding, of character data in an unknown format.\n\nA simple binding of ICU character set detection (http://userguide.icu-project.org/conversion/detection) for Node.js.\n\n## Installation\n\nAt first, install `libicu` into your system (See [this instruction](#installing-icu) for details).\n\nAfter that, install `node-icu-charset-detector` from npm.\n\n    npm install node-icu-charset-detector\n\n### Installing ICU\n\n#### Linux\n\n* Debian (Ubuntu)\n\n    apt-get install libicu-dev\n\n* Gentoo\n\n    emerge icu\n\n* Fedora/CentOS\n\n    yum install libicu-devel\n\n#### OSX\n\n* MacPorts\n\n    port install icu +devel\n\n* Homebrew\n\n```shell\nbrew install icu4c\nbrew link icu4c --force\n```\n\nIf experiencing issues with 'homebrew' installing version 50.1 of icu4c, try the following:\n\n```shell\nbrew search icu4c\nbrew tap homebrew/versions\nbrew versions icu4c\ncd $(brew --prefix) && git pull --rebase\ngit checkout c25fd2f $(brew --prefix)/Library/Formula/icu4c.rb\nbrew install icu4c\n```\n\n* From source\n\n```shell\ncurl -O http://download.icu-project.org/files/icu4c/52.1/icu4c-52_1-src.tgz\ntar xzvf icu4c-4_4_2-src.tgz\ncd icu/source\nchmod +x runConfigureICU configure install-sh\n./runConfigureICU MacOSX\nmake\nsudo make install\nxcode-select --install\n```\n\n## Usage\n\n### Simple usage\n\n`node-icu-charset-detector` provides a function `detectCharset(buffer)`, where `buffer` is an instance of `Buffer` whose charset should be detected.\n\n```javascript\nvar charsetDetector = require(\"node-icu-charset-detector\");\n\nvar buffer = fs.readFileSync(\"/path/to/the/file\");\nvar charset = charsetDetector.detectCharset(buffer);\n\nconsole.log(\"charset name: \" + charset.toString());\nconsole.log(\"language: \" + charset.language);\nconsole.log(\"detection confidence: \" + charset.confidence);\n```\n\n`detectCharset(buffer)` returns the detected charset name for `buffer`, and the returned charset name has two extra properties `language` and `confidence`:\n\n- `charset.language`\n  - language name for the detected character set.\n- `charset.confidence`\n  - confidence of the charset detection for `charset`.\n\n### Leveraging node-iconv\n\nSince ICU itself does not have a feature to convert character sets, you may need to use `node-iconv` (https://github.com/bnoordhuis/node-iconv), which has a powerful character sets converting feature.\n\nHere is a simple example to leverage `node-iconv` to convert character sets not supported by Node itself.\n\n```javascript\nfunction bufferToString(buffer) {\n  var charsetDetector = require(\"node-icu-charset-detector\");\n  var charset = charsetDetector.detectCharset(buffer).toString();\n\n  try {\n    return buffer.toString(charset);\n  } catch (x) {\n    var Iconv = require(\"iconv\").Iconv;\n    var charsetConverter = new Iconv(charset, \"utf8\");\n    return charsetConverter.convert(buffer).toString();\n  }\n}\n\nvar buffer = fs.readFileSync(\"/path/to/the/file\");\nvar bufferString = bufferToString(buffer);\n```\n","starsCount":2,"created":"2012-05-17T07:03:07.125Z","modified":"2016-05-10T13:45:55.272Z","lastPublisher":{"name":"mooz","email":"stillpedant@gmail.com"},"owners":[{"name":"mooz","email":"stillpedant@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"node-icu-charset-detector","_nodeVersion":"5.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/node-icu-charset-detector-0.2.0.tgz_1462887954834_0.8790935366414487"},"_npmUser":{"name":"mooz","email":"stillpedant@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-025c90cca646eeafe56b8171c20886bd","_shasum":"c2320da374ddcb671fc54cb4a0e041e156ffd639","author":{"name":"Masafumi Oyamada","email":"stillpedant@gmail.com","url":"http://mooz.github.com/"},"bugs":{"url":"http://github.com/mooz/node-icu-charset-detector/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"c2320da374ddcb671fc54cb4a0e041e156ffd639","tarball":"http://registry.npmjs.org/node-icu-charset-detector/-/node-icu-charset-detector-0.2.0.tgz"},"maintainers":[{"name":"mooz","email":"stillpedant@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-05-10T13:45:55.272Z","created":"2012-05-17T07:03:07.125Z","0.0.1":"2012-05-17T07:03:09.929Z","0.0.2":"2012-05-17T07:05:31.021Z","0.0.3":"2012-05-17T07:30:17.583Z","0.0.4":"2012-11-24T15:02:46.379Z","0.0.5":"2012-11-26T04:23:05.641Z","0.0.6":"2013-02-23T13:36:07.814Z","0.0.7":"2013-09-04T13:39:05.122Z","0.1.0":"2015-02-18T14:34:09.879Z","0.1.1":"2015-09-09T12:13:04.139Z","0.1.2":"2015-09-20T13:09:29.394Z","0.1.3":"2015-09-22T14:19:52.414Z","0.1.4":"2015-12-13T14:09:19.814Z","0.2.0":"2016-05-10T13:45:55.272Z"},"users":{"luhuan":true,"nex":true}}}