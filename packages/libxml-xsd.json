{"name":"libxml-xsd","version":"0.5.2","description":"XSD validator based on libxml","main":"index.js","scripts":{"test":"mocha -R spec","docs":"jsdoc2md index.js --template readme.hbs > README.md","install":"node-gyp rebuild"},"keywords":["xsd","xml","schema","validation","libxml"],"homepage":"https://github.com/albanm/node-libxml-xsd","repository":"https://github.com/albanm/node-libxml-xsd","license":"MIT","dependencies":{"bindings":"^1.2.1","libxmljs-mt":"0.16.1","nan":"^2.1.0"},"devDependencies":{"mocha":"^1.21.4","should":"^4.0.4","jsdoc-to-markdown":"^0.5.7"},"gypfile":true,"gitHead":"b69037789ce1027c163e5cc34758929e9e2df08d","versions":[{"number":"0.1.0","date":"2014-09-13T20:28:32.594Z"},{"number":"0.2.0","date":"2014-09-14T19:08:43.657Z"},{"number":"0.4.0","date":"2015-12-04T20:07:09.363Z"},{"number":"0.4.1","date":"2016-01-06T19:56:10.538Z"},{"number":"0.5.0","date":"2016-01-06T20:10:50.229Z"},{"number":"0.5.1","date":"2016-01-13T12:09:16.106Z"},{"number":"0.5.2","date":"2016-02-23T20:39:24.773Z"}],"readme":"node-libxml-xsd\n===============\n\n[![Build status](https://travis-ci.org/albanm/node-libxml-xsd.svg)](https://travis-ci.org/albanm/node-libxml-xsd)\n[![Code Climate](https://codeclimate.com/github/albanm/node-libxml-xsd/badges/gpa.svg)](https://codeclimate.com/github/albanm/node-libxml-xsd)\n[![NPM version](https://badge.fury.io/js/libxml-xsd.svg)](http://badge.fury.io/js/libxml-xsd)\n\n*XSD validation for node.js using [libxml](http://xmlsoft.org/)*\n\nInstallation\n------------\n\n\tnpm install libxml-xsd\n\nBasic usage\n-----------\n\n```js\nvar xsd = require('libxml-xsd');\n\nxsd.parseFile(schemaPath, function(err, schema){\n  schema.validate(documentString, function(err, validationErrors){\n    // err contains any technical error\n    // validationError is an array, null if the validation is ok\n  });  \n});\n```\n\nLibxmljs integration\n--------------------\n\nNode-libxml-xsd depends on [libxmljs](https://github.com/polotek/libxmljs/issues/226) that bundles libxml.\n\nThe libxmljs module required by node-libxml-xsd is exposed as ```require('libxml-xsd').libxmljs```. This prevents depending on libxmljs twice which is not optimal and source of weird bugs.\n\nIt is possible to work with libxmljs documents instead of strings as inputs to the *parse()* and *validate()* functions.\n\nImports and includes\n--------------------\n\nXSD includes are supported but relative paths must be given from the execution directory, usually the root of the project.\n\nIncludes are resolved when parsing the schema. Therefore the parsing task becomes IO bound, which is why you should not use synchronous parsing when you expect some includes.\n\nSync or async\n-------------\n\nThe same *parse()* and *validate()* functions can be used in synchronous mode simply by removing the callback parameter.\nIn this case if a technical error occurs it will be thrown and validation errors will be returned.\n\n```js\nvar xsd = require('libxml-xsd');\n\nvar schema = xsd.parse(schemaString);\n\nvar validationErrors = schema.validate(documentString);\n\n```\n\nThe asynchronous functions use the [libuv work queue](http://nikhilm.github.io/uvbook/threads.html#libuv-work-queue)\nto provide parallelized computation in node.js worker threads. This makes it non-blocking for the main event loop of node.js.\n\nNote that libxmljs parsing doesn't use the work queue, so only a part of the process is actually parallelized.\n\nThe tasks being mostly CPU bound and very fast it is not a big problem to use synchronous mode.\nBut remember that if you use some includes the parsing task becomes IO bound.\n\nEnvironment compatibility\n-------------------------\n\nFor now 64bits linux and 32bits windows are confirmed. Other environments are probably ok, but not checked. Please report an issue if you encounter some difficulties.\n\nNode-libxml-xsd depends on [node-gyp](https://github.com/TooTallNate/node-gyp), you will need to meet its requirements. This can be a bit painful mostly for windows users. The node-gyp version bundled in your npm will have to be greater than 0.13.0, so you might have to follow [these instructions to upgrade](https://github.com/TooTallNate/node-gyp/wiki/Updating-npm's-bundled-node-gyp). There is no system dependancy otherwise as libxml is bundled by libxmljs.\n\nAPI Reference\n=============\nNode.js bindings for XSD validation from libxml\n\n**Members**\n\n* [libxml-xsd](#module_libxml-xsd)\n  * [libxml-xsd.parse(source, [callback])](#module_libxml-xsd.parse)\n  * [libxml-xsd.parseFile(sourcePath, callback)](#module_libxml-xsd.parseFile)\n  * [class: libxml-xsd~Schema](#module_libxml-xsd..Schema)\n    * [new libxml-xsd~Schema(schemaDoc, schemaObj)](#new_module_libxml-xsd..Schema)\n    * [schema.validate(source, [callback])](#module_libxml-xsd..Schema#validate)\n    * [schema.validateFile(sourcePath, callback)](#module_libxml-xsd..Schema#validateFile)\n\n<a name=\"module_libxml-xsd.parse\"></a>\n##libxml-xsd.parse(source, [callback])\nParse a XSD schema\n\nIf no callback is given the function will run synchronously and return the result or throw an error.\n\n**Params**\n\n- source `string` | `Document` - The content of the schema as a string or a [libxmljs document](https://github.com/polotek/libxmljs/wiki/Document)  \n- \\[callback\\] <code>[parseCallback](#parseCallback)</code> - The callback that handles the response. Expects err and Schema object.  \n\n**Returns**: `Schema` - Only if no callback is given.  \n<a name=\"module_libxml-xsd.parseFile\"></a>\n##libxml-xsd.parseFile(sourcePath, callback)\nParse a XSD schema\n\n**Params**\n\n- sourcePath `stringPath` - The path of the file  \n- callback <code>[parseFileCallback](#parseFileCallback)</code> - The callback that handles the response. Expects err and Schema object.  \n\n<a name=\"module_libxml-xsd..Schema\"></a>\n##class: libxml-xsd~Schema\n**Members**\n\n* [class: libxml-xsd~Schema](#module_libxml-xsd..Schema)\n  * [new libxml-xsd~Schema(schemaDoc, schemaObj)](#new_module_libxml-xsd..Schema)\n  * [schema.validate(source, [callback])](#module_libxml-xsd..Schema#validate)\n  * [schema.validateFile(sourcePath, callback)](#module_libxml-xsd..Schema#validateFile)\n\n<a name=\"new_module_libxml-xsd..Schema\"></a>\n###new libxml-xsd~Schema(schemaDoc, schemaObj)\nA compiled schema. Do not call this constructor, instead use parse or parseFile.\n\nstore both the source document and the parsed schema\nif we don't store the schema doc it will be deleted by garbage collector and it will result in segfaults.\n\n**Params**\n\n- schemaDoc `Document` - XML document source of the schema  \n- schemaObj `Document` - Simple wrapper of a XSD schema  \n\n**Scope**: inner class of [libxml-xsd](#module_libxml-xsd)  \n<a name=\"module_libxml-xsd..Schema#validate\"></a>\n###schema.validate(source, [callback])\nValidate a XML document over a schema\n\nIf no callback is given the function will run synchronously and return the result or throw an error.\n\n**Params**\n\n- source `string` | `Document` - The XML content to validate with the schema, to be given as a string or a [libxmljs document](https://github.com/polotek/libxmljs/wiki/Document)  \n- \\[callback\\] <code>[validateCallback](#Schema..validateCallback)</code> - The callback that handles the response. Expects err and an array of validation errors, null if none.  \n\n**Returns**: `string` | `Document` - Only if no callback is given. An array of validation errors, null if none.  \n<a name=\"module_libxml-xsd..Schema#validateFile\"></a>\n###schema.validateFile(sourcePath, callback)\nApply a schema to a XML file\n\n**Params**\n\n- sourcePath `string` - The path of the file to read  \n- callback <code>[validateFileCallback](#Schema..validateFileCallback)</code> - The callback that handles the response. Expects err and an array of validation errors null if none.  \n\n*documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown)*.\n","starsCount":5,"created":"2014-09-13T20:28:32.594Z","modified":"2017-08-04T13:19:07.050Z","lastPublisher":{"name":"alban","email":"alban.mouton@gmail.com"},"owners":[{"name":"alban","email":"alban.mouton@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"libxml-xsd","_nodeVersion":"4.3.0","_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/libxml-xsd-0.5.2.tgz_1456259963868_0.6587417863775045"},"_npmUser":{"name":"alban","email":"alban.mouton@gmail.com"},"_npmVersion":"2.14.12","_rev":"3-5975fc7994513dd5571e25549bcc5558","_shasum":"e5e5ee13d301a4d33af3bc4a7886991a5fd15a37","author":{"name":"Alban Mouton","email":"alban.mouton@gmail.com"},"bugs":{"url":"https://github.com/albanm/node-libxml-xsd/issues"},"directories":{},"dist-tags":{"latest":"0.5.2"},"dist":{"shasum":"e5e5ee13d301a4d33af3bc4a7886991a5fd15a37","tarball":"http://registry.npmjs.org/libxml-xsd/-/libxml-xsd-0.5.2.tgz"},"maintainers":[{"name":"alban","email":"alban.mouton@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-08-04T13:19:07.050Z","created":"2014-09-13T20:28:32.594Z","0.1.0":"2014-09-13T20:28:32.594Z","0.2.0":"2014-09-14T19:08:43.657Z","0.4.0":"2015-12-04T20:07:09.363Z","0.4.1":"2016-01-06T19:56:10.538Z","0.5.0":"2016-01-06T20:10:50.229Z","0.5.1":"2016-01-13T12:09:16.106Z","0.5.2":"2016-02-23T20:39:24.773Z"},"users":{"alexcrack":true,"detj":true,"roman-io":true,"billhinderman":true,"mateussampsouza":true}}}