{"name":"ref","description":"Turn Buffer instances into \"pointers\"","keywords":["native","buffer","extensions","c++","pointer","reference","dereference","type","int","long","float","double","byte","64"],"version":"1.3.4","license":"MIT","repository":"https://github.com/TooTallNate/ref","main":"./lib/ref.js","scripts":{"docs":"node docs/compile","test":"mocha -gc --reporter spec --use_strict","install":"node-gyp rebuild"},"dependencies":{"bindings":"1","debug":"2","nan":"2"},"devDependencies":{"dox":"0.4.4","highlight.js":"1","jade":"^0.35.0","marked":"^0.3.2","mocha":"*","weak":"1"},"gypfile":true,"gitHead":"bb9d570157b6e2c0d593b87cd5f69953dada78b9","homepage":"https://github.com/TooTallNate/ref#readme","versions":[{"number":"0.0.1","date":"2012-05-05T04:28:01.070Z"},{"number":"0.0.2","date":"2012-05-05T19:26:46.224Z"},{"number":"0.0.3","date":"2012-05-08T18:29:00.906Z"},{"number":"0.0.4","date":"2012-05-08T19:01:38.249Z"},{"number":"0.0.5","date":"2012-05-09T20:50:59.559Z"},{"number":"0.0.6","date":"2012-05-10T00:31:48.283Z"},{"number":"0.0.7","date":"2012-05-10T01:56:26.816Z"},{"number":"0.0.8","date":"2012-05-12T17:23:16.204Z"},{"number":"0.0.9","date":"2012-05-13T22:53:27.558Z"},{"number":"0.0.10","date":"2012-05-15T21:51:22.751Z"},{"number":"0.0.11","date":"2012-05-18T03:03:58.301Z"},{"number":"0.0.12","date":"2012-05-30T22:46:15.807Z"},{"number":"0.0.13","date":"2012-05-31T04:57:56.867Z"},{"number":"0.0.14","date":"2012-05-31T22:17:59.305Z"},{"number":"0.0.15","date":"2012-05-31T22:40:28.794Z"},{"number":"0.0.16","date":"2012-06-01T17:24:52.456Z"},{"number":"0.0.17","date":"2012-06-06T00:26:54.996Z"},{"number":"0.0.18","date":"2012-06-21T22:11:44.319Z"},{"number":"0.0.19","date":"2012-06-25T19:06:28.920Z"},{"number":"0.0.20","date":"2012-06-28T01:13:45.297Z"},{"number":"0.1.0","date":"2012-07-22T17:40:02.609Z"},{"number":"0.1.1","date":"2012-08-03T18:29:24.593Z"},{"number":"0.1.2","date":"2012-09-02T20:03:15.171Z"},{"number":"0.1.3","date":"2012-09-25T23:46:38.594Z"},{"number":"0.2.0","date":"2014-05-27T04:55:32.097Z"},{"number":"0.2.1","date":"2014-05-27T16:00:59.920Z"},{"number":"0.2.2","date":"2014-06-02T03:33:05.261Z"},{"number":"0.2.3","date":"2014-06-04T22:46:44.999Z"},{"number":"0.3.0","date":"2014-06-08T17:40:06.144Z"},{"number":"0.3.1","date":"2014-06-10T03:49:31.397Z"},{"number":"0.3.2","date":"2014-06-20T03:53:55.696Z"},{"number":"0.3.3","date":"2014-12-30T07:18:50.671Z"},{"number":"0.3.4","date":"2015-01-18T18:01:06.144Z"},{"number":"0.3.5","date":"2015-01-18T18:26:49.360Z"},{"number":"1.0.0","date":"2015-01-20T17:08:05.706Z"},{"number":"1.0.1","date":"2015-03-22T17:58:33.024Z"},{"number":"1.0.2","date":"2015-05-09T17:49:02.608Z"},{"number":"1.1.0","date":"2015-08-27T00:13:15.900Z"},{"number":"1.1.1","date":"2015-09-15T01:22:23.394Z"},{"number":"1.1.2","date":"2015-09-19T18:15:54.090Z"},{"number":"1.1.3","date":"2015-09-23T19:54:35.561Z"},{"number":"1.2.0","date":"2015-10-08T19:14:46.489Z"},{"number":"1.3.0","date":"2015-12-03T00:06:42.859Z"},{"number":"1.3.1","date":"2015-12-03T00:32:57.426Z"},{"number":"1.3.2","date":"2016-01-10T18:48:06.527Z"},{"number":"1.3.3","date":"2016-11-03T17:55:38.735Z"},{"number":"1.3.4","date":"2017-01-27T20:51:20.404Z"}],"readme":"ref\n===\n### Turn Buffer instances into \"pointers\"\n[![Build Status](https://secure.travis-ci.org/TooTallNate/ref.svg)](https://travis-ci.org/TooTallNate/ref)\n[![Build Status](https://ci.appveyor.com/api/projects/status/n8mswogp2im4uot8?svg=true)](https://ci.appveyor.com/project/TooTallNate/ref)\n\n\nThis module is inspired by the old `Pointer` class from node-ffi, but with the\nintent of using Node's fast `Buffer` instances instead of a slow C++ `Pointer`\nclass. These two concepts were previously very similar, but now this module\nbrings over the functionality that Pointers had and Buffers are missing, so\nnow Buffers are a lot more powerful.\n\n### Features:\n\n * Get the memory address of any `Buffer` instance\n * Read/write references to JavaScript Objects into `Buffer` instances\n * Read/write `Buffer` instances' memory addresses to other `Buffer` instances\n * Read/write `int64_t` and `uint64_t` data values (Numbers or Strings)\n * A \"type\" convention, so that you can specify a buffer as an `int *`,\n   and reference/dereference at will.\n * Offers a buffer instance representing the `NULL` pointer\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install ref\n```\n\n\nExamples\n--------\n\n#### referencing and derefencing\n\n``` js\nvar ref = require('ref')\n\n// so we can all agree that a buffer with the int value written\n// to it could be represented as an \"int *\"\nvar buf = new Buffer(4)\nbuf.writeInt32LE(12345, 0)\n\n// first, what is the memory address of the buffer?\nconsole.log(buf.address())  // ← 140362165284824\n\n// using `ref`, you can set the \"type\", and gain magic abilities!\nbuf.type = ref.types.int\n\n// now we can dereference to get the \"meaningful\" value\nconsole.log(buf.deref())  // ← 12345\n\n\n// you can also get references to the original buffer if you need it.\n// this buffer could be thought of as an \"int **\"\nvar one = buf.ref()\n\n// and you can dereference all the way back down to an int\nconsole.log(one.deref().deref())  // ← 12345\n```\n\nSee the [full API Docs][docs] for more examples.\n\n\nThe \"type\" interface\n--------------------\n\nYou can easily define your own \"type\" objects at attach to `Buffer` instances.\nIt just needs to be a regular JavaScript Object that contains the following\nproperties:\n\n| **Name**      | **Data Type**                    | **Description**\n|:--------------|:---------------------------------|:----------------------------------\n| `size`        | Number                           | The size in bytes required to hold this type.\n| `indirection` | Number                           | The current level of indirection of the buffer. Usually this would be _1_, and gets incremented on Buffers from `ref()` calls. A value of less than or equal to _0_ is invalid.\n| `get`         | Function (buffer, offset)        | The function to invoke when dereferencing this type when the indirection level is _1_.\n| `set`         | Function (buffer, offset, value) | The function to invoke when setting a value to a buffer instance.\n| `name`        | String                           | _(optional)_ The name to use during debugging for this type.\n| `alignment`   | Number                           | _(optional)_ The alignment of this type when placed in a struct. Defaults to the type's `size`.\n\nBe sure to check out the Wiki page of [\"Known\nTypes\"](https://github.com/TooTallNate/ref/wiki/Known-%22types%22), for the list\nof built-in ref types, as well as known external type implementations.\n\nFor example, you could define a \"bigint\" type that dereferences into a\n[`bigint`](https://github.com/substack/node-bigint) instance:\n\n``` js\nvar ref = require('ref')\nvar bigint = require('bigint')\n\n// define the \"type\" instance according to the spec\nvar BigintType = {\n    size: ref.sizeof.int64\n  , indirection: 1\n  , get: function (buffer, offset) {\n      // return a bigint instance from the buffer\n      return bigint.fromBuffer(buffer)\n    }\n  , set: function (buffer, offset, value) {\n      // 'value' would be a bigint instance\n      var val = value.toString()\n      return ref.writeInt64(buffer, offset || 0, val)\n    }\n}\n\n// now we can create instances of the type from existing buffers.\n// \"buf\" is some Buffer instance returned from some external data\n// source, which should contain \"bigint\" binary data.\nbuf.type = BigintType\n\n// and now you can create \"bigint\" instances using this generic \"types\" API\nvar val = buf.deref()\n            .add('1234')\n            .sqrt()\n            .shiftLeft(5)\n```\n\nBuild the docs\n--------------\n\nInstall the dev dependencies:\n\n``` bash\n$ npm install\n```\n\nGenerate the docs:\n\n``` bash\n$ npm run docs\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[docs]: http://tootallnate.github.com/ref\n","starsCount":7,"created":"2012-05-05T04:27:59.592Z","modified":"2017-07-30T17:02:22.357Z","lastPublisher":{"name":"tootallnate","email":"nathan@tootallnate.net"},"owners":[{"name":"tootallnate","email":"nathan@tootallnate.net"}],"other":{"_attachments":{},"_from":".","_id":"ref","_nodeVersion":"6.9.4","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ref-1.3.4.tgz_1485550280182_0.7795254453085363"},"_npmUser":{"name":"tootallnate","email":"nathan@tootallnate.net"},"_npmVersion":"3.10.10","_rev":"4-e015162e718d46ed388156f1b835c3fa","_shasum":"724d2bf8ac85f8c8db194d3d85be6efe416bc1e5","author":{"name":"Nathan Rajlich","email":"nathan@tootallnate.net","url":"http://tootallnate.net"},"bugs":{"url":"https://github.com/TooTallNate/ref/issues"},"directories":{},"dist-tags":{"latest":"1.3.4"},"dist":{"shasum":"724d2bf8ac85f8c8db194d3d85be6efe416bc1e5","tarball":"https://registry.npmjs.org/ref/-/ref-1.3.4.tgz"},"maintainers":[{"name":"tootallnate","email":"nathan@tootallnate.net"}],"readmeFilename":"README.md","time":{"modified":"2017-07-30T17:02:22.357Z","created":"2012-05-05T04:27:59.592Z","0.0.1":"2012-05-05T04:28:01.070Z","0.0.2":"2012-05-05T19:26:46.224Z","0.0.3":"2012-05-08T18:29:00.906Z","0.0.4":"2012-05-08T19:01:38.249Z","0.0.5":"2012-05-09T20:50:59.559Z","0.0.6":"2012-05-10T00:31:48.283Z","0.0.7":"2012-05-10T01:56:26.816Z","0.0.8":"2012-05-12T17:23:16.204Z","0.0.9":"2012-05-13T22:53:27.558Z","0.0.10":"2012-05-15T21:51:22.751Z","0.0.11":"2012-05-18T03:03:58.301Z","0.0.12":"2012-05-30T22:46:15.807Z","0.0.13":"2012-05-31T04:57:56.867Z","0.0.14":"2012-05-31T22:17:59.305Z","0.0.15":"2012-05-31T22:40:28.794Z","0.0.16":"2012-06-01T17:24:52.456Z","0.0.17":"2012-06-06T00:26:54.996Z","0.0.18":"2012-06-21T22:11:44.319Z","0.0.19":"2012-06-25T19:06:28.920Z","0.0.20":"2012-06-28T01:13:45.297Z","0.1.0":"2012-07-22T17:40:02.609Z","0.1.1":"2012-08-03T18:29:24.593Z","0.1.2":"2012-09-02T20:03:15.171Z","0.1.3":"2012-09-25T23:46:38.594Z","0.2.0":"2014-05-27T04:55:32.097Z","0.2.1":"2014-05-27T16:00:59.920Z","0.2.2":"2014-06-02T03:33:05.261Z","0.2.3":"2014-06-04T22:46:44.999Z","0.3.0":"2014-06-08T17:40:06.144Z","0.3.1":"2014-06-10T03:49:31.397Z","0.3.2":"2014-06-20T03:53:55.696Z","0.3.3":"2014-12-30T07:18:50.671Z","0.3.4":"2015-01-18T18:01:06.144Z","0.3.5":"2015-01-18T18:26:49.360Z","1.0.0":"2015-01-20T17:08:05.706Z","1.0.1":"2015-03-22T17:58:33.024Z","1.0.2":"2015-05-09T17:49:02.608Z","1.1.0":"2015-08-27T00:13:15.900Z","1.1.1":"2015-09-15T01:22:23.394Z","1.1.2":"2015-09-19T18:15:54.090Z","1.1.3":"2015-09-23T19:54:35.561Z","1.2.0":"2015-10-08T19:14:46.489Z","1.3.0":"2015-12-03T00:06:42.859Z","1.3.1":"2015-12-03T00:32:57.426Z","1.3.2":"2016-01-10T18:48:06.527Z","1.3.3":"2016-11-03T17:55:38.735Z","1.3.4":"2017-01-27T20:51:20.404Z"},"users":{"fanchangyong":true,"shanewholloway":true,"edin-m":true,"cocopas":true,"a0000778":true,"haihepeng":true,"paraself":true}}}