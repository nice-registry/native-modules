{"name":"node-termios","version":"0.0.2","description":"terminal settings for node","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild"},"keywords":["termios","tty","terminal","console"],"repository":"https://github.com/jerch/node-termios","license":"MIT","dependencies":{"nan":"^2.5.1"},"gypfile":true,"gitHead":"596468ab880965bbce53ca7c1e8dabfc5dcba9eb","homepage":"https://github.com/jerch/node-termios#readme","versions":[{"number":"0.0.1","date":"2017-04-02T17:35:33.080Z"},{"number":"0.0.2","date":"2017-04-02T18:43:54.570Z"}],"readme":"### Classes\n\n- `Termios` Class to hold termios struct data.\n\n    #### Attributes\n    \n    - `c_iflag`: Integer representing the input mode flags.\n    - `c_oflag`: Integer representing the output mode flags.\n    - `c_cflag`: Integer representing the character mode flags.\n    - `c_lflag`: Integer representing the local mode flags.\n    - `c_cc`: Object representing the control character settings.\n\n    #### Methods\n    \n    - `constructor(arg)`: Create new termios object.\n      To prefill termios data set `arg` to\n      a valid file descriptor or another Termios object.\n    - `loadFrom(fd)`: Load termios data from file descriptor `fd`.\n    - `applyTo(fd, action)`: Set termios data of file descriptor `fd`.\n      `action` must be one of `termios.ACTION` (defaults to `TCSAFLUSH`).\n    - `getInputSpeed()`: Returns input channel baud rate setting.\n    - `getOutputSpeed()`: Returns output channel baud rate setting.\n    - `setInputSpeed(speed)`: Sets input channel baud rate.\n      `speed` must be one of the predefined baudrates in `termios.BAUD`.\n    - `setOutputSpeed(speed)`: Sets output channel baud rate.\n      `speed` must be one of the predefined baudrates in `termios.BAUD`.\n    - `setSpeed(speed)`: Sets input and output channel baud rate.\n      `speed` must be one of the predefined baudrates in `termios.BAUD`.\n    - `setraw()`: Set termios data to raw mode (taken from Python).\n    - `setcbreak()`: Set termios data to cbreak mode (taken from Python).\n    - `toBuffer()`: Creates a node::Buffer representation of termios data.\n\n### Termios.h symbols\n\nThe module exports known symbols defined by the\nunderlying termios.h (platform dependent).\n\n- `ALL_SYMBOLS`: All known symbols.\n- `IFLAGS`: Input mode symbols.\n- `OFLAGS`: Output mode symbols.\n- `CFLAGS`: Character mode symbols.\n- `LFLAGS`: Local mode symbols.\n- `CC`: Valid symbols defined for control character settings.\n- `ACTION`: Symbols defined for `tcsetattr`\n  (when the changes should be applied).\n- `FLUSH`: Symbols for `tcflush`.\n- `FLOW`: Symbols for `tcflow`.\n- `BAUD`: Defined baudrates of the platform.\n\n### Low level functions\n\n- `isatty(fd)`: Test if file descriptor `fd` is a tty.\n- `ttyname(fd)`: Return tty file name for `fd`.\n  Return empty string for an invalid file descriptor.\n- `ptsname(fd)`: Return pts file name for file descriptor `fd`.\n  This can only be used from the master end of a pty.\n  For slave end use `ttyname`.\n- `tcgetattr(fd, termios)`: Get termios data for file descriptor `fd`.\n  `termios` must be a Termios object.\n- `tcsetattr(fd, action, termios)`: Set termios data for file descriptor `fd`.\n  `action` must be one of `termios.ACTION`. `termios` must be a Termios object.\n- `tcsendbreak(fd, duration)`\n- `tcdrain(fd)`\n- `tcflush(fd, queue_selector)`\n- `tcflow(fd, flowaction)`\n- `cfgetispeed(termios)`\n- `cfgetospeed(termios)`\n- `cfsetispeed(termios, speed)`\n- `cfsetospeed(termios, speed)`\n\n\n### Example\n\nThe example demostrates how to switch off echoing on STDIN.\n```javascript\nvar Termios = require('node-termios').Termios;\nvar sym = require('node-termios').ALL_SYMBOLS;\n\nvar tty = new Termios(0);\ntty.c_lflag &= ~(sym.ECHO | sym.ECHONL);\ntty.applyTo(0);\n```\n\n","created":"2017-04-02T17:35:33.080Z","modified":"2017-04-02T18:43:54.570Z","lastPublisher":{"name":"jerch","email":"j.breitbart@netzkolchose.de"},"owners":[{"name":"jerch","email":"j.breitbart@netzkolchose.de"}],"other":{"_attachments":{},"_from":".","_id":"node-termios","_nodeVersion":"6.10.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/node-termios-0.0.2.tgz_1491158633844_0.389539708616212"},"_npmUser":{"name":"jerch","email":"j.breitbart@netzkolchose.de"},"_npmVersion":"3.10.10","_rev":"2-d06d583ee43d3dbc08ba5d6067e1f58f","_shasum":"b23a9de69a1a33fe6913a0fd80cddbcbd71d936c","author":{"name":"Joerg Breitbart","email":"j.breitbart@netzkolchose.de"},"bugs":{"url":"https://github.com/jerch/node-termios/issues"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"b23a9de69a1a33fe6913a0fd80cddbcbd71d936c","tarball":"https://registry.npmjs.org/node-termios/-/node-termios-0.0.2.tgz"},"maintainers":[{"name":"jerch","email":"j.breitbart@netzkolchose.de"}],"readmeFilename":"README.md","time":{"modified":"2017-04-02T18:43:54.570Z","created":"2017-04-02T17:35:33.080Z","0.0.1":"2017-04-02T17:35:33.080Z","0.0.2":"2017-04-02T18:43:54.570Z"}}}