{"name":"syslogh","version":"1.2.1","description":"Log to the system's Syslog. Provides simple native bindings to <syslog.h> and syslog(3). Works on Node v0.10 up to v4.","keywords":["syslog","rfc3164"],"homepage":"https://github.com/moll/node-syslogh","repository":"https://github.com/moll/node-syslogh","licenses":[{"type":"LAGPL","url":"https://github.com/moll/node-syslogh/blob/master/LICENSE"}],"main":"index.js","scripts":{},"dependencies":{"bindings":">= 1.1 < 2","nan":"^2.0.9"},"devDependencies":{"mocha":">= 1.12.0 < 2","must":"< 1","underscore":">= 1.1.4 < 1.6"},"engines":{"node":">= 0.10.28 < 0.11 || >= 0.11.15 < 5"},"gitHead":"b0c3eb6e8804d9cd321f3b59b4b6eaa19d10a161","gypfile":true,"versions":[{"number":"1.0.0","date":"2014-03-20T16:00:49.225Z"},{"number":"1.0.1","date":"2014-03-20T16:09:17.826Z"},{"number":"1.1.0","date":"2014-07-12T12:55:02.197Z"},{"number":"1.1.1","date":"2014-09-07T06:14:44.308Z"},{"number":"1.1.2","date":"2014-09-07T07:58:43.210Z"},{"number":"1.2.0","date":"2015-09-10T18:10:31.815Z"},{"number":"1.2.1","date":"2015-09-24T12:33:27.831Z"}],"readme":"Syslogh.js\n==========\n[![NPM version][npm-badge]](http://badge.fury.io/js/syslogh)\n[![Build status][travis-badge]](https://travis-ci.org/moll/node-syslogh)\n\nSyslogh.js is a library for logging to your system's Syslog ([RFC\n3164][rfc3164]) from within Node.js. It provides simple native bindings to\n[`<syslog.h>`][syslog.h] and [`syslog(3)`][syslog(3)]. You're in luck, because\nit does not come with any bells and whistles.  Intentionally. KISS, right?\n\nWorks with Node **v0.10**, **v0.11**, **v0.12** and of course **v4** (stable).  \nUsing it in production with [Monday Calendar][monday], so will be kept up to\ndate when new Node versions come out.\n\n[rfc3164]: https://tools.ietf.org/html/rfc3164\n[syslog.h]: http://pubs.opengroup.org/onlinepubs/7908799/xsh/syslog.h.html\n[syslog(3)]: http://linux.die.net/man/3/syslog\n[npm-badge]: https://badge.fury.io/js/syslogh.png\n[travis-badge]: https://travis-ci.org/moll/node-syslogh.png?branch=master\n\n\nInstalling\n----------\nInstall with: `npm install syslogh`\n\n\nUsing\n-----\nUsing Syslogh.js is similar to using [`syslog(3)`][syslog(3)] from C/C++.  \nFirst use `openlog` with **your app name** (up to 255 characters), [**options**](#options) and the\n[**facility**](#facilities):\n```javascript\nvar Syslogh = require(\"syslogh\")\nSyslogh.openlog(\"myapp\", Syslogh.PID, Syslogh.LOCAL7)\n```\n\nThen, when logging, just pass in the [**severity**](#severities) and your\nmessage.  \nJust like with regular [`syslog(3)`][syslog(3)], you can use `sprintf` style\nplaceholders. Those internally use Node's built-in `Util.format`.\n```javascript\nSyslogh.syslog(Syslogh.NOTICE, \"Freeze-frame high-five.\")\nSyslogh.syslog(Syslogh.NOTICE, \"Phone %d.\", 5)\n```\n\nYou can also call `Syslogh.closelog` to close things down, but I'm not sure why\nyou should bother. :-) Exiting your Node.js program will most likely shut\neverything down, too.\n\nThe [`syslog(3)`][syslog(3)] manpage also talks about `setlogmask` to filter\nlogs before they're sent. This isn't implemented. Not yet, at least.\n\n\n### Options\nOptions to pass to `openlog` come from [`<syslog.h>`][syslog.h].\n\nOption | Description\n-------|------------\nCONS   | Log to the system console on error.\nODELAY | Delay open until `syslog()` is called. (Often default.)\nPID    | Log the process ID with each message.\nNDELAY | Connect to syslog daemon immediately.\nNOWAIT | Don't wait for child processes.\n\nAccess them as constants. E.g. `Syslogh.PID`.  \nThey form a bit mask, so to pass multiple of them to `openlog`, binary-OR them\ntogether with the `|` operator:\n```javascript\nSyslogh.openlog(\"myapp\", Syslogh.PID | Syslogh.NDELAY, Syslogh.LOCAL7)\n```\n\n\n### Facilities\nFacilities to pass to `openlog` come from [`<syslog.h>`][syslog.h] and ([RFC\n3164][rfc3164]).  \nSome facilities might differ between systems. For your own app use, best stick\nto `LOCAL*` facilities.\n\nFacility | Description\n---------|------------\nKERN     | Kernel messages.\nUSER     | User-level messages.\nMAIL     | Mail system.\nDAEMON   | System daemons.\nAUTH     | Security/authorization messages.\nSYSLOG   | Messages generated internally by syslogd.\nLPR      | Line printer subsystem.\nNEWS     | Network news subsystem.\nUUCP     | UUCP subsystem.\nCRON     | Clock daemon.\nAUTHPRIV | Security/authorization messages.\nLOCAL0   | Local use 0.\nLOCAL1   | Local use 1.\nLOCAL2   | Local use 2.\nLOCAL3   | Local use 3.\nLOCAL4   | Local use 4.\nLOCAL5   | Local use 5.\nLOCAL6   | Local use 6.\nLOCAL7   | Local use 7.\n\nAccess them as constants. E.g. `Syslogh.LOCAL7`.\n\n\n### Severities\nSeverities to pass to `syslog` come from [`<syslog.h>`][syslog.h] and ([RFC\n3164][rfc3164]).  \n\nSeverity | Description\n---------|------------\nEMERG    | System is unusable.\nALERT    | Action must be taken immediately.\nCRIT     | Critical conditions.\nERR      | Error conditions.\nWARNING  | Warning conditions.\nNOTICE   | Normal but significant.\nINFO     | Informational messages.\nDEBUG    | Debug-level messages.\n\nAccess them as constants. E.g. `Syslogh.NOTICE`.\n\n\nLicense\n-------\nSyslogh.js is released under a *Lesser GNU Affero General Public License*, which\nin summary means:\n\n- You **can** use this program for **no cost**.\n- You **can** use this program for **both personal and commercial reasons**.\n- You **do not have to share your own program's code** which uses this program.\n- You **have to share modifications** (e.g. bug-fixes) you've made to this\n  program.\n\nFor more convoluted language, see the `LICENSE` file.\n\n\nAbout\n-----\n**[Andri Möll](http://themoll.com)** typed this and the code.  \n[Monday Calendar][monday] supported the engineering work.\n\nIf you find Syslogh.js needs improving, please don't hesitate to type to me now\nat [andri@dot.ee][email] or [create an issue online][issues].\n\n[email]: mailto:andri@dot.ee\n[issues]: https://github.com/moll/node-syslogh/issues\n[monday]: https://mondayapp.com\n","starsCount":1,"created":"2014-03-20T16:00:49.225Z","modified":"2015-09-24T12:33:27.831Z","lastPublisher":{"name":"moll","email":"andri@dot.ee"},"owners":[{"name":"moll","email":"andri@dot.ee"}],"other":{"_attachments":{},"_from":".","_id":"syslogh","_nodeVersion":"4.1.0","_npmUser":{"name":"moll","email":"andri@dot.ee"},"_npmVersion":"2.14.4","_rev":"1-22959b8e892b29afdb42e596e6b5a959","_shasum":"7567548d48027abb92ba1d62da8fe0613de263f7","author":{"name":"Andri Möll","email":"andri@dot.ee","url":"http://themoll.com"},"bugs":{"url":"https://github.com/moll/node-syslogh/issues"},"directories":{},"dist-tags":{"latest":"1.2.1"},"dist":{"shasum":"7567548d48027abb92ba1d62da8fe0613de263f7","tarball":"http://registry.npmjs.org/syslogh/-/syslogh-1.2.1.tgz"},"maintainers":[{"name":"moll","email":"andri@dot.ee"}],"readmeFilename":"README.md","time":{"modified":"2015-09-24T12:33:27.831Z","created":"2014-03-20T16:00:49.225Z","1.0.0":"2014-03-20T16:00:49.225Z","1.0.1":"2014-03-20T16:09:17.826Z","1.1.0":"2014-07-12T12:55:02.197Z","1.1.1":"2014-09-07T06:14:44.308Z","1.1.2":"2014-09-07T07:58:43.210Z","1.2.0":"2015-09-10T18:10:31.815Z","1.2.1":"2015-09-24T12:33:27.831Z"},"users":{"moll":true}}}