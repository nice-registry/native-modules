{"name":"nan-bcrypt","description":"A nan-ification of node.bcrypt.js by ncb000gt to make it compiles on latest unstable node","keywords":["bcrypt","password","auth","authentication","encryption","crypt","crypto","nan"],"main":"./bcrypt","version":"0.7.9","engines":{"node":">= 0.11.13"},"repository":"https://github.com/diorahman/nan-bcrypt","licenses":[{"type":"MIT"}],"scripts":{"test":"node-gyp configure build && nodeunit test","install":"node-gyp rebuild"},"dependencies":{"bindings":"^1.2.0","nan":"^1.1.2"},"devDependencies":{"nodeunit":">=0.6.4"},"gypfile":true,"homepage":"https://github.com/diorahman/nan-bcrypt","versions":[{"number":"0.7.7","date":"2014-04-14T05:00:27.812Z"},{"number":"0.7.8","date":"2014-04-14T14:07:31.557Z"},{"number":"0.7.9","date":"2014-05-31T01:09:22.649Z"}],"readme":"# nan-bcrypt\n\n[![Build Status](https://secure.travis-ci.org/diorahman/nan-bcrypt.png)](http://travis-ci.org/#!/diorahman/nan-bcrypt) \n\n\nA nan-ification of [node.bcrypt.js](https://github.com/ncb000gt/node.bcrypt.js) to make it compiles nicely on the latest (0.11.13) version of node. It uses [nan](https://github.com/rvagg/nan) from [rvagg](https://github.com/rvagg).\n\nWhile [node.bcrypt.js](https://github.com/ncb000gt/node.bcrypt.js) is a lib to help you hash passwords.\n[bcrypt on wikipedia][bcryptwiki]\n\nCatalyst for [node.bcrypt.js](https://github.com/ncb000gt/node.bcrypt.js) module: [How To Safely Store A Password][codahale]\n\nIf you want to use [node.bcrypt.js](https://github.com/ncb000gt/node.bcrypt.js) on stable releases of node please take a look at the original [node.bcrypt.js](https://github.com/ncb000gt/node.bcrypt.js) version.\n\n## Security Issues/Concerns\n\nAs should be the case with any security tool, this library should be scrutinized by anyone using it. If you find or suspect an issue with the code- please bring it to my attention and I'll spend some time trying to make sure that this tool is as secure as possible.\n\nTo make it easier for people using this tool to analyze what has been surveyed, here is a list of BCrypt related security issues/concerns as they've come up.\n\n* An [issue with passwords][jtr] was found with a version of the Blowfish algorithm developed for John the Ripper. This is not present in the OpenBSD version and is thus not a problem for this module. HT [zooko][zooko].\n\n## Dependencies\n\n* nodejs ([0.11.13](http://blog.nodejs.org/2014/05/02/node-v0-11-13-unstable/))\n* `node-gyp`\n * Please check the dependencies for this tool at: https://github.com/TooTallNate/node-gyp/\n  * Windows users will need the options for c# and c++ installed with their visual studio instance.\n  * Python 2.x\n* `OpenSSL` - This is only required to build the `bcrypt` project if you are using versions <= 0.7.7. Otherwise, we're using the builtin node crypto bindings for seed data (which use the same OpenSSL code paths we were, but don't have the external dependency).\n* `nan` - This is the magic layer to make `node.bcrypt.js` compiles on unstable node version (0.11.13)\n\n## Install via npm\n```\nnpm install nan-bcrypt\n```\n\n***Note:*** OS X users using Xcode 4.3.1 or above may need to run the following command in their terminal prior to installing if errors occur regarding xcodebuild: ```sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer```\n\n## Usage\n\n### async (recommended)\n\nTo hash a password:\n\n```javascript\nvar bcrypt = require('bcrypt');\nbcrypt.genSalt(10, function(err, salt) {\n    bcrypt.hash(\"B4c0/\\/\", salt, function(err, hash) {\n        // Store hash in your password DB.\n    });\n});\n```\n\nTo check a password:\n\n```javascript\n// Load hash from your password DB.\nbcrypt.compare(\"B4c0/\\/\", hash, function(err, res) {\n    // res == true\n});\nbcrypt.compare(\"not_bacon\", hash, function(err, res) {\n    // res == false\n});\n```\n\nAuto-gen a salt and hash:\n\n```javascript\nbcrypt.hash('bacon', 8, function(err, hash) {\n});\n```\n\n\n### sync\n\nTo hash a password:\n\n```javascript\nvar bcrypt = require('bcrypt');\nvar salt = bcrypt.genSaltSync(10);\nvar hash = bcrypt.hashSync(\"B4c0/\\/\", salt);\n// Store hash in your password DB.\n```\n\nTo check a password:\n\n```javascript\n// Load hash from your password DB.\nbcrypt.compareSync(\"B4c0/\\/\", hash); // true\nbcrypt.compareSync(\"not_bacon\", hash); // false\n```\n\nAuto-gen a salt and hash:\n\n```javascript\nvar hash = bcrypt.hashSync('bacon', 8);\n```\n\n## API\n\n`BCrypt.`\n\n  * `genSaltSync(rounds)`\n    * `rounds` - [OPTIONAL] - the number of rounds to process the data for. (default - 10)\n  * `genSalt(rounds, cb)`\n    * `rounds` - [OPTIONAL] - the number of rounds to process the data for. (default - 10)\n    * `cb` - [REQUIRED] - a callback to be fired once the salt has been generated. uses eio making it asynchronous.\n      * `err` - First parameter to the callback detailing any errors.\n      * `salt` - Second parameter to the callback providing the generated salt.\n  * `hashSync(data, salt)`\n    * `data` - [REQUIRED] - the data to be encrypted.\n    * `salt` - [REQUIRED] - the salt to be used in encryption.\n  * `hash(data, salt, cb)`\n    * `data` - [REQUIRED] - the data to be encrypted.\n    * `salt` - [REQUIRED] - the salt to be used to hash the password. if specified as a number then a salt will be generated and used (see examples).\n    * `cb` - [REQUIRED] - a callback to be fired once the data has been encrypted. uses eio making it asynchronous.\n      * `err` - First parameter to the callback detailing any errors.\n      * `encrypted` - Second parameter to the callback providing the encrypted form.\n  * `compareSync(data, encrypted)`\n    * `data` - [REQUIRED] - data to compare.\n    * `encrypted` - [REQUIRED] - data to be compared to.\n  * `compare(data, encrypted, cb)`\n    * `data` - [REQUIRED] - data to compare.\n    * `encrypted` - [REQUIRED] - data to be compared to.\n    * `cb` - [REQUIRED] - a callback to be fired once the data has been compared. uses eio making it asynchronous.\n      * `err` - First parameter to the callback detailing any errors.\n      * `same` - Second parameter to the callback providing whether the data and encrypted forms match [true | false].\n  * `getRounds(encrypted)` - return the number of rounds used to encrypt a given hash\n    * `encrypted` - [REQUIRED] - hash from which the number of rounds used should be extracted.\n\n\n## Hash Info\n\nThe characters that comprise the resultant hash are `./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$`.\n\n## Testing\n\nIf you create a pull request, tests better pass :)\n\n```\nnpm install\nnpm test\n```\n\n## Credits\n\nThe code for this comes from a few sources:\n\n* blowfish.cc - OpenBSD\n* bcrypt.cc - OpenBSD\n* bcrypt::gen_salt - [gen_salt inclusion to bcrypt][bcryptgs]\n* bcrypt_node.cc - [Nick Campbell][ncb000gt] - Original author of `node.bcrypt.js`\n* nan-ification of bcrypt_node.cc - [diorahman](https://github.com/diorahman)\n\n## Contributors via the original `node.bcrypt.js`\n\n* [Nick Campbell][ncb000gt] - The original author of `node.bcrypt.js`\n* [Antonio Salazar Cardozo][shadowfiend] - Early MacOS X support (when we used libbsd)\n* [Ben Glow][pixelglow] - Fixes for thread safety with async calls\n* [Van Nguyen][thegoleffect] - Found a timing attack in the comparator\n* [NewITFarmer][newitfarmer] - Initial Cygwin support\n* [David Trejo][dtrejo] - packaging fixes\n* [Alfred Westerveld][alfredwesterveld] - packaging fixes\n* [Vincent Côté-Roy][vincentr] - Testing around concurrency issues\n* [Lloyd Hilaiel][lloyd] - Documentation fixes\n* [Roman Shtylman][shtylman] - Code refactoring, general rot reduction, compile options, better memory management with delete and new, and an upgrade to libuv over eio/ev.\n* [Vadim Graboys][vadimg] - Code changes to support 0.5.5+\n* [Ben Noordhuis][bnoordhuis] - Fixed a thread safety issue in nodejs that was perfectly mappable to this module.\n* [Nate Rajlich][tootallnate] - Bindings and build process.\n* [Sean McArthur][seanmonstar] - Windows Support\n* [Fanie Oosthuysen][weareu] - Windows Support\n\n## License\nUnless stated elsewhere, file headers or otherwise, the license as stated in the LICENSE file.\n\n[bcryptwiki]: http://en.wikipedia.org/wiki/Bcrypt\n[bcryptgs]: http://mail-index.netbsd.org/tech-crypto/2002/05/24/msg000204.html\n[codahale]: http://codahale.com/how-to-safely-store-a-password/\n[gh13]: https://github.com/ncb000gt/node.bcrypt.js/issues/13\n[jtr]: http://www.openwall.com/lists/oss-security/2011/06/20/2\n\n[ncb000gt]:https://github.com/ncb000gt\n[shadowfiend]:https://github.com/Shadowfiend\n[thegoleffect]:https://github.com/thegoleffect\n[pixelglow]:https://github.com/pixelglow\n[dtrejo]:https://github.com/dtrejo\n[alfredwesterveld]:https://github.com/alfredwesterveld\n[newitfarmer]:https://github.com/newitfarmer\n[zooko]:https://twitter.com/zooko\n[vincentr]:https://twitter.com/vincentcr\n[lloyd]:https://github.com/lloyd\n[shtylman]:https://github.com/shtylman\n[vadimg]:https://github.com/vadimg\n[bnoordhuis]:https://github.com/bnoordhuis\n[tootallnate]:https://github.com/tootallnate\n[seanmonstar]:https://github.com/seanmonstar\n[weareu]:https://github.com/weareu\n","created":"2014-04-14T05:00:27.812Z","modified":"2014-05-31T01:09:22.649Z","lastPublisher":{"name":"diorahman","email":"diorahman@rockybars.com"},"owners":[{"name":"diorahman","email":"diorahman@rockybars.com"}],"other":{"_attachments":{},"_from":".","_id":"nan-bcrypt","_npmUser":{"name":"diorahman","email":"diorahman@rockybars.com"},"_npmVersion":"1.4.9","_rev":"1-1d2936183d71bcc8d37c971207c8d208","_shasum":"ae84249d463c7e3b8964bf407a51a15037a349b8","author":{"name":"Dhi Aurrahman","email":"diorahman@rockybars.com"},"bugs":{"url":"https://github.com/diorahman/nan-bcrypt/issues"},"contributors":[{"name":"Nick 'The Original Author' Campbell","url":"https://github.com/ncb000gt"},{"name":"Antonio Salazar Cardozo","email":"savedfastcool@gmail.com","url":"https://github.com/Shadowfiend"},{"name":"Van Nguyen","email":"the.gol.effect@gmail.com","url":"https://github.com/thegoleffect"},{"name":"David Trejo","email":"david@dtrejo.com","url":"https://github.com/dtrejo"},{"name":"Ben Glow","email":"glen.low@pixelglow.com","url":"https://github.com/pixelglow"},{"name":"NewITFarmer.com","url":"https://github.com/newitfarmer"},{"name":"Alfred Westerveld","email":"alfredwesterveld@gmail.com","url":"https://github.com/alfredwesterveld"},{"name":"Vincent Côté-Roy","email":"vincentcr@gmail.com","url":"https://github.com/vincentcr"},{"name":"Lloyd Hilaiel","email":"lloyd@hilaiel.com","url":"https://github.com/lloyd"},{"name":"Roman Shtylman","email":"shtylman@gmail.com","url":"https://github.com/shtylman"},{"name":"Vadim Graboys","email":"dimva13@gmail.com","url":"https://github.com/vadimg"},{"name":"Ben Noorduis","url":"https://github.com/bnoordhuis"},{"name":"Nate Rajlich","email":"nathan@tootallnate.net","url":"https://github.com/tootallnate"},{"name":"Sean McArthur","email":"sean.monstar@gmail.com","url":"https://github.com/seanmonstar"},{"name":"Fanie Oosthuysen","email":"fanie.oosthuysen@gmail.com","url":"https://github.com/weareu"}],"directories":{},"dist-tags":{"latest":"0.7.9"},"dist":{"shasum":"ae84249d463c7e3b8964bf407a51a15037a349b8","tarball":"http://registry.npmjs.org/nan-bcrypt/-/nan-bcrypt-0.7.9.tgz"},"maintainers":[{"name":"diorahman","email":"diorahman@rockybars.com"}],"readmeFilename":"README.md","time":{"modified":"2014-05-31T01:09:22.649Z","created":"2014-04-14T05:00:27.812Z","0.7.7":"2014-04-14T05:00:27.812Z","0.7.8":"2014-04-14T14:07:31.557Z","0.7.9":"2014-05-31T01:09:22.649Z"}}}