{"name":"electron-named-image","version":"1.0.2","description":"Node.js bridge to Objective-C [NSImage imageNamed]. Simplifies using default macOS images in Electron apps.","main":"index.js","scripts":{"install":"node-gyp rebuild","test-electron":"electron test/electron-test.js","test-node":"node test/node-test.js","compile-for-node":"node-gyp rebuild -d","compile-for-electron":"HOME=~/.electron-gyp node-gyp rebuild -d --target=1.6.7 --arch=x64 --dist-url=https://atom.io/download/electron","get-images":"node bin/generate-images"},"keywords":["electron","macos","native","touchbar","menu"],"os":["darwin"],"repository":"https://github.com/ccnokes/electron-named-image","license":"MIT","gypfile":true,"dependencies":{"nan":"^2.6.2"},"devDependencies":{"electron":"^1.6.7"},"gitHead":"bee7db50a6a1c39b337f493ea8906822168d4519","homepage":"https://github.com/ccnokes/electron-named-image#readme","versions":[{"number":"1.0.0","date":"2017-05-30T04:14:28.966Z"},{"number":"1.0.1","date":"2017-06-30T15:36:16.591Z"},{"number":"1.0.2","date":"2017-07-01T05:11:42.196Z"}],"readme":"# electron-named-image\nNative node.js addon that returns Objective-C `[NSImage imageNamed]` calls as a PNG buffer, which simplifies using default macOS images in Electron apps.\n\n## Install\n\n```\nnpm install electron-named-image\n```\n\nMost likely you'll want to add it to your `optionalDependencies` due to the way that npm handles platform specific native addons. This way `npm install` won't fail on non-macOS platforms.\n\n## What? Why?\n\nThis lets you use default macOS images/icons with little effort. So you can set up your TouchBar to look like this:\n\n\n![](https://github.com/ccnokes/electron-named-image/blob/master/example-images/Screen%20Shot%202017-05-29%20at%2012.51.49%20PM.png)\n\n(Note the macOS TouchBar icons in there in between the defaults)\n\n\n\n...or your menu to look like this:\n\n![](https://github.com/ccnokes/electron-named-image/blob/master/example-images/Screen%20Shot%202017-05-29%20at%2012.47.21%20PM.png)\n\n(Note the icons on the menu items)\n\n...without having to manually gather together a bunch of image files. These images/icons are included as a part of macOS and available to Objective-C and Swift via the `NSImage` API. This module allows you to use it via Javascript.\n\n## Sample usage:\n\n```javascript\nnew TouchBarButton({\n  icon: nativeImage.createFromBuffer(\n    namedImage.getImageNamed('NSTouchBarRefreshTemplate')\n  )\n})\n```\n\n```javascript\nMenu.setApplicationMenu(Menu.buildFromTemplate([\n  {\n    label: 'My App',\n    submenu: [\n      { \n        label: 'Empty Trash',\n        icon: nativeImage.createFromBuffer(\n          namedImage.getImageNamed('NSTrashFull')\n        ).resize({ width: 20 })\n      }\n    ]\n  }\n]));\n```\n\nFor all possible \"named images\" on macOS, [see this](http://hetima.github.io/fucking_nsimage_syntax/).\n\nIf you specify an invalid named image or are using it on a macOS version that pre-dates `NSTouchBar*` icons, you'll get back an empty buffer. For example:\n\n```javascript\nnamedImage.getImageNamed('invalid').length // => 0\nnamedImage.getImageNamed('NSTrashFull').length // => 9166\n```\n\nThe empty buffer will work as expected with Electron's `nativeImage` module, you just won't have any actual image.\n\nAll of the `NSTouchBar*` named images have been outputted as PNGs to the `images` folder which you can use as well just by manually saving and importing them into your app.\n\n## Compiling for use in an Electron app\nSee [https://github.com/electron/electron/blob/master/docs/tutorial/using-native-node-modules.md] for the easy, right way. Or you can also `npm install -g node-gyp` and then run the same `compile-for-electron` script I have in the package.json in the root of this module's folder.\n\n\nInspired by https://github.com/electron/electron/issues/9414\n","created":"2017-05-30T04:14:28.966Z","modified":"2017-07-01T05:11:42.196Z","lastPublisher":{"name":"ccnokes","email":"ccnokes@gmail.com"},"owners":[{"name":"ccnokes","email":"ccnokes@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"electron-named-image","_nodeVersion":"7.7.1","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/electron-named-image-1.0.2.tgz_1498885900925_0.3233230614569038"},"_npmUser":{"name":"ccnokes","email":"ccnokes@gmail.com"},"_npmVersion":"4.1.2","_rev":"3-0be93020e4153ade3203accf0c612b2f","_shasum":"8b49841169d8240500f5cabe4f07bcf6bceb5554","author":{"name":"Cameron Nokes"},"bugs":{"url":"https://github.com/ccnokes/electron-named-image/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"8b49841169d8240500f5cabe4f07bcf6bceb5554","tarball":"https://registry.npmjs.org/electron-named-image/-/electron-named-image-1.0.2.tgz"},"maintainers":[{"name":"ccnokes","email":"ccnokes@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-07-01T05:11:42.196Z","created":"2017-05-30T04:14:28.966Z","1.0.0":"2017-05-30T04:14:28.966Z","1.0.1":"2017-06-30T15:36:16.591Z","1.0.2":"2017-07-01T05:11:42.196Z"}}}