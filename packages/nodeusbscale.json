{"name":"nodeusbscale","version":"1.0.0","dependencies":{"bindings":"~1.2.1","nan":"^2.0.0"},"description":"Node.js+Linux bindings for several USB scales (Pitney Bowes, Dymo, etc.)","keywords":["weigh","pitney bowes","scale","usb","hiddev"],"repository":"https://github.com/danieloneill/nodeusbscale","scripts":{"install":"(node-gyp rebuild 2> builderror.log) || (exit 1)"},"engines":{"node":">=0.11.13"},"gypfile":true,"homepage":"https://github.com/danieloneill/nodeusbscale","gitHead":"1ca77e262c7be9c380467b679cee78ff79c9503a","versions":[{"number":"1.0.0","date":"2016-01-02T23:44:09.544Z"}],"readme":"# nodeusbscale\nNode.js+Linux (HID) bindings for several USB scales (Pitney Bowes, Dymo, etc.)\n\nTested with:\n* 0922:8004 Dymo-CoStar Corp.\n* 0d8f:0200 Pitney Bowes\n\nData packets are in the following format:\n```javascript\n{\n\t'weight': xxxxxx,\n\t'balanced': <true/false>\n}\n```\n\n### Example\n\n```javascript\n#!/usr/bin/env node\n\nvar UsbScale = require('nodeusbscale');\n\nvar dev = UsbScale.create();\ndev.open( '/dev/usb/hiddev0', function(obj, err) {\n\tif( err ) {\n\t\tconsole.log(\"UsbScale: Failed to open device: \"+err);\n\t\treturn false;\n\t}\n\tdev['data'] = function(data) {\n\t\tconsole.log(\"UsbScale event: \"+JSON.stringify(data, null, 2));\n\t};\n});\n\n// Hack to prevent Node.js from exiting, sorry.\nvar http = require('http');\nvar httpServer = http.createServer(function(){});\nhttpServer.listen(8084);\nconsole.log(\"Listening for keyboard input...\");\n```\n\n# Methods\n\n## Factory\n\n### usbscale::create()\n`Returns an initialised usbscale object.`\n\n* Returns: An initialised usbscale object.\n\n---\n\n## usbscale object\n\n### usbscaleObject::open( path, callback( usbscaleObject, error ) )\n`Open an usbscale device, associate it to this object, and fire the provided callback upon completion.`\n\nThe parameters passed to the provided callback function are **usbscaleObject** which is a reference to the usbscale object, and **error** which will be an error string in the case of an error, or undefined on success.\n\n* Returns: A reference to itself.\n\n### usbscaleObject::data( usbscaleEvent )\n`A virtual method of the usbscaleObject. Reimplement it to handle usbscaleEvents. It can be ignored, but if you ignore it, you might as well not use this module at all.`\n\n","created":"2016-01-02T23:44:09.544Z","modified":"2016-01-02T23:44:09.544Z","lastPublisher":{"name":"danieloneill","email":"doneill@akielectronics.com"},"owners":[{"name":"danieloneill","email":"doneill@akielectronics.com"}],"other":{"_attachments":{},"_from":".","_id":"nodeusbscale","_nodeVersion":"0.12.7","_npmUser":{"name":"danieloneill","email":"doneill@akielectronics.com"},"_npmVersion":"2.11.3","_rev":"1-5d6a9a50cd110d1f8df6073d0e77b709","_shasum":"615f5e53063e5f63348612a5f467fad5acc0d598","author":{"name":"Daniel O'Neill","email":"doneill@akielectronics.com","url":"http://akielectronics.com"},"bugs":{"url":"https://github.com/danieloneill/nodeusbscale/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"615f5e53063e5f63348612a5f467fad5acc0d598","tarball":"http://registry.npmjs.org/nodeusbscale/-/nodeusbscale-1.0.0.tgz"},"maintainers":[{"name":"danieloneill","email":"doneill@akielectronics.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-02T23:44:09.544Z","created":"2016-01-02T23:44:09.544Z","1.0.0":"2016-01-02T23:44:09.544Z"}}}