{"name":"qrusage","version":"1.4.0","description":"quick getrusage(2)","license":"Apache-2.0","main":"qrusage.js","repository":"https://github.com/andrasq/node-qrusage","engines":{"node":">=0.0.0"},"scripts":{"test":"qnit test-*","install":"node-gyp rebuild"},"keywords":["Andras","quick","fast","getrusage","cpu","memory","resources","used"],"dependencies":{"nan":"2.4.0"},"devDependencies":{"qnit":"*"},"gypfile":true,"gitHead":"752e643620ff118459071782770bf4e6d78221e2","homepage":"https://github.com/andrasq/node-qrusage#readme","versions":[{"number":"1.0.0","date":"2014-11-13T05:48:01.941Z"},{"number":"1.0.1","date":"2014-11-13T05:58:53.455Z"},{"number":"1.0.2","date":"2014-11-13T06:36:21.322Z"},{"number":"1.0.3","date":"2014-11-15T03:44:57.685Z"},{"number":"1.0.4","date":"2014-12-17T00:28:21.230Z"},{"number":"1.0.5","date":"2015-01-08T04:03:09.410Z"},{"number":"1.1.0","date":"2015-02-06T00:07:35.907Z"},{"number":"1.2.0","date":"2016-01-22T18:46:54.746Z"},{"number":"1.3.0","date":"2016-06-06T22:16:12.747Z"},{"number":"1.3.1","date":"2016-07-13T18:36:53.969Z"},{"number":"1.4.0","date":"2016-10-09T23:33:01.098Z"}],"readme":"qrusage\n=======\n\nfast getrusage() binding to return process resource usage\n\nbinding to the unix getrusage(2) system call.  Returns the resource usage\nmetrics tracked by the operating system for the current process, or for its\ncompleted child processes.  Very low overhead, runs over 400,000 calls /\nsecond.\n\n\n## Installation\n\n        npm install qrusage\n        npm test qrusage\n\n\n## Summary\n\n        var getrusage = require('qrusage');\n        var RUSAGE_CHILDREN = getrusage.RUSAGE_CHILDREN;\n\n        var rusage_self = getrusage();\n        // =>\n        // { utime: 0.016,\n        //   stime: 0.008,\n        //   maxrss: 9892,\n        //   idrss: 0,\n        //   ixrss: 0,\n        //   isrss: 0,\n        //   minflt: 840,\n        //   majflt: 0,\n        //   nswap: 0,\n        //   inblock: 0,\n        //   oublock: 0,\n        //   msgsnd: 0,\n        //   msgrcv: 0,\n        //   nsignals: 0,\n        //   nvcsw: 32,\n        //   nivcsw: 4 }\n\n        var rusage_children = getrusage(RUSAGE_CHILDREN);\n\n\n## Functions\n\n### getrusage( )\n\nreturn usage for the current process.  If called as\n`getrusage(getrusage.RUSAGE_CHILDREN)` will return usage for all the\nwaited-for child processes of this process.\n\n### Extras\n\n#### getrusage.cputime( )\n\nreturns the number of seconds of user + system cpu time used.  Accepts\nthe getrusage.RUSAGE_SELF or getrusage.RUSAGE_CHILDREN argument.\n\nFor historical reasons, this call is also available as `getrusage_cpu`.\n\n#### getrusage.gettimeofday( ), getrusage.fptime( )\n\nreturns a floating-point microsecond precision timestamp.  Same speed as\nbut higher precision than Date.now(); much faster than process.hrtime().\nUnlike the Unix system call, this one returns a floating point value and\nnot a `struct timeval`.\n\nAlso available as `fptime()`, being a floating-point version of the\n`time()` system call.\n\n#### getrusage.microtime( )\n\nreturns an integer microsecond precision timestamp.  This is the same\ntimestamp value as `gettimeofday` above, but without any decimal\nrounding issues.\n\n#### getrusage.cpuUsage( [lastUsage] )\n\nreturn an object with properties `user` and `system` contain the number of\nmicroseconds of cpu time that this process has used since starting, or,\nif the optional `lastUsage` object is passed in, since that last usage\nwas read.\n\nThis call is the same as `process.cpuUsage()` that appeared in node-v6.1.0.\n\n## Notes\n\nUnlike the unix system call, qrusage returns floating-point utime and stime\ninstead of `struct timeval` timeval objects, and qrusage drops the `ru_`\nprefix from the field names.\n\nThe list of getrusage fields (from linux man-pages-3.44 getrusage(2)):\n\n        struct timeval ru_utime; /* user CPU time used */\n        struct timeval ru_stime; /* system CPU time used */\n        long   ru_maxrss;        /* maximum resident set size */\n        long   ru_ixrss;         /* integral shared memory size */\n        long   ru_idrss;         /* integral unshared data size */\n        long   ru_isrss;         /* integral unshared stack size */\n        long   ru_minflt;        /* page reclaims (soft page faults) */\n        long   ru_majflt;        /* page faults (hard page faults) */\n        long   ru_nswap;         /* swaps */\n        long   ru_inblock;       /* block input operations */\n        long   ru_oublock;       /* block output operations */\n        long   ru_msgsnd;        /* IPC messages sent */\n        long   ru_msgrcv;        /* IPC messages received */\n        long   ru_nsignals;      /* signals received */\n        long   ru_nvcsw;         /* voluntary context switches */\n        long   ru_nivcsw;        /* involuntary context switches */\n\nLinux does not maintain many of these fields, and currently returns zeroes for:\n\n        ru_ixrss\n        ru_idrss\n        ru_isrss\n        ru_nswap\n        ru_msgsnd\n        ru_msgrcv\n        ru_nsignals\n\n## Change Log\n\n1.4.0\n- 3x speedup to `getrusage` and `cpuUsage` with node v4 and higher\n\n1.3.0\n- cpuUsage() call\n\n1.2.0\n- use `nan` 2.x for v8 bindings (5% slower though)\n\n1.1.0\n- cputime() alias of getrusage_cpu()\n- microtime()\n- remove test code from C++ sources\n","created":"2014-11-13T05:48:01.941Z","modified":"2016-10-09T23:33:01.098Z","lastPublisher":{"name":"andrasq","email":"andras@andrasq.com"},"owners":[{"name":"andrasq","email":"andras@andrasq.com"}],"other":{"_attachments":{},"_from":".","_id":"qrusage","_nodeVersion":"6.2.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/qrusage-1.4.0.tgz_1476055979122_0.6696611226070672"},"_npmUser":{"name":"andrasq","email":"andras@andrasq.com"},"_npmVersion":"2.15.0","_rev":"1-1e563cbe61d3e0e09d45c43eaa3410f8","_shasum":"c1219e2e67f0632c9072eebd73f5bd0e0c6e9f61","author":{"name":"Andras","url":"http://github.com/andrasq"},"bugs":{"url":"https://github.com/andrasq/node-qrusage/issues"},"directories":{},"dist-tags":{"latest":"1.4.0"},"dist":{"shasum":"c1219e2e67f0632c9072eebd73f5bd0e0c6e9f61","tarball":"http://registry.npmjs.org/qrusage/-/qrusage-1.4.0.tgz"},"maintainers":[{"name":"andrasq","email":"andras@andrasq.com"}],"readmeFilename":"Readme.md","time":{"modified":"2016-10-09T23:33:01.098Z","created":"2014-11-13T05:48:01.941Z","1.0.0":"2014-11-13T05:48:01.941Z","1.0.1":"2014-11-13T05:58:53.455Z","1.0.2":"2014-11-13T06:36:21.322Z","1.0.3":"2014-11-15T03:44:57.685Z","1.0.4":"2014-12-17T00:28:21.230Z","1.0.5":"2015-01-08T04:03:09.410Z","1.1.0":"2015-02-06T00:07:35.907Z","1.2.0":"2016-01-22T18:46:54.746Z","1.3.0":"2016-06-06T22:16:12.747Z","1.3.1":"2016-07-13T18:36:53.969Z","1.4.0":"2016-10-09T23:33:01.098Z"}}}