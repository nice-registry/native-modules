{"name":"apoxusbcan","version":"0.1.1","description":"Apox Controls USB-CAN module driver","repository":"https://github.com/legege/node-apoxusbcan","main":"./apoxusbcan","scripts":{"install":"node-gyp rebuild"},"dependencies":{"bindings":"^1.2.1","nan":"^2.5.0"},"engines":{"node":">=7.3.0"},"gitHead":"f385185e2401018235079620ca5fa2faeafa1971","gypfile":true,"homepage":"https://github.com/legege/node-apoxusbcan#readme","versions":[{"number":"0.0.1","date":"2012-05-15T12:07:08.260Z"},{"number":"0.0.2","date":"2012-07-17T01:43:32.760Z"},{"number":"0.0.3","date":"2012-08-06T22:36:52.778Z"},{"number":"0.0.4","date":"2013-03-10T18:56:02.210Z"},{"number":"0.0.5","date":"2013-03-10T19:16:23.052Z"},{"number":"0.0.6","date":"2013-03-10T19:37:47.139Z"},{"number":"0.0.7","date":"2014-01-19T19:54:37.959Z"},{"number":"0.0.8","date":"2014-01-19T20:10:03.107Z"},{"number":"0.1.0","date":"2017-02-21T13:40:21.386Z"},{"number":"0.1.1","date":"2017-02-21T14:01:04.130Z"}],"readme":"node-apoxusbcan\n===============\n\nA node.js module for Apox Controls USB-CAN devices. Most important features of this device are\nsupported (e.g. switching to main code, and ability to send/receive CAN Bus messages).\n\nThis project has been developed with [node-xanbus](https://github.com/legege/node-xanbus) in mind.\nHowever, it would probably be useful for something else, hence the reason I'm releasing this module\nindependently.\n\n[![build status](https://secure.travis-ci.org/legege/node-apoxusbcan.png)](http://travis-ci.org/legege/node-apoxusbcan)\n\nInstallation\n------------\n\nFrom npm:\n\n``` bash\n$ npm install apoxcanusb\n```\n\nFrom source:\n\n``` bash\n$ git clone https://github.com/legege/node-apoxusbcan.git\n$ cd node-apoxusbcan\n$ npm install\n```\n\nExample\n-------\n\nTo receive CAN Bus messages:\n\n``` js\nvar usbcan = new ApoxUsbCan();\n\nusbcan.on('canbusmessage', function(timestamp, rtr, id, extended, flags, data) {\n  console.log('CANBus message: timestamp =', timestamp, 'rtr =', rtr, 'id =', id, 'extended =', extended, 'flags =', flags, 'data =', data);\n});\n\nusbcan.open();\n\nusbcan.switchToMainCode(function(err) {\n  if (err) {\n    console.log('Failed to switch to main code:', err);\n    return;\n  }\n});\n```\n\nAPI\n---\n\n### ApoxUsbCan\n\n``` js\nvar usbcan = new ApoxUsbCan();\n``` \n\n#### usbcan.open()\n\n``` js\nusbcan.open();\n```\n\n  * ignored if `usbcan` is already opened\n\n#### usbcan.close()\n\n``` js\nusbcan.close();\n```\n\n  * ignored if `usbcan` is not opened or already closed\n\n#### usbcan.reset(callback)\n\n``` js\nusbcan.reset(function(err) {\n  if (err) {\n    console.log('Failed to reset:', err);\n    return;\n  }\n});\n```\n\n  * `usbcan` must be opened\n\n#### usbcan.isMainCodeRunning(callback)\n\n``` js\nusbcan.isMainCodeRunning(function(err) {\n  if (err) {\n    console.log('Failed to determine if main code is running:', err);\n    return;\n  }\n});\n```\n\n  * `usbcan` must be opened\n\n#### usbcan.switchToMainCode(callback)\n\n``` js\nusbcan.switchToMainCode(function(err, mainCodeRunning) {\n  if (err) {\n    console.log('Failed to switch to main code:', err);\n    return;\n  }\n  console.log('Is main code running?', mainCodeRunning);\n});\n```\n\n  * `usbcan` must be opened\n\n#### usbcan.getHardwareVersion(callback)\n\n``` js\nusbcan.getHardwareVersion(function(err, version) {\n  if (err) {\n    console.log('Failed to get hardware version:', err);\n    return;\n  }\n  console.log('Hardware version:', version);\n});\n```\n\n  * `usbcan` must be opened\n\n#### usbcan.getFirmwareVersion(callback)\n\n``` js\nusbcan.getFirmwareVersion(function(err, version) {\n  if (err) {\n    console.log('Failed to get firmware version:', err);\n    return;\n  }\n  console.log('Firmware version:', version);\n});\n```\n\n  * `usbcan` must be opened\n\n#### usbcan.sendBoardMessage(requestCommand)\n\n``` js\nusbcan.sendBoardMessage(0x43);\n```\n\n  * It's not recommanded to use this method directly. The list of supported request commands is provided in source code.\n  * `usbcan` must be opened\n\n#### usbcan.sendBoardMessageAndReceive(requestCommand, callback, [retryCount, responseMatcher])\n\n``` js\nusbcan.sendBoardMessageAndReceive(0x43, function(err, data) {\n  if (err) {\n    console.log('Failed to send board message:', err);\n    return;\n  }\n});\n```\n  * It's not recommanded to use this method directly. The list of supported request commands is provided in source code.\n  * `retryCount` is optional, but not if `responseMatcher` is provided\n  * `responseMatcher` is optional. Example of signature below.\n\n``` js\nfunction(id, responseCommand, data) {\n  return id == 0xFF && data[0] == 0x63;\n}\n```\n\n#### usbcan.sendCanBusMessage([rtr], canId, [extendedCanId], [canData])\n\n``` js\nusbcan.sendCanBusMessage(418053888, new Buffer([0x00, 0xee, 0x00]));\nusbcan.sendCanBusMessage(418053888, true, new Buffer([0x00, 0xee, 0x00]));\nusbcan.sendCanBusMessage(false, 418053888, true, new Buffer([0x00, 0xee, 0x00]));\n```\n\n  * `usbcan` must be opened\n  * `rtr` is optional (default: `false`)\n  * `extendedCanId` is optional (default: detected based on `canId` length)\n  * `canData` is optional (default: empty `Buffer`)\n\n#### Event: 'canbusmessage'\n\n``` js\nfunction(timestamp, rtr, id, extended, flags, data) { }\n```\n\n#### Event: 'boardmessage'\n\n``` js\nfunction(id, command, data) { }\n``` \n \n#### Event: 'error'\n\n``` js\nfunction(message) { }\n```\n\nReferences\n----------\n\n  * http://www.apoxcontrols.com/USBCANmenu.htm\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (C) 2012, Georges-Etienne Legendre <legege@legege.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n\nA different license may apply to other software included in this package, \nincluding libftdi and libusb. Please consult their respective license files\nfor the terms of their individual licenses.\n","created":"2012-05-15T12:07:07.708Z","modified":"2017-02-21T14:01:04.130Z","lastPublisher":{"name":"legege","email":"legege@legege.com"},"owners":[{"name":"legege","email":"legege@legege.com"}],"other":{"_attachments":{},"_from":".","_id":"apoxusbcan","_nodeVersion":"7.4.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/apoxusbcan-0.1.1.tgz_1487685663430_0.6692942359950393"},"_npmUser":{"name":"legege","email":"legege@legege.com"},"_npmVersion":"4.0.5","_rev":"3-91f97fb1db474fb7e61d6812a1514d75","_shasum":"b228907f112eb1f12e66e58aac47bd77b6f93162","author":{"name":"Georges-Etienne Legendre","email":"legege@legege.com","url":"http://legege.com"},"bugs":{"url":"https://github.com/legege/node-apoxusbcan/issues"},"directories":{},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"b228907f112eb1f12e66e58aac47bd77b6f93162","tarball":"https://registry.npmjs.org/apoxusbcan/-/apoxusbcan-0.1.1.tgz"},"maintainers":[{"name":"legege","email":"legege@legege.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-21T14:01:04.130Z","created":"2012-05-15T12:07:07.708Z","0.0.1":"2012-05-15T12:07:08.260Z","0.0.2":"2012-07-17T01:43:32.760Z","0.0.3":"2012-08-06T22:36:52.778Z","0.0.4":"2013-03-10T18:56:02.210Z","0.0.5":"2013-03-10T19:16:23.052Z","0.0.6":"2013-03-10T19:37:47.139Z","0.0.7":"2014-01-19T19:54:37.959Z","0.0.8":"2014-01-19T20:10:03.107Z","0.1.0":"2017-02-21T13:40:21.386Z","0.1.1":"2017-02-21T14:01:04.130Z"}}}