{"name":"node-flame","version":"0.0.2","description":"Tools for flaming Node with ptrace on Linux","main":"index.js","bin":{"node-flame":"./cmd/flame.js"},"scripts":{"install":"node-gyp rebuild"},"license":"MIT","dependencies":{"async":"^1.4.2","bindings":"^1.2.1","bunyan":"^1.5.1","elfy":"^0.1.0","nan":"^1.2.0","process":"^0.11.2","stackvis":"^0.3.0","struct":"0.0.8"},"gypfile":true,"devDependencies":{"tape":"^4.2.0","uber-licence":"^2.0.2"},"gitHead":"c08f9955800610a4c9ece9278131227da574e6a9","versions":[{"number":"0.0.1","date":"2016-06-08T22:11:04.908Z"},{"number":"0.0.2","date":"2016-06-09T22:46:08.742Z"}],"readme":"## Synopsis\n\nTools for profiling Node.js programs. Uses ptrace to collect and symbolicate\nJavaScript backtraces, extracting human-readable names by walking the V8 stack\nand heap.\n\n**node-flame** is an iteration on [node-stap](https://github.com/uber/node-stap),\nusing ptrace instead of system-tap to collect backtraces.\n\nUses wrapper scripts and\n[node-stackvis](https://github.com/joyent/node-stackvis)\nto generate textual or HTML flamegraphs. Can also output text suitable for input\nto [FlameGraph](https://github.com/brendangregg/FlameGraph).\n\nInspired and informed by Dave Pacheco's excellent\n[V8 DTrace ustack helper](https://www.joyent.com/blog/understanding-dtrace-ustack-helpers).\n\n## Safety\n\n**Your process is paused briefly when ptrace is attached to the process.**\n\nUnderstand that tools that use ptrace, such as **strace** or **node-flame** can\nhave a negative impact on your processes. For example, if you abruptly kill\nnode-flame or strace, the process you are profiling can get stuck in a stopped\nstate.\n\nPtrace interrupts syscalls. Node/libuv handles this correctly, but it can\ninterfere more intricately with the performance of your process.\n\nThe nature of pausing the process and resuming it means that it will slow down\nand this slowdown can be significant.\n\n**Recommended to try in safe environments before running in production!**\n\n## Caveats\n\n* Only works on 64-bit node processes.\n* Line numbers are best effort (not always available) and refer to the start of\na function.\n* Only tested on node0.10 so far. [TODO: fix for node4+]\n* Stacks may omit inlined functions.\n* Also may elide frames on very deep stacks to avoid doing too much work\n* Requires sudo due to ptrace kernel protection\n\n## Basic Usage\n\n```\n[~/] sudo npm i node-flame -g\n[~/node-flame]$ sudo node-flame \nUsage: sudo node-flame <pid> <text|flame|raw|fullraw> <duration (s)>\n  text: textual flame graph.\n  flame: html flame graph.\n  raw: format suitable for input to FlameGraph tools.\n```\n\n## HTML Example\n\n```\n[~/]$ sudo node-flame 24701 flame 10 > /tmp/flame.html\nSampling 24701 for 10s, outputting flame.\n\n[~/]$ # done\n```\n\n## Raw Example\n\n```\n[~/]$ sudo node-flame 2291 raw 10 > /tmp/flame.raw.txt\nSampling 2291 for 10s, outputting raw.\n\n[~/]$ cd ./FlameGraph/\n[~/FlameGraph]$ ./stackcollapse.pl /tmp/flame.raw | tr -d \"\\0\" > /tmp/flame.folded\n[~/FlameGraph]$ ./flamegraph.pl /tmp/flame.folded > /tmp/flame.svg\n\n```\n\n## Text Example\n\n```\n[~/]$ cat ./test.js\nvar dummy = new Error().stack; // Persuade v8 to compute line numbers\n\nwhile(true) {\n    console.log(\"Hello!\");\n}\n[~/]$ node ./test.js  > /dev/null & \n[1] 2291\n[~/]$ sudo node-flame 2291 text 10\nSampling 2291 for 10s, outputting text.\n\nTotal samples: 747\n747 node::Start(int, char**):[native]\n  747 node::Load(v8::Handle<v8::Object>):[native]\n    747 v8::Function::Call(v8::Handle<v8::Object>, int, v8::Handle<v8::Value>*):[native]\n      747 v8::internal::Execution::Call(v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*, bool*, bool):[native]\n        747 [0x72a82a in /usr/bin/nodejs]:[native]\n          747 [entry frame]\n            747 [internal frame]\n              747 [empty]:[unknown]:26\n                747 startup:[unknown]:29\n                  747 Module.runMain:module.js:494\n                    747 Module._load:module.js:274\n                        ... [more]\n```\n\n## Installation\n\n```\nsudo npm i node-flame -g\n```\n\n## Tests\n\nAll things in the fullness of time.\n\n## Contributors\n\n* dh\n* jcorbin\n* Matt-Esch\n* Raynos\n\n## Future Work\n\n* Reflect on the symbol table to target different versions of v8\n* Mac support\n* Post-process to resolve line numbers (compute line endings from files)\n\n## License\n\nMIT\n","created":"2016-06-08T22:11:04.908Z","modified":"2016-06-09T22:46:08.742Z","lastPublisher":{"name":"mattesch","email":"matt@mattesch.info"},"owners":[{"name":"mattesch","email":"matt@mattesch.info"}],"other":{"_attachments":{},"_from":".","_id":"node-flame","_nodeVersion":"0.10.32","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/node-flame-0.0.2.tgz_1465512364915_0.886682425159961"},"_npmUser":{"name":"mattesch","email":"matt@mattesch.info"},"_npmVersion":"2.11.3","_rev":"1-3790ca19dea54736e336b17dd684d92e","_shasum":"5a5db4828fdc2f4e34b64478e3d648821b8c7c77","directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"5a5db4828fdc2f4e34b64478e3d648821b8c7c77","tarball":"http://registry.npmjs.org/node-flame/-/node-flame-0.0.2.tgz"},"maintainers":[{"name":"mattesch","email":"matt@mattesch.info"}],"readmeFilename":"README.md","time":{"modified":"2016-06-09T22:46:08.742Z","created":"2016-06-08T22:11:04.908Z","0.0.1":"2016-06-08T22:11:04.908Z","0.0.2":"2016-06-09T22:46:08.742Z"}}}