{"name":"native-hashset","version":"0.2.0","description":"Native HashSet implementation for Node/io.js","main":"./index.js","keywords":["set","hashset","distinct","datastructures"],"homepage":"https://github.com/iwhitfield/native-hashset","license":"MIT","repository":"https://github.com/iwhitfield/native-hashset","scripts":{"install":"node-gyp configure build","test":"make test"},"dependencies":{"nan":"~2.0.9"},"devDependencies":{"mocha":"2.3.3"},"gitHead":"45eda1363e1011757462efccf27f5a3819243c00","versions":[{"number":"0.1.0","date":"2015-01-26T02:00:13.853Z"},{"number":"0.2.0","date":"2015-09-27T02:02:40.753Z"}],"readme":"native-hashset [![Build Status](https://travis-ci.org/zackehh/native-hashset.svg?branch=master)](https://travis-ci.org/zackehh/native-hashset)\n==============\n\nProvides a native hashset implementation for Node. Based around [node-hashset](https://github.com/inolen/node-hashset) but written using [nan](https://github.com/rvagg/nan) to provide better support for multiple Node systems (and the first io.js systems).\n\nTypically when a set is needed in JavaScript, it may be sufficient to simply use a JavaScript object:\n\n```\nvar set = {};\n\n// add\nset['foobar'] = true;\n\n// contains\nif (!set['foobar']) {\n    // whatever\n}\n\n// iterator\nObject.keys(set).forEach(function(k){\n    console.log(k);\n});\n```\n\nThis works well for up to a few million items, but after that it starts to grind v8 down to a halt. It also has the negative of only allowing String types.\n\n`native-hashset` implements a HashSet using [std::unsorted_set](http://en.cppreference.com/w/cpp/container/unordered_set) to enable working with extremely large sets. Naturally this set is strictly typed due to the nature of C++.\n\n## Compatibility\n\nIf you're using Node.js > v4, please use version `>= 0.2.0` of this module, all lower will fail. If you're using anything before Node.js v4, please use `< 0.2.0`.\n\nThis module is built on each commit with TravisCI on the latest stable version of Node.js. In order to maintain support throughout these versions the `nan` library is used for compatibility across varying Node versions.\n\n## Setup\n\n```\n$ npm install native-hashset\n```\n\n## Quick Start\n\n```\nvar HashSet = require('native-hashset');\nvar set = new HashSet.String();\nset.add('foobar');\n```\n\n```\nvar HashSet = require('native-hashset');\nvar set = new HashSet.Integer();\nset.add(1);\n```\n\n## HashSet\n\nThere are currently two HashSet constructors, `HashSet.Integer` and `HashSet.String`.\n\n### add(value)\n\nAdds `value` to the set. Throws an error if `value` is not the correct type for the set.\n\n### buckets()\n\nReturns the native bucket distribution of the unordered_set used under the hood.\n\n### clear()\n\nRemoves all values from the set.\n\n### contains(value)\n\nReturns a boolean value indicating if the set contains `value`.\n\n### count(value)\n\nReturns an Integer count indicating if the set contains `value`. `1` if exists, `0` if not.\n\n### empty()\n\nReturns a boolean value indicating if the set contains any values.\n\n### iterator()\n\nReturns an iterator to iterate over the values in the set.\n\n```\nvar it = set.iterator();\n\nwhile (it.hasNext()) {\n  console.log(it.next());\n}\n```\n\n### keys()\n\nReturns an Array containing all keys in the set. Use with caution and on smaller sets.\n\n### remove(value)\n\nRemoves `value` from the set.\n\n### size()\n\nReturns the numbers of values in the set.\n\n### type()\n\nReturns the type of the current set.\n\n## Tests\n\nBasic tests are contained in the `test/` directory and are designed to be run using [Mocha](http://mochajs.org). They can be run using the Makefile via the commands below:\n\n```\n$ npm install\n$ make test\n```\n\n## Credits\n\nThanks to [inolen](https://github.com/inolen) for his original HashSet [implementation](https://github.com/inolen/node-hashset) which inspired and provided the groundwork for this module.\n","created":"2015-01-26T02:00:13.853Z","modified":"2015-09-27T02:02:40.753Z","lastPublisher":{"name":"zackehh","email":"iw@zackehh.com"},"owners":[{"name":"zackehh","email":"iw@zackehh.com"}],"other":{"_attachments":{},"_from":".","_id":"native-hashset","_nodeVersion":"4.0.0","_npmUser":{"name":"zackehh","email":"iw@zackehh.com"},"_npmVersion":"2.14.2","_rev":"1-cf5318edab2abe2a42542ed8eda4ed91","_shasum":"f84e37f0851f03a91a978d4b726baa16832c053c","author":{"name":"Isaac Whitfield","email":"iwhitfield@appcelerator.com"},"bugs":{"url":"https://github.com/iwhitfield/native-hashset/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"f84e37f0851f03a91a978d4b726baa16832c053c","tarball":"http://registry.npmjs.org/native-hashset/-/native-hashset-0.2.0.tgz"},"maintainers":[{"name":"zackehh","email":"iw@zackehh.com"}],"readmeFilename":"README.md","time":{"modified":"2015-09-27T02:02:40.753Z","created":"2015-01-26T02:00:13.853Z","0.1.0":"2015-01-26T02:00:13.853Z","0.2.0":"2015-09-27T02:02:40.753Z"}}}