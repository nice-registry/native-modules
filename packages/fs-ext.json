{"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.6.0","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":"https://github.com/baudehlo/node-fs-ext","main":"fs-ext.js","engines":{"node":">= v0.8.0"},"dependencies":{"nan":"^2.0"},"licenses":[{"type":"MIT"}],"scripts":{"install":"node-gyp configure build","test":"./run_tests","lint":"node ./node_modules/eslint/bin/eslint \"*.js\" \"tests/**/*.js\"","cover":"NODE_ENV=cov ./node_modules/.bin/istanbul cover _mocha"},"devDependencies":{"eslint":"^2.13.0"},"gitHead":"ef2881630343b8192f9a9e0ba96f2a125c9cfdc8","versions":[{"number":"0.2.0","date":"2011-06-10T20:40:55.982Z"},{"number":"0.2.1","date":"2011-06-10T21:39:12.245Z"},{"number":"0.2.2","date":"2011-06-10T21:39:54.703Z"},{"number":"0.2.3","date":"2011-11-09T21:25:42.670Z"},{"number":"0.3.0","date":"2013-03-22T17:16:55.543Z"},{"number":"0.3.1","date":"2013-03-25T13:58:36.891Z"},{"number":"0.3.2","date":"2013-08-22T13:51:25.969Z"},{"number":"0.4.0","date":"2014-11-17T14:11:06.813Z"},{"number":"0.4.1","date":"2014-11-25T00:54:53.495Z"},{"number":"0.4.2","date":"2014-12-06T02:57:16.550Z"},{"number":"0.4.3","date":"2015-01-21T14:02:16.466Z"},{"number":"0.4.4","date":"2015-02-27T16:00:34.942Z"},{"number":"0.4.5","date":"2015-05-14T14:08:18.831Z"},{"number":"0.4.6","date":"2015-08-06T21:29:55.102Z"},{"number":"0.5.0","date":"2015-10-15T16:58:36.028Z"},{"number":"0.6.0","date":"2017-03-07T18:26:50.196Z"}],"readme":"fs-ext\n======\n\nExtras not included in Node's fs module.\n\nInstallation\n------------\n\nInstall via npm:\n\n    npm install fs-ext\n\nUsage\n-----\n\nfs-ext imports all of the methods from the core 'fs' module, so you don't\nneed two objects.\n\n```js\nvar fs = require('fs-ext');\nvar fd = fs.openSync('foo.txt', 'r');\nfs.flock(fd, 'ex', function (err) {\n    if (err) {\n        return console.log(\"Couldn't lock file\");\n    }\n    // file is locked\n})\n```\n\nFor an advanced example checkout `example.js`.\n\nAPI\n---\n\n### fs.flock(fd, flags, [callback])\n\nAsynchronous flock(2). No arguments other than a possible error are passed to\nthe callback. Flags can be 'sh', 'ex', 'shnb', 'exnb', 'un' and correspond\nto the various LOCK_SH, LOCK_EX, LOCK_SH|LOCK_NB, etc.\n\n### fs.flockSync(fd, flags)\n\nSynchronous flock(2). Throws an exception on error.\n\n### fs.fcntl(fd, cmd, [arg], [callback])\n\nAsynchronous fcntl(2).\n\ncallback will be given two arguments (err, result).\n\nThe supported commands are:\n\n- 'getfd' ( F_GETFD )\n- 'setfd' ( F_SETFD )\n\nRequiring this module adds `FD_CLOEXEC` to the constants module, for use with F_SETFD.\n\n### fs.fcntlSync(fd, flags)\n\nSynchronous fcntl(2). Throws an exception on error.\n\n### fs.seek(fd, offset, whence, [callback])\n\nAsynchronous lseek(2).  \n\ncallback will be given two arguments (err, currFilePos).\n\nwhence can be 0 (SEEK_SET) to set the new position in bytes to offset, \n1 (SEEK_CUR) to set the new position to the current position plus offset \nbytes (can be negative), or 2 (SEEK_END) to set to the end of the file \nplus offset bytes (usually negative or zero to seek to the end of the file).\n\n### fs.seekSync(fd, offset, whence)\n\nSynchronous lseek(2). Throws an exception on error.  Returns current\nfile position.\n\n\n### fs.utime(path [, atime, mtime] [, callback])\n\nAsynchronous utime(2).\n\nArguments `atime` and `mtime` are in seconds as for the system call.  Note\nthat the number value of Date() is in milliseconds, so to use the 'now'\nvalue with `fs.utime()` you would have to divide by 1000 first, e.g. \nDate.now()/1000\n\nJust like for utime(2), the absence of the `atime` and `mtime` means 'now'.\n\n### fs.utimeSync(path [, atime, mtime])\n\nSynchronous version of utime().  Throws an exception on error.\n\n\n\n\n","starsCount":1,"created":"2011-06-10T20:40:55.687Z","modified":"2017-08-21T08:47:26.330Z","lastPublisher":{"name":"msergeant","email":"helpme@gmail.com"},"owners":[{"name":"msergeant","email":"helpme@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fs-ext","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/fs-ext-0.6.0.tgz_1488911209378_0.8723811951931566"},"_npmUser":{"name":"msergeant","email":"helpme@gmail.com"},"_npmVersion":"4.1.2","_rev":"4-e92d4f8f0ee5e92c79adb07ef334230b","_shasum":"27d32a72e2e7c3c8001712a0f307f5f8d91dfc66","author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"bugs":{"url":"https://github.com/baudehlo/node-fs-ext/issues"},"directories":{},"dist-tags":{"latest":"0.6.0"},"dist":{"shasum":"27d32a72e2e7c3c8001712a0f307f5f8d91dfc66","tarball":"https://registry.npmjs.org/fs-ext/-/fs-ext-0.6.0.tgz"},"maintainers":[{"name":"msergeant","email":"helpme@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-08-21T08:47:26.330Z","created":"2011-06-10T20:40:55.687Z","0.2.0":"2011-06-10T20:40:55.982Z","0.2.1":"2011-06-10T21:39:12.245Z","0.2.2":"2011-06-10T21:39:54.703Z","0.2.3":"2011-11-09T21:25:42.670Z","0.3.0":"2013-03-22T17:16:55.543Z","0.3.1":"2013-03-25T13:58:36.891Z","0.3.2":"2013-08-22T13:51:25.969Z","0.4.0":"2014-11-17T14:11:06.813Z","0.4.1":"2014-11-25T00:54:53.495Z","0.4.2":"2014-12-06T02:57:16.550Z","0.4.3":"2015-01-21T14:02:16.466Z","0.4.4":"2015-02-27T16:00:34.942Z","0.4.5":"2015-05-14T14:08:18.831Z","0.4.6":"2015-08-06T21:29:55.102Z","0.5.0":"2015-10-15T16:58:36.028Z","0.6.0":"2017-03-07T18:26:50.196Z"},"users":{"akabeko":true}}}