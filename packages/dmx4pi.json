{"name":"dmx4pi","version":"1.0.0","description":"Convert your Raspberry Pi into a DMX512 controller","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild"},"keywords":["dmx","dmx512"],"repository":"https://github.com/jue89/node-dmx4pi","license":"MIT","gypfile":true,"dependencies":{"json-gate":"^0.8.23","nan":"^2.6.2"},"gitHead":"542a05ac530cd88eeb72a9a3ca62741f17f03133","homepage":"https://github.com/jue89/node-dmx4pi#readme","versions":[{"number":"1.0.0","date":"2017-06-03T08:56:35.398Z"}],"readme":"# DMX4PI\n\nConvert your Raspberry Pi into a DMX controller. This requires a minimum of additional hardware and utilises the fancy-pancy DMA features of the Raspberry Pi to meet the strict timings of the DMX512 protocol. Under the hood this library uses [pigpio](http://abyz.co.uk/rpi/pigpio/).\n\n\n## Installation\n\nBeside a running Node v4 or newer you require some dependencies:\n\nCommand for Raspbian:\n\n``` shell\nsudo apt install build-essential python pigpio\n```\n\n\n## Example + API\n\nWell, calling these few methods *API* is kind of overexaggerated ;)\nThe following example will show you all methods offered by the API.\n\n``` javascript\n// We must run this as root since we are accessing hardware directly.\n// Furthermore just one instance of this driver is allowed per Pi concurrently.\n\n// Load and configure the drivers:\nconst DMX = require( 'dmx4pi' )( {\n\t// Any free GPIO can be used:\n\tpinTx: 22,   // Data pin\n\tpinEn: 27,   // Enable ping\n\t// The signal levels can be inverted if neccessary:\n\tinvTx: true, // Data pin\n\tinvEn: true  // Enable pin\n} );\n\nfunction fadeDMX( ch3 ) {\n\n\t// Stop when channel 3 reached 255\n\tif( ch3 > 255 ) return;\n\n\t// Create buffer that will be transmitted: Ch 1, 2, 4, 5 are static and Ch 3 is faded\n\tlet data = Buffer.from( [ 0, 128, ch3, 0, 0] );\n\n\t// DMX.transmit( data ) returns a promise that is fulfilled if the data has been transmitted\n\treturn DMX.transmit( data ).then( () => fadeDMX( ++ch3 ) );\n\n}\n\n// Start fading and shutdown the driver when fading has been finished\nfadeDMX( 0 ).then( () => DMX.close() ).catch( console.error );\n```\n\n\n## Hardware\n\nWill be described in the near future.\n\n","created":"2017-06-03T08:56:35.398Z","modified":"2017-06-03T08:56:35.398Z","lastPublisher":{"name":"jue89","email":"me@jue.yt"},"owners":[{"name":"jue89","email":"me@jue.yt"}],"other":{"_attachments":{},"_from":".","_id":"dmx4pi","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/dmx4pi-1.0.0.tgz_1496480194382_0.4715615112800151"},"_npmUser":{"name":"jue89","email":"me@jue.yt"},"_npmVersion":"3.10.8","_rev":"1-7b0ba2f21eda7d76291c288c6a64dcfb","_shasum":"3a5073ea1dda64ae91aa8e3d4f81948795c36850","author":{"name":"Jue","email":"me@jue.yt"},"bugs":{"url":"https://github.com/jue89/node-dmx4pi/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"3a5073ea1dda64ae91aa8e3d4f81948795c36850","tarball":"https://registry.npmjs.org/dmx4pi/-/dmx4pi-1.0.0.tgz"},"maintainers":[{"name":"jue89","email":"me@jue.yt"}],"readmeFilename":"README.md","time":{"modified":"2017-06-03T08:56:35.398Z","created":"2017-06-03T08:56:35.398Z","1.0.0":"2017-06-03T08:56:35.398Z"}}}