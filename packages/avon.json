{"name":"avon","description":"node bindings for the blake2 cryptographic hash","version":"2.1.0","dependencies":{"bindings":"^1.2.1","nan":"~2.5.0","p-promise":"~0.5.0","readable-stream":"~2.2.2"},"devDependencies":{"coveralls":"~2.11.8","eslint-config-ceejbot":"~1.0.3","mocha":"~3.2.0","must":"~0.13.1","nyc":"~10.0.0","xo":"~0.17.1"},"gypfile":true,"homepage":"https://github.com/ceejbot/avon","keywords":["blake2","cryptographic hash","hash"],"license":"ISC","main":"index.js","repository":"https://github.com/ceejbot/avon","scripts":{"build":"node-gyp build","coverage":"nyc report --reporter=text-lcov | coveralls","lint":"xo","test":"mocha -R spec test","travis":"nyc mocha -R spec test && npm run lint","install":"node-gyp rebuild"},"xo":{"extends":"eslint-config-ceejbot"},"gitHead":"77ae7cd4d1f5c5089a352a38b102b5516ab99d69","versions":[{"number":"0.1.0","date":"2014-04-27T20:22:00.348Z"},{"number":"0.2.0","date":"2014-06-29T21:30:18.919Z"},{"number":"0.3.0","date":"2016-03-05T19:06:21.546Z"},{"number":"1.0.0","date":"2016-03-06T00:25:53.490Z"},{"number":"2.0.0","date":"2016-03-31T00:40:50.863Z"},{"number":"2.0.1","date":"2016-04-27T17:37:32.068Z"},{"number":"2.1.0","date":"2016-12-21T21:38:54.581Z"}],"readme":"# avon\n\nNode bindings for the [blake2](https://blake2.net) cryptographic hash function. The relationship of Avon to Blake is of course [obvious](https://en.wikipedia.org/wiki/Kerr_Avon).\n\nBlake2 provides four different hashing functions:\n\n* `blake2b`, `blake2bp`: 64-bit architectures, single & multicore variations\n* `blake2s`, `blake2sp`: 32-bit and under architectures, single & multicore variations\n\nAll four algorithms are different & will produce different sums. Choose the one that's appropriate for your use.\n\n[![on npm](https://img.shields.io/npm/v/avon.svg?style=flat)](https://www.npmjs.com/package/avon) [![Build Status](http://img.shields.io/travis/ceejbot/avon/master.svg?style=flat)](https://travis-ci.org/ceejbot/avon) [![Coverage Status](https://img.shields.io/coveralls/ceejbot/avon.svg?style=flat)](https://coveralls.io/github/ceejbot/avon?branch=master)\n\nTested on node 0.10, 4.x, 5.x, and 6.x.\n\n## Usage\n\nAvon exports `sumFile()`, `sumBuffer()`, and `sumStream()` functions to calculate a hash for whatever sort of data you have. `sumBuffer()` is synchronous. `sumFile()` and `sumStream()` take an optional callback. If no callback is provided, they return promises. Use the control flow method you prefer! The calculated hash is a node Buffer.\n\nIf you don't specify an algorithm, the 64-bit single-core `B` algorithm is used.\n\n```js\nvar Avon = require('avon');\nvar assert = require('assert');\n\nvar buf = new Buffer('this is some input');\n\nvar hash = Avon.sumBuffer(buf, Avon.ALGORITHMS.BP);\nassert(hash instanceof Buffer);\nconsole.log(hash.toString('hex'));\n\nvar sum = Avon.sumBuffer(buf, Avon.ALGORITHMS.SP);\nconsole.log(sum.toString('hex');\n```\n\nWant to hash a file? Sure!\n\n```javascript\nAvon.sumFile('my_file.dat', Avon.ALGORITHMS.SP, function(err, buffer)\n{\n\tif (err) console.error('noooo!');\n\telse console.log(buffer.toString('hex'))\n});\n```\n\nOr create a stream:\n\n```js\nvar input = fs.createReadStream('my-large-file');\nvar hasher = Avon.sumStream(Avon.ALGORITHMS.BP);\n\ninput.on('close', function()\n{\n\tvar digest = hasher.digest('hex');\n\t// you now have a string with the final hash digest\n\t// the hash is unusable from here on\n});\n\ninput.pipe(hasher);\n```\n\n## API\n\n`Avon.ALGORITHMS` exports the enum-like list of algorithms: `B`, `BP`, `S`, and `SP`.\n\nBlake2 provides a bewildering variety of variations. Avon exposes all of them both in the general-purpose functions given above, and in some convenience wrappers. This chart might help you decide which to use.\n\n| function | input | arch | multicore? | async? | algo name\n| --- | --- | --- | --- | --- | ---\n| sumStream | stream | * | * | - | pass algo name\n| sumBuffer | buffer | * | * | n | pass algo name\n| sumFile | file | * | * | y | pass algo name\n| blake2  | buffer | 64 | n | n | B\n| blake2SMP  | buffer | 64 | y | n | BP\n| blake2_32  | buffer | 32 | n | n | S\n| blake2_32SMP  | buffer | 32 | y | n | SP\n| blake2File | file | 64 | n | y | B\n| blake2SMPFile | file | 64 | y | y | BP\n| blake2_32File | file | 32 | n | y | S\n| blake2_32SMPFile | file | 32 | y | y | SP\n\n## Notes\n\nV8 bindings made considerably easier thanks to [NAN](https://github.com/nodejs/nan).\n\n## License\n\nISC.\n","created":"2014-04-27T20:22:00.348Z","modified":"2016-12-21T21:38:54.581Z","lastPublisher":{"name":"ceejbot","email":"ceejceej@gmail.com"},"owners":[{"name":"ceejbot","email":"ceejceej@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"avon","_nodeVersion":"6.9.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/avon-2.1.0.tgz_1482356334345_0.8806262158323079"},"_npmUser":{"name":"ceejbot","email":"ceejceej@gmail.com"},"_npmVersion":"3.10.9","_rev":"2-509a252cab60aa7133c5366522e28d0e","_shasum":"06bdb03c4728cabe526ccf45fa31a1659d5cbfe5","author":{"name":"C J Silverio","email":"ceejceej@gmail.com"},"bugs":{"url":"https://github.com/ceejbot/avon/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"2.1.0"},"dist":{"shasum":"06bdb03c4728cabe526ccf45fa31a1659d5cbfe5","tarball":"http://registry.npmjs.org/avon/-/avon-2.1.0.tgz"},"maintainers":[{"name":"ceejbot","email":"ceejceej@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-12-21T21:38:54.581Z","created":"2014-04-27T20:22:00.348Z","0.1.0":"2014-04-27T20:22:00.348Z","0.2.0":"2014-06-29T21:30:18.919Z","0.3.0":"2016-03-05T19:06:21.546Z","1.0.0":"2016-03-06T00:25:53.490Z","2.0.0":"2016-03-31T00:40:50.863Z","2.0.1":"2016-04-27T17:37:32.068Z","2.1.0":"2016-12-21T21:38:54.581Z"}}}