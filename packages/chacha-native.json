{"name":"chacha-native","version":"2.0.2","description":"native chacha20/poly1305 bindings in nodejs","main":"lib","gypfile":true,"license":"MIT","scripts":{"build":"node-gyp rebuild","test":"node test.js | tspec","install":"node-gyp rebuild"},"dependencies":{"bindings":"^1.2.1","inherits":"^2.0.1","nan":"^2.4.0"},"devDependencies":{"chacha":"^1.1.2","tap-spec":"^2.2.2","tape":"^3.5.0"},"repository":"https://github.com/calvinmetcalf/chacha-native","gitHead":"ed34ae66e5d100c9c46c6b2b7c6589970d896e3b","homepage":"https://github.com/calvinmetcalf/chacha-native#readme","versions":[{"number":"1.0.0","date":"2015-03-16T21:10:59.993Z"},{"number":"1.1.0","date":"2015-03-17T01:30:38.285Z"},{"number":"1.1.1","date":"2015-03-18T23:59:59.553Z"},{"number":"1.2.0","date":"2015-03-20T20:25:37.470Z"},{"number":"1.2.1","date":"2015-04-29T13:50:11.474Z"},{"number":"1.2.2","date":"2015-06-19T15:49:21.036Z"},{"number":"2.0.0","date":"2015-09-10T19:42:42.477Z"},{"number":"2.0.1","date":"2016-03-31T17:28:49.502Z"},{"number":"2.0.2","date":"2017-05-09T12:50:36.229Z"}],"readme":"chacha native\n===\n[![Build Status](https://travis-ci.org/calvinmetcalf/chacha-native.svg)](https://travis-ci.org/calvinmetcalf/chacha-native)\n\nNode bindings for Chacha20/poly1305, api is identical to [my pure JavaScript library](https://github.com/calvinmetcalf/chacha20poly1305), Chacha20 is based\non [this implementation](http://chacha20.insanecoding.org/) with Poly1305 based on [poly1305-donna](https://github.com/floodyberry/poly1305-donna) by way of [libressl](https://github.com/libressl-portable/openbsd/blob/6e5b37ae2618b181b18de9cb33262259e681fb85/src/lib/libssl/src/crypto/poly1305/poly1305.h). By default it implements the\n[IETF](https://tools.ietf.org/html/draft-irtf-cfrg-chacha20-poly1305-10) version\nof the chacha20 poly1305 aead, but the legacy method does the version compatibale with borringssl and others.\n\nAPI\n===\n\n```js\nvar chacha = require('chacha-native');\n```\n\n# ChaCha20 Poly1305\n\n```js\nvar cipher =  chacha.createCipher(key, nonce);\nvar decipher =  chacha.createDecipher(key, nonce);\n```\n\nCreate a cipher object by passing it a 256 bit key and 96 bit nonce, API is\nidentical to crypto.createCipheriv()/createDecipheriv in node >= 11 with a gcm\nmode, in other words, e.g.\n\n```js\ncipher.setAAD(nonencrypteddata);// must be called before data\nvar tag = cipher.getAuthTag();// must be called after finish or end\n\ndecipher.setAAD(nonencrypteddata);// must be called before data\ndecipher.setAuthTag(tag);// must be called before data\n```\n\ndecipher with throw if you don't set a tag or the tag doesn't match. See the [node docs](https://github.com/joyent/node/blob/cfcb1de130867197cbc9c6012b7e84e08e53d032/doc/api/crypto.markdown#cryptocreatecipherivalgorithm-key-iv) for more info (the iv length for gcm is also 96 bit fyi).\n\n# ChaCha20\n\n\n```js\nvar cipher =  chacha.chacha(key, nonce);\n```\n\nThe API is identical to a cipher/decipher object in node >= 10. Encryption and decryption are the same.\n\n# Poly1305\n\n```js\nvar hmac =  chacha.createHmac(key);\n```\n\nAPI is identical to an hmac in node, so it's a stream with update and digest methods.\n\n# Legacy Aead\n\nA variant version of the aead that is compatible with boringssl.\n\n```js\nvar cipher =  new chacha.AeadLegacy(key, nonce);\nvar decipher =  new chacha.AeadLegacy(key, nonce, true);\n```\n\nThe third parameter is whether it should decipher, otherwise identical to createCipher/createDecipher. Doesn't implement variable length tags.\n","created":"2015-03-16T21:10:59.993Z","modified":"2017-05-09T12:50:36.229Z","lastPublisher":{"name":"cwmma","email":"calvin.metcalf@gmail.com"},"owners":[{"name":"cwmma","email":"calvin.metcalf@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"chacha-native","_nodeVersion":"7.10.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/chacha-native-2.0.2.tgz_1494334235475_0.2978465629275888"},"_npmUser":{"name":"cwmma","email":"calvin.metcalf@gmail.com"},"_npmVersion":"4.0.5","_rev":"2-ae93a58d53345837a4fef7c72608c1f1","_shasum":"fa0aebccecb04c49673d2a73d059462067f5bee4","bugs":{"url":"https://github.com/calvinmetcalf/chacha-native/issues"},"directories":{},"dist-tags":{"latest":"2.0.2"},"dist":{"shasum":"fa0aebccecb04c49673d2a73d059462067f5bee4","tarball":"https://registry.npmjs.org/chacha-native/-/chacha-native-2.0.2.tgz"},"maintainers":[{"name":"cwmma","email":"calvin.metcalf@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2017-05-09T12:50:36.229Z","created":"2015-03-16T21:10:59.993Z","1.0.0":"2015-03-16T21:10:59.993Z","1.1.0":"2015-03-17T01:30:38.285Z","1.1.1":"2015-03-18T23:59:59.553Z","1.2.0":"2015-03-20T20:25:37.470Z","1.2.1":"2015-04-29T13:50:11.474Z","1.2.2":"2015-06-19T15:49:21.036Z","2.0.0":"2015-09-10T19:42:42.477Z","2.0.1":"2016-03-31T17:28:49.502Z","2.0.2":"2017-05-09T12:50:36.229Z"}}}