{"name":"mitie","version":"1.0.0","description":"Node bindings for MIT Information Extraction https://github.com/mit-nlp/MITIE","gypfile":true,"main":"index.js","repository":"https://github.com/bhelx/mitie","keywords":["mitie","nlp","ner"],"scripts":{"test":"node_modules/mocha/bin/mocha","install":"node-gyp rebuild"},"license":"MIT","dependencies":{"bindings":"~1.2.1","nan":"^2.0.0"},"devDependencies":{"mocha":"~2.2.5"},"gitHead":"f429074a9ffc6014d94056048128e1fbe9150df8","homepage":"https://github.com/bhelx/mitie#readme","versions":[{"number":"1.0.0","date":"2015-08-31T21:39:27.921Z"}],"readme":"## MITIE\n\nThis project is a node binding for the [MIT Information Extraction library](https://github.com/mit-nlp/MITIE). It's written in C++ and js.\n\nI've implemented both the [Named Entity Recognition](https://en.wikipedia.org/wiki/Named-entity_recognition) extractor and the Binary Relation detector.\n\n## Why?\n\nThe purpose of this library is to extract information from free-form text. It allows us to extract two different types of information.\n\n#### Named Entities\n\nNamed Entities are typically a (person, location, organization, etc) but you can train your own model to find any type of named entity.\n\nFor example, suppose we take the sentence:\n\n> Barack Obama was born in Hawaii and graduated from Harvard Law School in Cambridge Massachusetts.\n\nThis library can extract and tag the named entities:\n\n```\nperson: Barack Obama\nlocation: Hawaii\norganization: Harvard Law School\nlocation: Cambridge Massachusetts\n```\n\n#### Binary Relations\n\nBinary Relations allow us to predict relations bewteen our named entity.\nWe must use different models for each relationship (MITIE comes with a number of classifiers but you can also train your own).\nAs an example, suppose we run our example sentence through the model `binary_relations/rel_classifier_people.person.place_of_birth.svm`.\nIt would show us that Entity 'Barack Obama' is related to Entity 'Hawaii'.\n\n```\nBarack Obama <born in> Hawaii\n```\n\n## API\n\n```javascript\nvar mitie = require('mitie');\n\n// Point it at a ner model .dat file\n// You can also find where to get these on the main MIT project repo\n\nvar nerFile = '/usr/local/Cellar/mitie/0.4/share/MITIE-models/english/ner_model.dat';\nvar neExtractor = new mitie.EntityExtractor(nerFile);\n\n// Feed in some data to the predict method\n\nvar data = \"Barack Obama visited New Orleans today for the anniversary of Hurricane Katrina.\"\nvar results = neExtractor.predict(data);\n\n/**\n * results => {\n *  tags:\n *    [ { tagNumber: 0,\n *        score: 1.0957487452879051,\n *        tagType: 'PERSON',\n *        tokens: 'Barack Obama' },\n *      { tagNumber: 1,\n *        score: 0.8764343236070008,\n *        tagType: 'LOCATION',\n *        tokens: 'New Orleans' } ] }\n */\n\nvar relFile = '/usr/local/Cellar/mitie/0.4/share/MITIE-models/english/binary_relations/rel_classifier_people.person.place_of_birth.svm';\nvar relExtractor = new mitie.RelationExtractor(nerFile, relFile);\n\ndata = \"Donald Trump says that Barack Obama was born in Kenya, not Hawaii.\";\nresults = relExtractor.predict(data);\n\n/**\n * results => {\n *   tags:\n *    [ { tagNumber: 0, tagType: 'PERSON', tokens: 'Donald Trump' },\n *      { tagNumber: 0, tagType: 'PERSON', tokens: 'Barack Obama' },\n *      { tagNumber: 1, tagType: 'LOCATION', tokens: 'Kenya' },\n *      { tagNumber: 1, tagType: 'LOCATION', tokens: 'Hawaii' } ],\n *   relations:\n *    [ { score: 0.5990590608043147,\n *        first: 'Barack Obama',\n *        second: 'Kenya' } ] } \n */\n\n```\n\n## Installing\n\nThe quickest way to get the mitie dependency is with homebrew:\n\n```\nbrew install mitie\n```\n\nYou can install with npm on the command line or in your `package.json`:\n\n```\nnpm install mitie --save\n```\n\n## Testing\n\nInstall with development deps:\n\n```\nnpm install --dev\n```\n\nSet two env vars however you like (you can also inline):\n\n```bash\nexport NER_MODEL=/usr/local/Cellar/mitie/0.4/share/MITIE-models/english/ner_model.dat\nexport REL_MODEL=/usr/local/Cellar/mitie/0.4/share/MITIE-models/english/binary_relations/rel_classifier_people.person.place_of_birth.svm\n```\n\nRun mocha tests:\n\n```\nnpm test\n```\n\n## TODO\n\n* No error handling on C++ level\n* The the js API is not too good and it's not very efficient\n* Consider implementing trainers\n","starsCount":3,"created":"2015-08-31T21:39:27.921Z","modified":"2015-08-31T21:39:27.921Z","lastPublisher":{"name":"bhelx","email":"bhelx@simst.im"},"owners":[{"name":"bhelx","email":"bhelx@simst.im"}],"other":{"_attachments":{},"_from":".","_id":"mitie","_nodeVersion":"0.12.7","_npmUser":{"name":"bhelx","email":"bhelx@simst.im"},"_npmVersion":"2.14.1","_rev":"1-80bad351cf1b664ebc2014285fa94e44","_shasum":"317cf5986772d3f48abd61a49b1f7fc667275784","author":{"name":"bhelx"},"bugs":{"url":"https://github.com/bhelx/mitie/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"317cf5986772d3f48abd61a49b1f7fc667275784","tarball":"http://registry.npmjs.org/mitie/-/mitie-1.0.0.tgz"},"maintainers":[{"name":"bhelx","email":"bhelx@simst.im"}],"readmeFilename":"README.md","time":{"modified":"2015-08-31T21:39:27.921Z","created":"2015-08-31T21:39:27.921Z","1.0.0":"2015-08-31T21:39:27.921Z"},"users":{"sky3r":true,"jonincanada":true,"goose":true}}}