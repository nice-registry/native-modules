{"name":"strong-syslog","version":"1.0.0","description":"modern syslog - streaming, async, uses nan","main":"index.js","os":["!win32"],"scripts":{"test":"tap test/test-*.js","install":"node-gyp rebuild"},"license":"MIT","devDependencies":{"debug":"^2.1.2","tap":"^1.3.2"},"dependencies":{"nan":"^1.6.2"},"gypfile":true,"gitHead":"b9c83ff59d9d6a593a655ce20596d299b34a1e20","versions":[{"number":"0.1.0","date":"2015-06-04T17:16:59.504Z"},{"number":"1.0.0","date":"2015-08-20T20:10:08.259Z"}],"readme":"# modern syslog - streaming, async, native, uses nan\n\nThis is the only syslog library that:\n\n- Uses native bindings to the libc syslog API.\n- Is async, because the libc APIs can block on localhost IPC under load, but\n  that shouldn't block your app.\n- Can be used as a stream.\n- Has formatted log functions.\n- Uses nan, so supports node and io.js, and will continue to do so.\n- Is API compatible with [node-syslog][], from which I gathered inspiration\n  and owe thanks.\n\nDefault mask depends on system.\n\n## Installation\n\n    npm install --save modern-syslog\n\n## API\n\nFor detailed descriptions of the core functions, see [man 3\nsyslog](http://man7.org/linux/man-pages/man3/syslog.3.html).\n\nNote that syslog functions cannot fail, and neither throw errors, nor callback\nwith errors. This is consistent with the core functions, which do not have error\nreturn values.\n\n### log(priority, msg, callback)\n\n- `priority` {String|Number} OR of a level, and optionally, a facility.\n- `msg` {String|Buffer} Message to log.\n- `callback` {Function} Called after message is logged (no arguments).\n\n`priority` can be a String, in which case it will be looked up in\n`syslog.level`. It can also be a Number, in which case it is expected to be\na numeric value, such as `syslog.level.LOG_INFO`, optionally ORed with a\na numeric facility, such as `syslog.facility.LOG_LOCAL2`.\n\nSee below for formatted version of `log()`.\n\n### emerg(fmt, ...)\n### alert(fmt, ...)\n### crit(fmt, ...)\n### error(fmt, ...)\n### err(fmt, ...)\n### warn(fmt, ...)\n### warning(fmt, ...)\n### note(fmt, ...)\n### notice(fmt, ...)\n### info(fmt, ...)\n### debug(fmt, ...)\n\n- `fmt` {String} Arguments are formatted as `msg`, and passed to `log()`.\n\nConvenience functions, log level is pre-defined, facility uses default, either\nsystem default or that provided to `open()`, and message is formatted with\n`util.format()`.\n\n### new Stream(level, [facility])\n\n- `level` {String|Number} Level to log at.\n- `facility` {String|Number} Facility to log with, optional.\n\nReturns a writeable stream that logs all messages at the specified level and\nfacility.\n\n### open(ident, option, facility)\n\n- `ident` {String} Prepended to every message, usually program name.\n- `option` {Number} OR of flags from `syslog.options`.\n- `facility` {String|Number} Default facility to be used by `log()`.\n\nSet up defaults for log.\n\nCalling `open()` is optional, all arguments are provided with defaults, though\nthe defaults depend on the system (see man page).\n\n### close()\n\nClose the socket to the syslog system.\n\nCalling `close()` is optional, the socket is closed automatically by the\nsystem on exit.\n\n### upto(level)\n\n- `level` {String|Number} Level to log up to.\n\nLog all levels upto and including `level`.\n\n### setmask(mask)\n\n- `mask` {Number} OR of levels that should be logged.\n\nNot convenient to use but part of the low-level syslog API. See syslog man page\nfor details, and consider using `upto()` for most common use-cases.\n\n### curmask()\n\nReturns current log mask, see `setmask()`.\n\n### setMask(...)\n\nAvoid this, its for backwards compatibility with [node-syslog][].\n\n### init(...)\n\nAvoid this, its for backwards compatibility with [node-syslog][].\n\n## Properties\n\nSyslog properties are defined as a bi-directional map from String to Number, and\nfrom Number to String, so:\n\n- `syslog.level.LOG_DEBUG`: `7`, the numeric value of `LOG_DEBUG`\n- `syslog.level[7]`: `'LOG_DEBUG'`, string value of level `7`\n\n### syslog.level\n\nLevels are listed from highest priority, to lowest:\n\n- `LOG_EMERG`: System is unusable.\n- `LOG_ALERT`: Action must be taken immediately.\n- `LOG_CRIT`: Critical condition.\n- `LOG_ERR`: Error condition.\n- `LOG_WARNING`: Warning condition.\n- `LOG_NOTICE`: Normal, but significant, condition.\n- `LOG_INFO`: Informational message.\n- `LOG_DEBUG`: Debug-level message.\n\n### syslog.option\n\nObject of properties:\n\n- `LOG_CONS`: Log to console if there is error logging to syslog.\n- `LOG_PERROR`: Log to stderr as well as syslog.\n- `LOG_PID`: Log process' PID with each message.\n\nThese are unlikely to be useful, but are provided for completeness:\n\n- `LOG_NDELAY`: Open  the  connection  immediately (normally, the connection is\n  opened when the first message is logged).\n- `LOG_ODELAY`: The converse of `LOG_NDELAY`; opening of the connection is\n  delayed until the first message is logged (this is the default and need not be\n  specified).\n- `LOG_NOWAIT`: Archaic option that doesn't do anything on contemporary systems,\n  but is provided for backwards compatibility.\n\n### syslog.facility\n\n- `LOG_AUTH`\n- `LOG_AUTHPRIV` (not defined on all systems)\n- `LOG_CRON`\n- `LOG_DAEMON`\n- `LOG_FTP` (not defined on all systems)\n- `LOG_KERN`\n- `LOG_LOCAL0`\n- `LOG_LOCAL1`\n- `LOG_LOCAL2`\n- `LOG_LOCAL3`\n- `LOG_LOCAL4`\n- `LOG_LOCAL5`\n- `LOG_LOCAL6`\n- `LOG_LOCAL7`\n- `LOG_LPR`\n- `LOG_MAIL`\n- `LOG_NEWS`\n- `LOG_SYSLOG`\n- `LOG_USER`\n- `LOG_UUCP`\n\n[node-syslog]: https://www.npmjs.com/package/node-syslog\n","created":"2015-06-04T17:16:59.504Z","modified":"2017-06-02T16:40:01.348Z","lastPublisher":{"name":"octet","email":"sam@strongloop.com"},"owners":[{"email":"strngops@us.ibm.com","name":"strongloop"},{"email":"vieuxtech@gmail.com","name":"octet"},{"email":"kjdelisle@gmail.com","name":"kjdelisle"},{"email":"tffrench@us.ibm.com","name":"tonyf-ibm"},{"email":"gpandya@live.com","name":"thegman"},{"email":"qpresley@ca.ibm.com","name":"qpresley"},{"email":"gewily@ca.ibm.com","name":"loay"},{"email":"juehou@ca.ibm.com","name":"jannyhou2016"},{"email":"captain@hacksparrow.com","name":"hacksparrow"},{"email":"davidcheung@live.ca","name":"davidcheung"},{"email":"binadmt@hotmail.com","name":"b-admike"},{"email":"amirali.jfr61@gmail.com","name":"amir-61"},{"email":"ngcandy@ca.ibm.com","name":"0candy"},{"email":"superkhau@gmail.com","name":"superkhau"},{"email":"setogit@gmail.com","name":"setogit"},{"email":"mbajtoss@gmail.com","name":"bajtos"},{"email":"rmg@ca.ibm.com","name":"ibmcloud-admin"},{"email":"enjoyjava@gmail.com","name":"rfeng"},{"email":"skawful@gmail.com","name":"ritch"},{"email":"kraman@gmail.com","name":"kraman"},{"email":"r.m.graham@gmail.com","name":"rmg"}],"other":{"_attachments":{},"_from":".","_id":"strong-syslog","_nodeVersion":"2.5.0","_npmUser":{"name":"octet","email":"sam@strongloop.com"},"_npmVersion":"2.13.2","_rev":"9-4293cb1133e646235df8b3458e17dffd","_shasum":"ad4da2f93d60f86586ccda9b40d731ee42702c20","author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"ad4da2f93d60f86586ccda9b40d731ee42702c20","tarball":"http://registry.npmjs.org/strong-syslog/-/strong-syslog-1.0.0.tgz"},"maintainers":[{"email":"strngops@us.ibm.com","name":"strongloop"},{"email":"vieuxtech@gmail.com","name":"octet"},{"email":"kjdelisle@gmail.com","name":"kjdelisle"},{"email":"tffrench@us.ibm.com","name":"tonyf-ibm"},{"email":"gpandya@live.com","name":"thegman"},{"email":"qpresley@ca.ibm.com","name":"qpresley"},{"email":"gewily@ca.ibm.com","name":"loay"},{"email":"juehou@ca.ibm.com","name":"jannyhou2016"},{"email":"captain@hacksparrow.com","name":"hacksparrow"},{"email":"davidcheung@live.ca","name":"davidcheung"},{"email":"binadmt@hotmail.com","name":"b-admike"},{"email":"amirali.jfr61@gmail.com","name":"amir-61"},{"email":"ngcandy@ca.ibm.com","name":"0candy"},{"email":"superkhau@gmail.com","name":"superkhau"},{"email":"setogit@gmail.com","name":"setogit"},{"email":"mbajtoss@gmail.com","name":"bajtos"},{"email":"rmg@ca.ibm.com","name":"ibmcloud-admin"},{"email":"enjoyjava@gmail.com","name":"rfeng"},{"email":"skawful@gmail.com","name":"ritch"},{"email":"kraman@gmail.com","name":"kraman"},{"email":"r.m.graham@gmail.com","name":"rmg"}],"readmeFilename":"README.md","time":{"modified":"2017-06-02T16:40:01.348Z","created":"2015-06-04T17:16:59.504Z","0.1.0":"2015-06-04T17:16:59.504Z","1.0.0":"2015-08-20T20:10:08.259Z"}}}