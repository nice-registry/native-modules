{"name":"prebuildify","version":"2.4.2","description":"Create and package prebuilds for native modules","main":"index.js","dependencies":{"execspawn":"^1.0.1","minimist":"^1.2.0","mkdirp":"^0.5.1","node-abi":"^2.0.0","xtend":"^4.0.1"},"devDependencies":{"nan":"^2.5.1","standard":"^9.0.1","tape":"^4.6.3"},"bin":{"prebuildify":"./bin.js"},"files":["bin.js","index.js"],"scripts":{"lint":"standard","test":"npm run lint && npm run unit","unit":"tape test/*.js"},"repository":"https://github.com/mafintosh/prebuildify","license":"MIT","homepage":"https://github.com/mafintosh/prebuildify","gitHead":"46a45502179ee4ffd557e16ae5df3c38a5b2ee4e","versions":[{"number":"1.0.0","date":"2017-01-25T15:22:54.611Z"},{"number":"1.0.1","date":"2017-01-26T16:33:24.863Z"},{"number":"1.0.2","date":"2017-02-02T03:42:46.765Z"},{"number":"2.0.0","date":"2017-02-04T02:03:20.315Z"},{"number":"2.0.1","date":"2017-02-04T02:07:53.035Z"},{"number":"2.1.0","date":"2017-02-09T00:06:29.717Z"},{"number":"2.2.0","date":"2017-02-12T11:37:10.067Z"},{"number":"2.2.1","date":"2017-03-03T10:46:11.790Z"},{"number":"2.2.2","date":"2017-03-08T20:53:55.038Z"},{"number":"2.3.0","date":"2017-03-14T09:47:04.082Z"},{"number":"2.3.1","date":"2017-03-22T14:39:34.939Z"},{"number":"2.3.2","date":"2017-03-22T15:22:54.675Z"},{"number":"2.3.3","date":"2017-06-03T17:02:17.788Z"},{"number":"2.3.4","date":"2017-06-07T15:05:11.707Z"},{"number":"2.4.0","date":"2017-06-07T16:24:12.266Z"},{"number":"2.4.1","date":"2017-07-23T16:22:44.369Z"},{"number":"2.4.2","date":"2017-07-23T16:29:50.076Z"}],"readme":"# prebuildify\n\nCreate and package prebuilds for native modules\n\n```\nnpm install -g prebuildify\n```\n\n## Usage\n\nFirst go to your native module and make a bunch of prebuilds\n\n``` sh\n# got to your native module\ncd your-native-module\n# build for all electron/node binary versions and strip out symbols\nprebuildify --all --strip\n# the prebuilds will be stored in ./prebuilds\nls prebuilds\n```\n\nThen only remaining thing you need to do now is make your module use a prebuild if one exists\nfor the platform/runtime you are using.\n\nUse [https://github.com/mafintosh/node-gyp-build] to do this.\n\n``` sh\n# first install node-gyp-build\nnpm install --save node-gyp-build\n```\n\nThen add `node-gyp-build` as an install script to your module's package.json\n\n``` js\n{\n  \"name\": \"your-native-module\",\n  \"scripts\": {\n    \"install\": \"node-gyp-build\"\n  }\n}\n```\n\nThe install script will check if a compatible prebuild is bundled. If so it does nothing. If not it will run `node-gyp rebuild` to produce a build.\nThis means that if the user using your module has disabled install scripts your module will still work (!) as long as a compatible prebuild is bundled.\n\nWhen loading your native binding from your `index.js` you should use `node-gyp-build` as will to make sure to get the right binding\n\n``` js\n// Will load a compiled build if present or a prebuild.\n// If no build if found it will throw an exception\nvar binding = require('node-gyp-build')(__dirname)\n\nmodule.exports = binding\n```\n\nAn added benefit of this approach is that your native modules will work across multiple node and electron versions without having the user\nneed to reinstall or recompile them - as long as you produce prebuilds for all versions.\n\nWhen publishing your module to npm remember to include the `./prebuilds` folder.\n\nThat's it! Happy native hacking.\n\n## License\n\nMIT\n","created":"2017-01-25T15:22:54.611Z","modified":"2017-07-23T16:29:50.076Z","lastPublisher":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"owners":[{"name":"mafintosh","email":"mathiasbuus@gmail.com"}],"other":{"_attachments":{},"_id":"prebuildify","_nodeVersion":"8.2.1","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/prebuildify-2.4.2.tgz_1500827389161_0.597272039623931"},"_npmUser":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"_npmVersion":"5.3.0","_rev":"17-3891bd8092d115bf8075ce80211c2bbe","author":{"name":"Mathias Buus","url":"@mafintosh"},"bugs":{"url":"https://github.com/mafintosh/prebuildify/issues"},"directories":{},"dist-tags":{"latest":"2.4.2"},"dist":{"integrity":"sha512-o2yLijeeV8hzDMBs/fKwaqFpMQkh8pVWslxD5aCID5aI2OzPXP+xiZufgvnGVWhzUgnhln2Rbqd/jeyvumGFbA==","shasum":"361134d6ab5ccfb32080191f2bc56bce9aa72aba","tarball":"https://registry.npmjs.org/prebuildify/-/prebuildify-2.4.2.tgz"},"maintainers":[{"name":"mafintosh","email":"mathiasbuus@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-07-23T16:29:50.076Z","created":"2017-01-25T15:22:54.611Z","1.0.0":"2017-01-25T15:22:54.611Z","1.0.1":"2017-01-26T16:33:24.863Z","1.0.2":"2017-02-02T03:42:46.765Z","2.0.0":"2017-02-04T02:03:20.315Z","2.0.1":"2017-02-04T02:07:53.035Z","2.1.0":"2017-02-09T00:06:29.717Z","2.2.0":"2017-02-12T11:37:10.067Z","2.2.1":"2017-03-03T10:46:11.790Z","2.2.2":"2017-03-08T20:53:55.038Z","2.3.0":"2017-03-14T09:47:04.082Z","2.3.1":"2017-03-22T14:39:34.939Z","2.3.2":"2017-03-22T15:22:54.675Z","2.3.3":"2017-06-03T17:02:17.788Z","2.3.4":"2017-06-07T15:05:11.707Z","2.4.0":"2017-06-07T16:24:12.266Z","2.4.1":"2017-07-23T16:22:44.369Z","2.4.2":"2017-07-23T16:29:50.076Z"}}}