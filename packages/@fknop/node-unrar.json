{"name":"@fknop/node-unrar","version":"1.1.0","description":"Native NodeJS rar addon","main":"lib/index.js","files":["src","lib","tsconfig.json","vendor","binding.gyp"],"scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild","build":"node-gyp build","tsc":"tsc -p tsconfig.json","prepublish":"npm run tsc"},"keywords":["node","addon","rar","unrar","fknop","native"],"license":"MIT","gypfile":true,"dependencies":{"bindings":"^1.2.1","nan":"^2.4.0"},"devDependencies":{"@types/es6-promise":"0.0.32","@types/node":"0.0.1","typescript":"^2.0.10"},"repository":"https://github.com/fknop/node-unrar","homepage":"https://github.com/fknop/node-unrar#readme","gitHead":"1cd94113d0da96a06bbf041317c7164c075f4f68","versions":[{"number":"1.0.0","date":"2016-11-30T21:36:24.356Z"},{"number":"1.0.1","date":"2016-11-30T21:37:37.285Z"},{"number":"1.0.2","date":"2016-11-30T21:39:17.658Z"},{"number":"1.0.3","date":"2016-11-30T21:43:44.054Z"},{"number":"1.0.4","date":"2016-11-30T21:45:40.664Z"},{"number":"1.0.5","date":"2016-12-01T21:40:06.905Z"},{"number":"1.1.0","date":"2016-12-02T22:12:51.924Z"}],"readme":"# node-rar\r\n\r\nNative NodeJS rar addon. \r\n\r\nThis library is inspired by https://github.com/davidcroda/node-rar and the original library.\r\nI needed a native unrar addon that worked with the new versions of node.\r\nI also updated the addon to be able to process an archive `asynchronously`.\r\n\r\n## Install \r\n\r\n```\r\nnpm install @fknop/node-unrar\r\n```\r\n\r\nIt's published under the @fknop scope to avoid using a name like `node-unrar2` or something like that.\r\n\r\n## API\r\n\r\n### `OpenMode`\r\n\r\n* `List` = 0,\r\n* `Extract` = 1\r\n\r\n### `RarResult`\r\n\r\n* name: the archive name \r\n* files: an array of files in the archive (see `RarOptions.humanResults` for more details)\r\n\r\n### `RarOptions`\r\n\r\n* `openMode`: the archive open mode\r\n* `dest`: the destination directory for extraction (ignored in list mode).\r\n* `password`: the archive password \r\n* `humanResults`: instead of an array of raw string names, display the files as a tree\r\n\r\nWithout `humanResults`:\r\n\r\n```javascript\r\n{\r\n  name: 'archive.rar',\r\n  files: [\r\n    'dir',\r\n    'dir/file1',\r\n    'dir/file2',\r\n    'dir/file3',\r\n    'dir/dir2/file4',\r\n    'dir/dir2/file5',\r\n    'file'\r\n  ]\r\n}\r\n```\r\n\r\nWith `humanResults`:\r\n\r\n```javascript\r\n{\r\n  name: 'archive.rar',\r\n  files: {\r\n    'dir': {\r\n      'file1': {},\r\n      'file2': {},\r\n      'file3': {},\r\n      'dir2': {\r\n        'file4': {},\r\n        'file5': {}\r\n      }\r\n    },\r\n    'file': {}\r\n  }\r\n}\r\n```\r\n\r\n### `RarCallback`\r\n\r\n`RarCallback` is a simple node callback `(err, results) => { ... }`.\r\n\r\n### `processArchive(path: string, options?: RarOptions|RarCallback, cb?: RarCallback): Promise<RarResult>|void`\r\n\r\nProcess an archive asynchronously. By default, it lists files.\r\n\r\n* `path`: the path of the archive \r\n* `options`: The options, or the callback if no options are needed\r\n* `cb`: the callback if options are needed\r\n\r\nIf no callback is provided, a promise will be returned.\r\n\r\n### `list(path: string, options?: RarOptions|RarCallback, cb?: RarCallback): Promise<RarResult>|void`\r\n\r\nAlias for `processArchive` with `OpenMode.List`.\r\n\r\n### `extract(path: string, options?: RarOptions|RarCallback, cb?: RarCallback): Promise<RarResult>|void`\r\n\r\nAlias for `processArchive` with `OpenMode.Extract`.\r\n\r\n### `processArchiveSync(path: string, options?: RarOptions): RarResult`\r\n\r\nProcess an archive synchronously. By default, it lists files.\r\nIf an error occurs, it will throw an exception.\r\n\r\n### `listSync(path: string, options?: RarOptions): RarResult`\r\n\r\nAlias for `processArchiveSync` with `OpenMode.List`.\r\n\r\n### `extractSync(path: string, options?: RarOptions): RarResult`\r\n\r\nAlias for `processArchiveSync` with `OpenMode.Extract`.\r\n\r\n## Todo\r\n\r\n* Tests","starsCount":1,"created":"2016-11-30T21:36:24.356Z","modified":"2016-12-02T22:12:51.924Z","lastPublisher":{"name":"fknop","email":"florian_knop@hotmail.com"},"owners":[{"name":"fknop","email":"florian_knop@hotmail.com"}],"other":{"_attachments":{},"_from":".","_id":"@fknop/node-unrar","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/node-unrar-1.1.0.tgz_1480716771324_0.6730118186678737"},"_npmUser":{"name":"fknop","email":"florian_knop@hotmail.com"},"_npmVersion":"3.10.8","_rev":"12-da8a2ed81a6570ee217f5d1c290b1bb7","_shasum":"66d68d4d2c1bdcff9f0f5e3f3e3436f8149f5e25","author":{"name":"Florian Knop"},"bugs":{"url":"https://github.com/fknop/node-unrar/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"66d68d4d2c1bdcff9f0f5e3f3e3436f8149f5e25","tarball":"http://registry.npmjs.org/@fknop/node-unrar/-/node-unrar-1.1.0.tgz"},"maintainers":[{"name":"fknop","email":"florian_knop@hotmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-12-02T22:12:51.924Z","created":"2016-11-30T21:36:24.356Z","1.0.0":"2016-11-30T21:36:24.356Z","1.0.1":"2016-11-30T21:37:37.285Z","1.0.2":"2016-11-30T21:39:17.658Z","1.0.3":"2016-11-30T21:43:44.054Z","1.0.4":"2016-11-30T21:45:40.664Z","1.0.5":"2016-12-01T21:40:06.905Z","1.1.0":"2016-12-02T22:12:51.924Z"},"users":{"fknop":true}}}