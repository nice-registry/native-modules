{"name":"node-report","version":"2.2.0","description":"Diagnostic Report for Node.js","homepage":"https://github.com/nodejs/node-report#readme","repository":"https://github.com/nodejs/node-report","engines":{"node":">=4.0.0"},"dependencies":{"nan":"^2.3.5"},"license":"MIT","scripts":{"test":"tap --timeout=300 test/test*.js","install":"node-gyp rebuild"},"devDependencies":{"tap":"^8.0.0"},"gypfile":true,"gitHead":"a9aa3c366ea664f3906ac48bfeaa8c2a9a333079","versions":[{"number":"0.1.0","date":"2013-06-10T14:05:14.347Z"},{"number":"2.0.0","date":"2017-02-09T13:24:14.261Z"},{"number":"2.1.0","date":"2017-02-13T15:39:40.274Z"},{"number":"2.1.1","date":"2017-02-22T13:44:58.739Z"},{"number":"2.1.2","date":"2017-03-23T10:05:22.156Z"},{"number":"2.2.0","date":"2017-05-30T12:41:36.608Z"}],"readme":"# node-report\n\nDelivers a human-readable diagnostic summary, written to file.\n\nThe report is intended for development, test and production\nuse, to capture and preserve information for problem determination.\nIt includes JavaScript and native stack traces, heap statistics,\nplatform information and resource usage etc. With the report enabled,\nreports can be triggered on unhandled exceptions, fatal errors, signals\nand calls to a JavaScript API.\n\nSupports Node.js v4, v6 and v7 on AIX, Linux, MacOS, SmartOS and Windows.\n\n## Usage\n\n```bash\nnpm install node-report\nnode -r node-report app.js\n```\nA report will be triggered automatically on unhandled exceptions and fatal\nerror events (for example out of memory errors), and can also be triggered\nby sending a USR2 signal to a Node.js process (not supported on Windows).\n\nA report can also be triggered via an API call from a JavaScript\napplication.\n\n```js\nvar nodereport = require('node-report');\nnodereport.triggerReport();\n```\nThe content of a report can also be returned as a JavaScript string via an\nAPI call from a JavaScript application.\n\n```js\nvar nodereport = require('nodereport');\nvar report_str = nodereport.getReport();\nconsole.log(report_str);\n```\nThe API can be used without adding the automatic exception and fatal error\nhooks and the signal handler, as follows:\n\n```js\nvar nodereport = require('node-report/api');\nnodereport.triggerReport();\n```\n\nContent of the report consists of a header section containing the event\ntype, date, time, PID and Node version, sections containing JavaScript and\nnative stack traces, a section containing V8 heap information, a section\ncontaining libuv handle information and an OS platform information section\nshowing CPU and memory usage and system limits. An example report can be\ntriggered using the Node.js REPL:\n\n```\n$ node\n> nodereport = require('node-report')\n> nodereport.triggerReport()\nWriting Node.js report to file: node-report.20161020.091102.8480.001.txt\nNode.js report completed\n>\n```\n\nWhen a report is triggered, start and end messages are issued to stderr\nand the filename of the report is returned to the caller. The default filename\nincludes the date, time, PID and a sequence number. Alternatively, a filename\ncan be specified as a parameter on the `triggerReport()` call.\n\n```js\nnodereport.triggerReport(\"myReportName\");\n```\n\nBoth `triggerReport()` and `getReport()` can take an optional `Error` object\nas a parameter. If an `Error` object is provided, the message and stack trace\nfrom the object will be included in the report in the `JavaScript Exception\nDetails` section.\nWhen using node-report to handle errors in a callback or an exception handler\nthis allows the report to include the location of the original error as well\nas where it was handled.\nIf both a filename and `Error` object are passed to `triggerReport()` the\n`Error` object should be the second parameter.\n\n```js\ntry {\n  process.chdir('/foo/foo');\n} catch (err) {\n  nodereport.triggerReport(err);\n}\n  ...\n});\n```\n\n## Configuration\n\nAdditional configuration is available using the following APIs:\n\n```js\nvar nodereport = require('node-report/api');\nnodereport.setEvents(\"exception+fatalerror+signal+apicall\");\nnodereport.setSignal(\"SIGUSR2|SIGQUIT\");\nnodereport.setFileName(\"stdout|stderr|<filename>\");\nnodereport.setDirectory(\"<full path>\");\nnodereport.setVerbose(\"yes|no\");\n```\n\nConfiguration on module initialization is also available via environment variables:\n\n```bash\nexport NODEREPORT_EVENTS=exception+fatalerror+signal+apicall\nexport NODEREPORT_SIGNAL=SIGUSR2|SIGQUIT\nexport NODEREPORT_FILENAME=stdout|stderr|<filename>\nexport NODEREPORT_DIRECTORY=<full path>\nexport NODEREPORT_VERBOSE=yes|no\n```\n\n## Examples\n\nTo see examples of reports generated from these events you can run the\ndemonstration applications provided in the node-report github repository. These are\nNode.js applications which will prompt you to trigger the required event.\n\n1. `api.js` - report triggered by JavaScript API call.\n2. `exception.js` - report triggered by unhandled exception.\n3. `fatalerror.js` - report triggered by fatal error on JavaScript heap out of memory.\n4. `loop.js` - looping application, report triggered using kill `-USR2 <pid>`.\n\n## License\n\n[Licensed under the MIT License.](LICENSE.md)\n","starsCount":4,"created":"2013-06-10T14:05:07.806Z","modified":"2017-08-12T20:45:01.392Z","lastPublisher":{"name":"rnchamberlain","email":"richard_chamberlain@uk.ibm.com"},"owners":[{"email":"build@iojs.org","name":"nodejs-foundation"},{"email":"mdawson@devrus.com","name":"mhdawson1"},{"email":"hhellyer@uk.ibm.com","name":"hhellyer"},{"email":"richard_chamberlain@uk.ibm.com","name":"rnchamberlain"},{"email":"jain_chirag04@yahoo.com","name":"chirag04"}],"other":{"_attachments":{},"_from":".","_id":"node-report","_nodeVersion":"6.10.2","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-report-2.2.0.tgz_1496148095613_0.06485354504548013"},"_npmUser":{"name":"rnchamberlain","email":"richard_chamberlain@uk.ibm.com"},"_npmVersion":"3.10.10","_rev":"16-efe5c459a20d4dff28f04972860c4a1f","_shasum":"7985e0945f9ad44ea3821f6d6e71b329530bac92","bugs":{"url":"https://github.com/nodejs/node-report/issues"},"contributors":[{"name":"Richard Chamberlain","email":"richard_chamberlain@uk.ibm.com","url":"https://github.com/rnchamberlain"}],"directories":{},"dist-tags":{"latest":"2.2.0"},"dist":{"shasum":"7985e0945f9ad44ea3821f6d6e71b329530bac92","tarball":"https://registry.npmjs.org/node-report/-/node-report-2.2.0.tgz"},"maintainers":[{"email":"build@iojs.org","name":"nodejs-foundation"},{"email":"mdawson@devrus.com","name":"mhdawson1"},{"email":"hhellyer@uk.ibm.com","name":"hhellyer"},{"email":"richard_chamberlain@uk.ibm.com","name":"rnchamberlain"},{"email":"jain_chirag04@yahoo.com","name":"chirag04"}],"readmeFilename":"README.md","time":{"modified":"2017-08-12T20:45:01.392Z","created":"2013-06-10T14:05:07.806Z","0.1.0":"2013-06-10T14:05:14.347Z","2.0.0":"2017-02-09T13:24:14.261Z","2.1.0":"2017-02-13T15:39:40.274Z","2.1.1":"2017-02-22T13:44:58.739Z","2.1.2":"2017-03-23T10:05:22.156Z","2.2.0":"2017-05-30T12:41:36.608Z"},"users":{"alshamiri2":true,"zafaransari":true,"sharper":true,"yonigoldberg":true}}}