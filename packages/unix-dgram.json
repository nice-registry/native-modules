{"name":"unix-dgram","version":"2.0.1","description":"Unix datagram socket","main":"lib/unix_dgram","homepage":"https://github.com/bnoordhuis/node-unix-dgram","license":{"type":"ISC","url":"https://github.com/bnoordhuis/node-unix-dgram/LICENSE"},"repository":"https://github.com/bnoordhuis/node-unix-dgram","engines":{"node":">=0.7.9"},"dependencies":{"bindings":"~1.1.1","nan":"~2.3.2"},"devDependencies":{},"optionalDependencies":{},"scripts":{"test":"node test/test-dgram-unix.js && node test/test-connect.js && node test/test-connect-callback.js && node test/test-send-error.js","install":"node-gyp rebuild"},"gypfile":true,"gitHead":"aa1fd25a2c23d4a95d20ed6ecd91a39c879060b8","versions":[{"number":"0.0.1","date":"2012-04-04T04:43:26.144Z"},{"number":"0.0.2","date":"2012-08-13T21:46:57.235Z"},{"number":"0.0.3","date":"2013-09-16T19:54:48.312Z"},{"number":"0.0.4","date":"2014-01-07T09:19:44.737Z"},{"number":"0.0.5","date":"2014-02-13T11:53:11.110Z"},{"number":"0.0.6","date":"2014-03-22T11:57:27.324Z"},{"number":"0.1.0","date":"2014-06-03T22:08:01.061Z"},{"number":"0.1.1","date":"2014-06-04T18:10:54.739Z"},{"number":"0.1.2","date":"2015-03-17T12:50:13.429Z"},{"number":"0.2.0","date":"2015-05-05T11:50:52.890Z"},{"number":"0.2.1","date":"2015-05-05T13:09:33.803Z"},{"number":"0.2.2","date":"2015-09-01T11:26:43.050Z"},{"number":"0.2.3","date":"2016-04-28T08:12:27.037Z"},{"number":"1.0.0","date":"2016-05-12T10:20:38.626Z"},{"number":"2.0.0","date":"2017-02-14T13:13:12.290Z"},{"number":"2.0.1","date":"2017-05-03T08:31:59.883Z"}],"readme":"# node-unix-dgram\n\nCommunicate over UNIX datagram sockets.\n\n## Usage\n\nServer:\n\n    // One-shot server.  Note that the server cannot send a reply;\n    // UNIX datagram sockets are unconnected and the client is not addressable.\n    var unix = require('unix-dgram');\n    var server = unix.createSocket('unix_dgram', function(buf) {\n      console.log('received ' + buf);\n      server.close();\n    });\n    server.bind('/path/to/socket');\n\nClient:\n\n    // Send a single message to the server.\n    var message = Buffer('ping');\n    var client = unix.createSocket('unix_dgram');\n    client.on('error', console.error);\n    client.send(message, 0, message.length, '/path/to/socket');\n    client.close();\n\n\n## API\n\nCaveat emptor: events and callbacks are synchronous for efficiency reasons.\n\n### unix.createSocket(type, [listener])\n\nReturns a new unix.Socket object.  `type` should be `'unix_dgram'`.\nThrows an exception if the `socket(2)` system call fails.\n\nThe optional `listener` argument is added as a listener for the `'message'`\nevent.  The event listener receives the message as a `Buffer` object as its\nfirst argument.\n\n### socket.bind(path)\n\nCreate a server at `path`.  Emits a `'listening'` event on success or\nan `'error'` event if the `bind(2)` system call fails.\n\n### socket.connect(remote_path)\n\nAssociate a socket with a remote path so you can send a message without setting\nthe remote path. Once the socket is **connected** it emits a `'connect'` event.\nIt also allows to perform some kind of congestion control as it emits a\n`'congestion'` event when the receiving buffer is full, and a `'writable'` event\nwhen it stops being full.\n\n### socket.send(buf, [callback])\n\nOnly to be used with **connected** sockets. It sends a message to the remote\npath associated with the socket\n\nExample:\n\n    var unix = require('unix-dgram');\n\n    var client = unix.createSocket('unix_dgram');\n\n    client.on('error', function(err) {\n        console.error(err);\n    });\n\n    client.on('connect', function() {\n        console.log('connected');\n        client.on('congestion', function() {\n            console.log('congestion');\n            /* The server is not accepting data */\n        });\n\n        client.on('writable', function() {\n            console.log('writable');\n            /* The server can accept data */\n        });\n\n        var message = new Buffer('PING');\n        client.send(message);\n    });\n\n    client.connect('/tmp/server');\n\n\n### socket.send_to(buf, offset, length, path, [callback]);\n\nSend a message to the server listening at `path`.\n\n`buf` is a `Buffer` object containing the message to send, `offset` is\nthe offset into the buffer and `length` is the length of the message.\n\nFor backwards compatibility, you can still use the `socket.send` function with\nthis same signature.\n\nExample:\n\n    var buf = new Buffer('foobarbaz');\n    socket.send(buf, 3, 4, '/path/to/socket');  // Sends 'barb'.\n\n### socket.close()\n\nClose the socket.  If the socket was bound to a path with `socket.bind()`,\nthen you will no longer receive new messages.  The file system entity\n(the socket file) is not automatically unlinked.\n","starsCount":1,"created":"2012-04-04T04:43:24.229Z","modified":"2017-05-03T08:31:59.883Z","lastPublisher":{"name":"sgimeno","email":"santiago.gimeno@gmail.com"},"owners":[{"name":"bnoordhuis","email":"info@bnoordhuis.nl"},{"name":"rohiniwork","email":"rohini.raghav@gmail.com"},{"name":"sgimeno","email":"santiago.gimeno@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"unix-dgram","_nodeVersion":"6.10.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/unix-dgram-2.0.1.tgz_1493800317975_0.07203932059928775"},"_npmUser":{"name":"sgimeno","email":"santiago.gimeno@gmail.com"},"_npmVersion":"3.10.10","_rev":"3-eeb4334600ba7f30d4a75520ff8c5ae4","_shasum":"9407372e0a2c805d5485852bcab34084c3127535","author":{"name":"Ben Noordhuis","email":"info@bnoordhuis.nl","url":"http://bnoordhuis.nl/"},"bugs":{"url":"https://github.com/bnoordhuis/node-unix-dgram/issues"},"directories":{},"dist-tags":{"latest":"2.0.1"},"dist":{"shasum":"9407372e0a2c805d5485852bcab34084c3127535","tarball":"https://registry.npmjs.org/unix-dgram/-/unix-dgram-2.0.1.tgz"},"maintainers":[{"name":"bnoordhuis","email":"info@bnoordhuis.nl"},{"name":"rohiniwork","email":"rohini.raghav@gmail.com"},{"name":"sgimeno","email":"santiago.gimeno@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-03T08:31:59.883Z","created":"2012-04-04T04:43:24.229Z","0.0.1":"2012-04-04T04:43:26.144Z","0.0.2":"2012-08-13T21:46:57.235Z","0.0.3":"2013-09-16T19:54:48.312Z","0.0.4":"2014-01-07T09:19:44.737Z","0.0.5":"2014-02-13T11:53:11.110Z","0.0.6":"2014-03-22T11:57:27.324Z","0.1.0":"2014-06-03T22:08:01.061Z","0.1.1":"2014-06-04T18:10:54.739Z","0.1.2":"2015-03-17T12:50:13.429Z","0.2.0":"2015-05-05T11:50:52.890Z","0.2.1":"2015-05-05T13:09:33.803Z","0.2.2":"2015-09-01T11:26:43.050Z","0.2.3":"2016-04-28T08:12:27.037Z","1.0.0":"2016-05-12T10:20:38.626Z","2.0.0":"2017-02-14T13:13:12.290Z","2.0.1":"2017-05-03T08:31:59.883Z"},"users":{"princetoad":true}}}