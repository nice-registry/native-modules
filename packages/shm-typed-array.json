{"name":"shm-typed-array","version":"0.0.10","description":"IPC shared memory for NodeJs. Use as Buffer or TypedArray.","main":"index.js","repository":"https://github.com/ukrbublik/shm-typed-array","keywords":["ipc","shm","shared memory","typed array","TypedArray","ArrayBuffer","Buffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array"],"license":"MIT","dependencies":{"nan":"^2.1.0","node-cleanup":"^1.0.1"},"os":["!win32"],"engines":{"node":">=4.0.0"},"homepage":"https://github.com/ukrbublik/shm-typed-array","scripts":{"install":"node-gyp configure && node-gyp rebuild","test":"node ./example.js"},"gitHead":"67cd5eaf717c3cc322f3c77de0389b6dff1340bd","versions":[{"number":"0.0.2","date":"2016-11-14T00:37:29.738Z"},{"number":"0.0.3","date":"2016-11-14T09:41:30.838Z"},{"number":"0.0.4","date":"2016-11-14T15:45:27.153Z"},{"number":"0.0.5","date":"2016-11-18T12:34:07.694Z"},{"number":"0.0.6","date":"2016-11-18T13:28:07.824Z"},{"number":"0.0.7","date":"2016-11-23T16:07:21.496Z"},{"number":"0.0.8","date":"2016-11-23T18:29:25.771Z"},{"number":"0.0.9","date":"2017-03-07T23:58:18.630Z"},{"number":"0.0.10","date":"2017-03-08T00:13:07.780Z"}],"readme":"IPC shared memory for NodeJs. Use as Buffer or TypedArray.<br>\n<a href='https://www.npmjs.com/package/shm-typed-array'><img src='https://img.shields.io/npm/v/shm-typed-array.svg' /> <img src='https://travis-ci.org/ukrbublik/shm-typed-array.svg?branch=master' /></a>\n\n\n# Install\n``` bash\n$ npm install shm-typed-array\n$ npm test\n```\nManual build:\n``` bash\nnode-gyp configure\nnode-gyp build\nnode example.js\n```\nTested on Ubuntu 16, Node v6.9.1\n\n# API\n\n<h4>shm.create (count, typeKey [, key])</h4>\nCreate shared memory segment.<br>\ncount - number of elements (not bytes), typeKey - type of elements ('Buffer' by default, see list below), key - optional integer to create shm with specific key.<br>\nReturns shared memory Buffer or descendant of TypedArray object, class depends on param \"typeKey\". Or returns null if shm can't be created.<br>\nReturned object has property 'key' - integer key of created shared memory segment, to use in shm.get().\n\n<h4>shm.get (key, typeKey)</h4>\nGet created shared memory segment. Returns null if shm can't be opened.\n\n<h4>shm.detach (key)</h4>\nDetach shared memory segment.<br>\nIf there are no other attaches for this segment, it will be destroyed.\n\n<h4>shm.detachAll ()</h4>\nDetach all shared memory segments.<br>\nWill be automatically called on process exit/termination.\n\n<h4>Types:</h4>\n<pre>\nshm.BufferType = {\n\t'Buffer': shm.SHMBT_BUFFER,\n\t'Int8Array': shm.SHMBT_INT8,\n\t'Uint8Array': shm.SHMBT_UINT8,\n\t'Uint8ClampedArray': shm.SHMBT_UINT8CLAMPED,\n\t'Int16Array': shm.SHMBT_INT16,\n\t'Uint16Array': shm.SHMBT_UINT16,\n\t'Int32Array': shm.SHMBT_INT32,\n\t'Uint32Array': shm.SHMBT_UINT32,\n\t'Float32Array': shm.SHMBT_FLOAT32, \n\t'Float64Array': shm.SHMBT_FLOAT64,\n};\n</pre>\n\n<h4>shm.getTotalSize()</h4>\nGet total size of all shared segments in bytes.\n\n<h4>shm.LengthMax</h4>\nMax length of shared memory segment (count of elements, not bytes)<br>\n2^31 for 64bit, 2^30 for 32bit\n\n# Usage\nSee example.js\n\n``` js\nconst cluster = require('cluster');\nconst shm = require('./index.js');\n\nvar buf, arr;\nif (cluster.isMaster) {\n\tbuf = shm.create(4096); //4KB\n\tarr = shm.create(1000000*100, 'Float32Array'); //100M floats\n\tbuf[0] = 1;\n\tarr[0] = 10.0;\n\tconsole.log('[Master] Typeof buf:', buf.constructor.name, \n\t\t'Typeof arr:', arr.constructor.name);\n\t\n\tvar worker = cluster.fork();\n\tworker.on('online', function() {\n\t\tthis.send({ msg: 'shm', bufKey: buf.key, arrKey: arr.key });\n\t\tvar i = 0;\n\t\tsetInterval(function() {\n\t\t\tbuf[0] += 1;\n\t\t\tarr[0] /= 2;\n\t\t\tconsole.log(i + ' [Master] Set buf[0]=', buf[0], \n\t\t\t\t' arr[0]=', arr ? arr[0] : null);\n\t\t\ti++;\n\t\t\tif (i == 5) {\n\t\t\t\tgroupSuicide();\n\t\t\t}\n\t\t}, 500);\n\t});\t\n} else {\n\tprocess.on('message', function(data) {\n\t\tvar msg = data.msg;\n\t\tif (msg == 'shm') {\n\t\t\tbuf = shm.get(data.bufKey);\n\t\t\tarr = shm.get(data.arrKey, 'Float32Array');\n\t\t\tconsole.log('[Worker] Typeof buf:', buf.constructor.name, \n\t\t\t\t'Typeof arr:', arr.constructor.name);\n\t\t\tvar i = 0;\n\t\t\tsetInterval(function() {\n\t\t\t\tconsole.log(i + ' [Worker] Get buf[0]=', buf[0], \n\t\t\t\t\t' arr[0]=', arr ? arr[0] : null);\n\t\t\t\ti++;\n\t\t\t\tif (i == 2) {\n\t\t\t\t\tshm.detach(data.arrKey);\n\t\t\t\t\tarr = null; //otherwise process will drop\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t} else if (msg == 'exit') {\n\t\t\tprocess.exit();\n\t\t}\n\t});\n}\n\nfunction groupSuicide() {\n\tif (cluster.isMaster) {\n\t\tfor (var id in cluster.workers) {\n\t\t    cluster.workers[id].send({ msg: 'exit'});\n\t\t    cluster.workers[id].destroy();\n\t\t}\n\t\tprocess.exit();\n\t}\n}\n```\n<b>Output:</b>\n<pre>\n[Master] Typeof buf: Buffer Typeof arr: Float32Array\n[Worker] Typeof buf: Buffer Typeof arr: Float32Array\n0 [Master] Set buf[0]= 2  arr[0]= 5\n0 [Worker] Get buf[0]= 2  arr[0]= 5\n1 [Master] Set buf[0]= 3  arr[0]= 2.5\n1 [Worker] Get buf[0]= 3  arr[0]= 2.5\n2 [Master] Set buf[0]= 4  arr[0]= 1.25\n2 [Worker] Get buf[0]= 4  arr[0]= null\n3 [Master] Set buf[0]= 5  arr[0]= 0.625\n3 [Worker] Get buf[0]= 5  arr[0]= null\n4 [Master] Set buf[0]= 6  arr[0]= 0.3125\nshm segments destroyed: 2\n</pre>\n","starsCount":1,"created":"2016-11-14T00:37:29.738Z","modified":"2017-03-08T00:13:07.780Z","lastPublisher":{"name":"ukrbublik","email":"ukrbublik@gmail.com"},"owners":[{"name":"ukrbublik","email":"ukrbublik@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"shm-typed-array","_nodeVersion":"6.9.4","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/shm-typed-array-0.0.10.tgz_1488931954572_0.32661427091807127"},"_npmUser":{"name":"ukrbublik","email":"ukrbublik@gmail.com"},"_npmVersion":"3.10.10","_rev":"10-664c498a18ea20c6a9e09a60c4b958f9","_shasum":"1d5315acb8dfd722b1e66fdea38b5256ff022110","author":{"name":"Oblogin Denis","email":"ukrbublik@gmail.com","url":"https://github.com/ukrbublik"},"bugs":{"url":"https://github.com/ukrbublik/shm-typed-array/issues"},"directories":{},"dist-tags":{"latest":"0.0.10"},"dist":{"shasum":"1d5315acb8dfd722b1e66fdea38b5256ff022110","tarball":"https://registry.npmjs.org/shm-typed-array/-/shm-typed-array-0.0.10.tgz"},"maintainers":[{"name":"ukrbublik","email":"ukrbublik@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2017-03-08T00:13:07.780Z","created":"2016-11-14T00:37:29.738Z","0.0.2":"2016-11-14T00:37:29.738Z","0.0.3":"2016-11-14T09:41:30.838Z","0.0.4":"2016-11-14T15:45:27.153Z","0.0.5":"2016-11-18T12:34:07.694Z","0.0.6":"2016-11-18T13:28:07.824Z","0.0.7":"2016-11-23T16:07:21.496Z","0.0.8":"2016-11-23T18:29:25.771Z","0.0.9":"2017-03-07T23:58:18.630Z","0.0.10":"2017-03-08T00:13:07.780Z"},"users":{"ukrbublik":true}}}