{"name":"@klortho/libxmljs-mt","description":"multi-threaded libxml bindings for v8 javascript engine","version":"0.17.0","scripts":{"test":"node --expose_gc node_modules/nodeunit/bin/nodeunit test","install":"node-gyp rebuild"},"repository":"https://github.com/klortho/libxmljs","main":"./index","license":"MIT","engines":{"node":">=0.8.0"},"dependencies":{"bindings":"^1.2.1","nan":"^2.0.7"},"devDependencies":{"nodeunit":"^0.9.0"},"gypfile":true,"gitHead":"d215968464cf1eeb33e509d310e79a4d3cf5a3ea","homepage":"https://github.com/klortho/libxmljs#readme","versions":[{"number":"0.17.0","date":"2016-02-02T23:52:44.328Z"}],"readme":"# Libxmljs-mt\n[![Build Status](https://secure.travis-ci.org/gagern/libxmljs.svg?branch=master)](http://travis-ci.org/gagern/libxmljs)\n\nThis project is a fork of [libxmljs](https://github.com/polotek/libxmljs).\nThe current version 0.17.0 is based on libxmljs 0.17.0 and libxml 2.9.3.\n\nLibxmljs was originally designed with single-threaded operations in mind.\nThere are no asynchroneous operations for things like parsing XML documents.\nBut even more importantly, since the embedded [libxml](http://xmlsoft.org/)\nwas configured only for single-threaded use, no other package\ncould build on this to provide multi-threaded operations using libxml.\nThe issue is discussed at length in upstream\n[issue 296](https://github.com/polotek/libxmljs/issues/296).\n\nThis package here adds multi-threading support to libxmljs.\nIt does offer a method to asynchroneously parse an XML file using\n\n```js\nlibxmljs.fromXmlAsync(buffer, options, function callback(err, doc) {â€¦});\n```\n\nand it can be used by other packages to provide\nmore advanced asynchroneous operations.\nTo do so, the code has to construct a `libxmljs::WorkerParent` object\non the V8 thread and then a `libxmljs::WorkerSentinel` on the worker thread.\nBoth of these are RAII sentinels, so they do some setup in their constructor\nand some cleaning up in their destructor.\nGetting their lifetime right is important.\nWhen using nan, it's easiest to make the `WorkerParent` a member\nof the class derived from `NanAsyncWorker`\nand have a `WorkerSentinel` variable in the `Execute` method of that class.\n\nIt is to be hoped that this fork is a temporary solution,\nand that the original libxmljs project will adapt\neither this solution or a similar one to become usable in a multi-threaded way.\nBut the corresponding bug report has remained open for too long,\nand even though there was some very valuable discussion going on,\nthere were also long spans with no activity at all.\nIt is hard to tell when this fork will become obsolete, if ever.\n\nNote that this project makes use of a git submodule for the libxml code,\nso if you are building from a git checkout you might have to perform\n`git submodule update --init` before you can do `npm install`.\n\nBelow comes the documentation from the original project,\nwith only slight modifications where appropriate.\n\n-----\n\n# Libxmljs\nLibXML bindings for [node.js](http://nodejs.org/)\n\n```javascript\nvar libxmljs = require(\"libxmljs-mt\");\nvar xml =  '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\n           '<root>' +\n               '<child foo=\"bar\">' +\n                   '<grandchild baz=\"fizbuzz\">grandchild content</grandchild>' +\n               '</child>' +\n               '<sibling>with content!</sibling>' +\n           '</root>';\n\nvar xmlDoc = libxmljs.parseXml(xml);\n\n// xpath queries\nvar gchild = xmlDoc.get('//grandchild');\n\nconsole.log(gchild.text());  // prints \"grandchild content\"\n\nvar children = xmlDoc.root().childNodes();\nvar child = children[0];\n\nconsole.log(child.attr('foo').value()); // prints \"bar\"\n```\n\n## Support\n\n* Docs - [http://github.com/polotek/libxmljs/wiki](http://github.com/polotek/libxmljs/wiki)\n* Mailing list - [http://groups.google.com/group/libxmljs](http://groups.google.com/group/libxmljs)\n\n## API and Examples\n\nCheck out the wiki [http://github.com/polotek/libxmljs/wiki](http://github.com/polotek/libxmljs/wiki).\n\nSee the [examples](https://github.com/gagern/libxmljs/tree/master/examples) folder.\n\n## Installation via [npm](https://npmjs.org)\n\n```shell\nnpm install libxmljs-mt\n```\n\n## Contribute\n\nStart by checking out the open issues both for [the upstream project](https://github.com/polotek/libxmljs/issues?state=open) and the [multi-threaded fork](https://github.com/gagern/libxmljs/issues?state=open). Specifically the [desired feature](https://github.com/polotek/libxmljs/issues?labels=desired+feature&page=1&state=open) ones.\n\n### Requirements\n\nMake sure you have met the requirements for [node-gyp](https://github.com/TooTallNate/node-gyp#installation). You *do not* need to manually install node-gyp; it comes bundled with node.\n\n","created":"2016-02-02T23:52:44.328Z","modified":"2016-02-02T23:52:44.328Z","lastPublisher":{"name":"klortho","email":"voldrani@gmail.com"},"owners":[{"name":"klortho","email":"voldrani@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"@klortho/libxmljs-mt","_nodeVersion":"5.5.0","_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/libxmljs-mt-0.17.0.tgz_1454457163151_0.19452732359059155"},"_npmUser":{"name":"klortho","email":"voldrani@gmail.com"},"_npmVersion":"3.6.0","_rev":"1-46e3e5f68d515da02633656507430acc","_shasum":"1612f63dfd11812759a85614a01cbe9ec3138d11","author":{"name":"Marco Rogers"},"bugs":{"url":"http://github.com/klortho/libxmljs/issues"},"contributors":[{"name":"Jeff Smick"},{"name":"Roman Shtylman"},{"name":"Martin von Gagern","email":"Martin.vGagern@gmx.net"}],"directories":{},"dist-tags":{"latest":"0.17.0"},"dist":{"shasum":"1612f63dfd11812759a85614a01cbe9ec3138d11","tarball":"http://registry.npmjs.org/@klortho/libxmljs-mt/-/libxmljs-mt-0.17.0.tgz"},"maintainers":[{"name":"klortho","email":"voldrani@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-02-02T23:52:44.328Z","created":"2016-02-02T23:52:44.328Z","0.17.0":"2016-02-02T23:52:44.328Z"}}}