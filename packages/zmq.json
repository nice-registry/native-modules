{"name":"zmq","version":"2.15.3","description":"Bindings for node.js and io.js to ZeroMQ","main":"index","repository":"https://github.com/JustinTulloss/zeromq.node","dependencies":{"nan":"~2.3.0","bindings":"~1.2.1"},"devDependencies":{"should":"2.1.x","semver":"~4.1.1","mocha":"~1.13.0"},"engines":{"node":">=0.8"},"scripts":{"test":"mocha --expose-gc --slow 2000 --timeout 600000","install":"node-gyp rebuild"},"keywords":["zeromq","zmq","0mq","ømq","libzmq","native","binding","addon"],"license":"MIT","gypfile":true,"gitHead":"b7dc94d9d5a6a72f9df171c5bcc9e6376d009ece","homepage":"https://github.com/JustinTulloss/zeromq.node#readme","versions":[{"number":"1.0.0","date":"2011-07-17T23:07:20.492Z"},{"number":"1.0.1","date":"2011-07-21T03:50:36.613Z"},{"number":"1.0.2","date":"2011-08-04T18:35:24.269Z"},{"number":"1.0.3","date":"2011-11-08T09:00:14.295Z"},{"number":"1.0.4","date":"2011-12-05T00:47:03.464Z"},{"number":"2.0.0","date":"2011-12-05T02:50:06.706Z"},{"number":"2.0.1","date":"2012-01-29T02:24:31.898Z"},{"number":"2.0.2","date":"2012-03-14T20:28:08.640Z"},{"number":"2.0.3","date":"2012-03-14T20:28:19.351Z"},{"number":"2.1.0","date":"2012-06-29T19:36:07.065Z"},{"number":"2.2.0","date":"2012-10-18T00:41:47.288Z"},{"number":"2.3.0","date":"2013-03-15T03:43:54.914Z"},{"number":"2.4.0","date":"2013-04-09T08:54:45.760Z"},{"number":"2.5.0","date":"2013-08-20T02:54:25.776Z"},{"number":"2.5.1","date":"2013-08-28T06:32:21.093Z"},{"number":"2.6.0","date":"2014-01-23T02:12:55.174Z"},{"number":"2.7.0","date":"2014-04-24T03:09:51.827Z"},{"number":"2.8.0","date":"2014-08-27T08:36:17.942Z"},{"number":"2.9.0","date":"2015-01-05T03:43:56.085Z"},{"number":"2.10.0","date":"2015-01-22T02:54:26.687Z"},{"number":"2.11.0","date":"2015-03-31T04:26:36.183Z"},{"number":"2.11.1","date":"2015-05-21T03:53:00.539Z"},{"number":"2.12.0","date":"2015-07-10T07:15:42.484Z"},{"number":"2.13.0","date":"2015-08-26T08:18:21.019Z"},{"number":"2.14.0","date":"2015-11-20T10:17:07.126Z"},{"number":"2.15.0","date":"2016-04-27T10:13:36.603Z"},{"number":"2.15.1","date":"2016-05-08T02:03:11.471Z"},{"number":"2.15.2","date":"2016-05-22T03:56:46.931Z"},{"number":"2.15.3","date":"2016-06-03T05:24:46.686Z"}],"readme":"# zmq &nbsp;&nbsp;[![Build Status](https://travis-ci.org/JustinTulloss/zeromq.node.png)](https://travis-ci.org/JustinTulloss/zeromq.node) &nbsp;[![Build status](https://ci.appveyor.com/api/projects/status/n0h0sjs127eadfuo/branch/windowsbuild?svg=true)](https://ci.appveyor.com/project/reqshark/zeromq-node)\n\n[ØMQ](http://www.zeromq.org/) bindings for node.js.\n\n## Installation\n\n### on Windows:\nFirst install [Visual Studio](https://www.visualstudio.com/) and either\n[Node.js](https://nodejs.org/download/) or [io.js](https://iojs.org/dist/latest/).\n\nEnsure you're building zmq from a conservative location on disk, one without\nunusual characters or spaces, for example somewhere like: `C:\\sources\\myproject`.\n\nInstalling the ZeroMQ library is optional and not required on Windows. We\nrecommend running `npm install` and node executable commands from a\n[github for windows](https://windows.github.com/) shell or similar environment.\n\n### installing on Unix/POSIX (and osx):\n\nFirst install `pkg-config` and the [ZeroMQ library](http://www.zeromq.org/intro:get-the-software).\n\nThis module is compatible with ZeroMQ versions 2, 3 and 4. The installation\nprocess varies by platform, but headers are mandatory. Most Linux distributions\nprovide these headers with `-devel` packages like `zeromq-devel` or\n`zeromq3-devel`. Homebrew for OS X provides versions 4 and 3 with packages\n`zeromq` and `zeromq3`, respectively. A\n[Chris Lea PPA](https://launchpad.net/~chris-lea/+archive/ubuntu/zeromq)\nis available for Debian-like users who want a version newer than currently\nprovided by their distribution. Windows is supported but not actively\nmaintained.\n\nNote: For zap support with versions >=4 you need to have libzmq built and linked\nagainst libsodium. Check the [Travis configuration](.travis.yml) for a list of what is tested\nand therefore known to work.\n\n#### with your platform-specifics taken care of, install and use this module:\n\n    $ npm install zmq\n\n## Examples\n\n### Push/Pull\n\n```js\n// producer.js\nvar zmq = require('zmq')\n  , sock = zmq.socket('push');\n\nsock.bindSync('tcp://127.0.0.1:3000');\nconsole.log('Producer bound to port 3000');\n\nsetInterval(function(){\n  console.log('sending work');\n  sock.send('some work');\n}, 500);\n```\n\n```js\n// worker.js\nvar zmq = require('zmq')\n  , sock = zmq.socket('pull');\n\nsock.connect('tcp://127.0.0.1:3000');\nconsole.log('Worker connected to port 3000');\n\nsock.on('message', function(msg){\n  console.log('work: %s', msg.toString());\n});\n```\n\n### Pub/Sub\n\n```js\n// pubber.js\nvar zmq = require('zmq')\n  , sock = zmq.socket('pub');\n\nsock.bindSync('tcp://127.0.0.1:3000');\nconsole.log('Publisher bound to port 3000');\n\nsetInterval(function(){\n  console.log('sending a multipart message envelope');\n  sock.send(['kitty cats', 'meow!']);\n}, 500);\n```\n\n```js\n// subber.js\nvar zmq = require('zmq')\n  , sock = zmq.socket('sub');\n\nsock.connect('tcp://127.0.0.1:3000');\nsock.subscribe('kitty cats');\nconsole.log('Subscriber connected to port 3000');\n\nsock.on('message', function(topic, message) {\n  console.log('received a message related to:', topic, 'containing message:', message);\n});\n```\n## Monitoring\n\nYou can get socket state changes events by calling to the `monitor` function.\nThe supported events are (see ZMQ [docs](http://api.zeromq.org/4-2:zmq-socket-monitor) for full description):\n\n* connect - `ZMQ_EVENT_CONNECTED`\n* connect_delay - `ZMQ_EVENT_CONNECT_DELAYED`\n* connect_retry - `ZMQ_EVENT_CONNECT_RETRIED`\n* listen - `ZMQ_EVENT_LISTENING`\n* bind_error - `ZMQ_EVENT_BIND_FAILED`\n* accept - `ZMQ_EVENT_ACCEPTED`\n* accept_error - `ZMQ_EVENT_ACCEPT_FAILED`\n* close - `ZMQ_EVENT_CLOSED`\n* close_error - `ZMQ_EVENT_CLOSE_FAILED`\n* disconnect - `ZMQ_EVENT_DISCONNECTED`\n\nAll events get 2 arguments:\n\n* `fd` - The file descriptor of the underlying socket (if available)\n* `endpoint` - The underlying socket endpoint\n\nA special `monitor_error` event will be raised when there was an error in the monitoring process, after this event no more\nmonitoring events will be sent, you can try and call `monitor` again to restart the monitoring process.\n\n### monitor(interval, numOfEvents)\nWill create an inproc PAIR socket where zmq will publish socket state changes events, the events from this socket will\nbe read every `interval` (defaults to 10ms).\nBy default only 1 message will be read every interval, this can be configured by using the `numOfEvents` parameter,\nwhere passing 0 will read all available messages per interval.\n\n### unmonitor()\nStop the monitoring process\n\n### example\n\n```js\n// Create a socket\nvar zmq = require('zmq');\nsocket = zmq.socket('req');\n\n// Register to monitoring events\nsocket.on('connect', function(fd, ep) {console.log('connect, endpoint:', ep);});\nsocket.on('connect_delay', function(fd, ep) {console.log('connect_delay, endpoint:', ep);});\nsocket.on('connect_retry', function(fd, ep) {console.log('connect_retry, endpoint:', ep);});\nsocket.on('listen', function(fd, ep) {console.log('listen, endpoint:', ep);});\nsocket.on('bind_error', function(fd, ep) {console.log('bind_error, endpoint:', ep);});\nsocket.on('accept', function(fd, ep) {console.log('accept, endpoint:', ep);});\nsocket.on('accept_error', function(fd, ep) {console.log('accept_error, endpoint:', ep);});\nsocket.on('close', function(fd, ep) {console.log('close, endpoint:', ep);});\nsocket.on('close_error', function(fd, ep) {console.log('close_error, endpoint:', ep);});\nsocket.on('disconnect', function(fd, ep) {console.log('disconnect, endpoint:', ep);});\n\n// Handle monitor error\nsocket.on('monitor_error', function(err) {\n\tconsole.log('Error in monitoring: %s, will restart monitoring in 5 seconds', err);\n\tsetTimeout(function() { socket.monitor(500, 0); }, 5000);\n});\n\n// Call monitor, check for events every 500ms and get all available events.\nconsole.log('Start monitoring...');\nsocket.monitor(500, 0);\nsocket.connect('tcp://127.0.0.1:1234');\n\nsetTimeout(function() {\n\tconsole.log('Stop the monitoring...');\n\tsocket.unmonitor();\n}, 20000);\n\n```\n\n## Detaching from the event loop\nYou may temporarily disable polling on a specific ZMQ socket and let the node.js\nprocess to terminate without closing sockets explicitly by removing their event loop\nreferences.  Newly created sockets are already `ref()`-ed.\n\n### unref()\nDetach the socket from the main event loop of the node.js runtime.\nCalling this on already detached sockets is a no-op.\n\n### ref()\nAttach the socket to the main event loop.\nCalling this on already attached sockets is a no-op.\n\n### Example\n```js\nvar zmq = require('zmq');\nsocket = zmq.socket('sub');\nsocket.bindSync('tcp://127.0.0.1:1234');\nsocket.subscribe('');\nsocket.on('message', function(msg) { console.log(msg.toString(); });\n// Here blocks indefinitely unless interrupted.\n// Let it terminate after 1 second.\nsetTimeout(function() { socket.unref(); }, 1000);\n```\n\n## Running tests\n\n#### Install dev deps:\n```sh\n$ git clone https://github.com/JustinTulloss/zeromq.node.git zmq && cd zmq\n$ npm i\n```\n#### Build:\n```sh\n# on unix:\n$ make\n\n# building on windows:\n> npm i\n```\n#### Test:\n```sh\n# on unix:\n$ make test\n\n# testing on windows:\n> npm t\n```\n## Running benchmarks\n\nBenchmarks are available in the `perf` directory, and have been implemented\naccording to the zmq documentation:\n[How to run performance tests](http://www.zeromq.org/results:perf-howto)\n\nIn the following examples, the arguments are respectively:\n- the host to connect to/bind on\n- message size (in bytes)\n- message count\n\nYou can run a latency benchmark by running these two commands in two separate\nshells:\n\n```sh\nnode ./local_lat.js tcp://127.0.0.1:5555 1 100000\n```\n\n```sh\nnode ./remote_lat.js tcp://127.0.0.1:5555 1 100000\n```\n\nAnd you can run throughput tests by running these two commands in two\nseparate shells:\n\n```sh\nnode ./local_thr.js tcp://127.0.0.1:5555 1 100000\n```\n\n```sh\nnode ./remote_thr.js tcp://127.0.0.1:5555 1 100000\n```\n\nRunning `make perf` will run the commands listed above.\n","starsCount":52,"created":"2011-07-17T23:07:19.948Z","modified":"2017-08-11T17:35:19.116Z","lastPublisher":{"name":"ronkorving","email":"ron@ronkorving.nl"},"owners":[{"email":"tj@vision-media.ca","name":"tjholowaychuk"},{"email":"ron@ronkorving.nl","name":"ronkorving"},{"email":"justin.tulloss@gmail.com","name":"justin"}],"other":{"_attachments":{},"_from":".","_id":"zmq","_nodeVersion":"0.12.7","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/zmq-2.15.3.tgz_1464931483398_0.3011886226013303"},"_npmUser":{"name":"ronkorving","email":"ron@ronkorving.nl"},"_npmVersion":"2.11.3","_rev":"12-6e08eec837599de674a69312aa29774b","_shasum":"66c6de82cc36b09734b820703776490a6fbbe624","author":{"name":"Justin Tulloss","email":"justin.tulloss@gmail.com","url":"http://justin.harmonize.fm"},"bugs":{"url":"https://github.com/JustinTulloss/zeromq.node/issues"},"contributors":[{"name":"Justin Tulloss","email":"justin.tulloss@gmail.com","url":"http://justin.harmonize.fm"},{"name":"Stéphan Kochen","email":"stephan@kochen.nl","url":"http://stephan.kochen.nl/"},{"name":"Mike Castleman","email":"m@mlcastle.net","url":"http://mlcastle.net/"},{"name":"Matt Crocker"},{"name":"Jeremy Barnes","email":"jeremy@barneso.com","url":"http://www.barneso.com/"},{"name":"Rick","email":"technoweenie@gmail.com","url":"http://techno-weenie.net/"},{"name":"Corey Jewett","url":"http://syntheticplayground.com/"},{"name":"Micheil Smith","email":"micheil@brandedcode.com","url":"http://brandedcode.com/"},{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com/"},{"name":"Ron Korving","url":"https://github.com/ronkorving"},{"name":"Mark Everitt","url":"http://qubyte.dyndns.org/"},{"name":"Aldis Andrejevs","url":"https://github.com/aaudis"},{"name":"Iskren Ivov Chernev","email":"iskren.chernev@gmail.com"},{"name":"Seth Fitzsimmons"},{"name":"Patrick Lucas"},{"name":"Alexander Simmerl","url":"https://github.com/xla"},{"name":"Ian Babrou"},{"name":"Niall O'Higgins"},{"name":"Brian White","url":"https://github.com/mscdex"},{"name":"Mathieu D'Amours","url":"https://github.com/matehat"},{"name":"Joshua Gourneau"},{"name":"Yaroslav Shirokov"},{"name":"Marc Harter","url":"https://github.com/wavded"},{"name":"John Sun","url":"https://github.com/freehaha"},{"name":"Alexey Kupershtokh","email":"alexey.kupershtokh@gmail.com"},{"name":"Jon Gretar Borgthorsson","url":"https://github.com/JonGretar"},{"name":"Brian Lalor","url":"https://github.com/blalor"},{"name":"Benjamin Byholm","url":"https://github.com/kkoopa"},{"name":"Alejandro","url":"https://github.com/Minjung"},{"name":"Eli Skeggs","email":"skeggse@gmail.com","url":"https://github.com/skeggse"},{"name":"Bent Cardan","email":"bent@nothingsatisfies.com","url":"https://github.com/reqshark"}],"directories":{},"dist-tags":{"latest":"2.15.3"},"dist":{"shasum":"66c6de82cc36b09734b820703776490a6fbbe624","tarball":"http://registry.npmjs.org/zmq/-/zmq-2.15.3.tgz"},"maintainers":[{"email":"tj@vision-media.ca","name":"tjholowaychuk"},{"email":"ron@ronkorving.nl","name":"ronkorving"},{"email":"justin.tulloss@gmail.com","name":"justin"}],"readmeFilename":"README.md","time":{"modified":"2017-08-11T17:35:19.116Z","created":"2011-07-17T23:07:19.948Z","1.0.0":"2011-07-17T23:07:20.492Z","1.0.1":"2011-07-21T03:50:36.613Z","1.0.2":"2011-08-04T18:35:24.269Z","1.0.3":"2011-11-08T09:00:14.295Z","1.0.4":"2011-12-05T00:47:03.464Z","2.0.0":"2011-12-05T02:50:06.706Z","2.0.1":"2012-01-29T02:24:31.898Z","2.0.2":"2012-03-14T20:28:08.640Z","2.0.3":"2012-03-14T20:28:19.351Z","2.1.0":"2012-06-29T19:36:07.065Z","2.2.0":"2012-10-18T00:41:47.288Z","2.3.0":"2013-03-15T03:43:54.914Z","2.4.0":"2013-04-09T08:54:45.760Z","2.5.0":"2013-08-20T02:54:25.776Z","2.5.1":"2013-08-28T06:32:21.093Z","2.6.0":"2014-01-23T02:12:55.174Z","2.7.0":"2014-04-24T03:09:51.827Z","2.8.0":"2014-08-27T08:36:17.942Z","2.9.0":"2015-01-05T03:43:56.085Z","2.10.0":"2015-01-22T02:54:26.687Z","2.11.0":"2015-03-31T04:26:36.183Z","2.11.1":"2015-05-21T03:53:00.539Z","2.12.0":"2015-07-10T07:15:42.484Z","2.13.0":"2015-08-26T08:18:21.019Z","2.14.0":"2015-11-20T10:17:07.126Z","2.15.0":"2016-04-27T10:13:36.603Z","2.15.1":"2016-05-08T02:03:11.471Z","2.15.2":"2016-05-22T03:56:46.931Z","2.15.3":"2016-06-03T05:24:46.686Z"},"users":{"fgribreau":true,"wicked":true,"blalor":true,"mabotech":true,"majj":true,"blessedfella":true,"seldo":true,"stringparser":true,"cookieu":true,"dennisgnl":true,"billautomata":true,"claudionunezjr":true,"luislobo":true,"lestoni":true,"byossarian":true,"dofy":true,"stuligan":true,"mhaidarh":true,"longlivechief":true,"brandonpapworth":true,"henryorrin":true,"joshua.marquez":true,"pensierinmusica":true,"martinkuba":true,"thomas.miele":true,"jerrywu":true,"epheo":true,"mitica":true,"jesusgoku":true,"j.su":true,"shiningray":true,"moimikey":true,"digitalextremist":true,"abdul":true,"roman-io":true,"ellyo":true,"nescio":true,"sloanb":true,"roadlabs":true,"largepuma":true,"bacra":true,"jez9999":true,"xinwangwang":true,"langri-sha":true,"ghanbari":true,"daizch":true,"icerainnuaa":true,"raojs":true,"shaomingquan":true,"hyloque":true,"wuwenbin":true,"agnibha":true}}}