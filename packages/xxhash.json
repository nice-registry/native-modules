{"name":"xxhash","version":"0.2.4","description":"An xxhash binding for node.js","main":"./lib/xxhash","dependencies":{"nan":"^2.4.0"},"scripts":{"install":"node-gyp rebuild","test":"node test/test.js"},"engines":{"node":">=0.10.0"},"keywords":["hash","xxhash","fast","streaming"],"licenses":[{"type":"MIT","url":"https://raw.github.com/mscdex/node-xxhash/master/LICENSE"}],"repository":"https://github.com/mscdex/node-xxhash","gypfile":true,"homepage":"https://github.com/mscdex/node-xxhash#readme","_resolved":"https://github.com/mscdex/node-xxhash/tarball/v0.2.4","versions":[{"number":"0.0.1","date":"2012-05-30T21:58:49.314Z"},{"number":"0.1.0","date":"2013-01-14T00:26:09.505Z"},{"number":"0.1.1","date":"2013-01-22T19:37:39.378Z"},{"number":"0.1.2","date":"2013-03-14T01:44:31.630Z"},{"number":"0.1.3","date":"2013-04-05T23:42:37.614Z"},{"number":"0.2.0","date":"2013-06-27T00:38:26.158Z"},{"number":"0.2.1","date":"2015-01-25T04:58:26.726Z"},{"number":"0.2.2","date":"2015-05-05T17:39:02.244Z"},{"number":"0.2.3","date":"2015-09-13T05:06:58.695Z"},{"number":"0.2.4","date":"2016-07-28T06:30:55.186Z"}],"readme":"\nDescription\n===========\n\nAn [xxhash](https://github.com/Cyan4973/xxHash) binding for [node.js](http://nodejs.org/).\n\n[![Build Status](https://travis-ci.org/mscdex/node-xxhash.svg?branch=master)](https://travis-ci.org/mscdex/node-xxhash)\n[![Build status](https://ci.appveyor.com/api/projects/status/y2f8pisjshf4g181)](https://ci.appveyor.com/project/mscdex/node-xxhash)\n\n\nRequirements\n============\n\n* [node.js](http://nodejs.org/) -- v0.10.0 or newer\n\n\nInstall\n============\n\n    npm install xxhash\n\n\nExamples\n========\n\n* Hash a file in one step:\n\n```javascript\nvar XXHash = require('xxhash'),\n    fs = require('fs');\n\nvar file = fs.readFileSync('somefile'),\n    result = XXHash.hash(file, 0xCAFEBABE);\n```\n\n* Hash a file in multiple steps:\n\n```javascript\nvar XXHash = require('xxhash'),\n    fs = require('fs');\n\nvar hasher = new XXHash(0xCAFEBABE);\n\nfs.createReadStream('somefile')\n  .on('data', function(data) {\n    hasher.update(data);\n  })\n  .on('end', function() {\n    console.log('Hash value = ' + hasher.digest());\n  });\n```\n\n* Hash a file with a hash stream:\n\n```javascript\nvar HashStream = require('xxhash').Stream,\n    fs = require('fs');\n\nvar hasher = new HashStream(0xCAFEBABE);\n\nfs.createReadStream('somefile')\n  .pipe(hasher)\n  .on('finish', function() {\n    console.log('Hash value = ' + hasher.read());\n  });\n```\n\n\nAPI\n===\n\nXXHash Static Methods\n---------------------\n\n* **hash**(< _Buffer_ >data, < _mixed_ >seed[, < _mixed_ >encbuf]) - _mixed_ - Performs a single/one-time 32-bit hash of `data` with the given `seed`. `seed` can be an unsigned integer or a Buffer containing (1 <= n <= 4) bytes to use for the seed. The resulting hash is returned. The format of the hash depends on the value of `encbuf`. If `encbuf` is a string and one of: `buffer`, `hex`, `base64`, or `binary`, then the hash value will be encoded in the appropriate format. If `encbuf` is a _Buffer_ of at least 4 bytes, then the hash value will be written to `encbuf` and `encbuf` will be returned. Otherwise, if `encbuf` is not supplied, then the hash will be an unsigned integer.\n\n* **hash64**(< _Buffer_ >data, < _mixed_ >seed[, < _mixed_ >encbuf]) - _mixed_ - Performs a single/one-time 64-bit hash of `data` with the given `seed`. `seed` can be an unsigned integer or a Buffer containing (1 <= n <= 8) bytes to use for the seed. The resulting hash is returned. The format of the hash depends on the value of `encbuf`. If `encbuf` is a string and one of: `buffer`, `hex`, `base64`, or `binary`, then the hash value will be encoded in the appropriate format. If `encbuf` is a _Buffer_ of at least 8 bytes, then the hash value will be written to `encbuf` and `encbuf` will be returned. The default value for `encbuf` is `'buffer'`.\n\n\nXXHash Static Properties\n------------------------\n\n* **Stream(< _mixed_ >seed[, < _integer_ >bits][, < _mixed_ >encbuf])** - _DuplexStream_ - A stream constructor that takes in the `seed` to use. Write data to the stream and when the stream ends, a `bits`-bit (32 or 64) hash value (format determined by `encbuf`) is available on the readable side. The values for `seed` and `encbuf` are described above in `hash()`.\n\n* **XXHash64(< _mixed_ >seed)** - This is the 64-bit Hash constructor. It is only needed if you want to use the old streaming interface (`update()`/`digest()`) instead of the streams2 interface described above.\n\n\nXXHash Methods\n--------------\n\n* **(constructor)**(< _mixed_ >seed) - Creates and returns a new 32-bit Hash instance with the given `seed`. The values for `seed` are described above in `hash()`.\n\n* **update**(< _Buffer_ >data) - _(void)_ - Update the hash using `data`.\n\n* **digest**([< _mixed_ >encbuf])  - _mixed_ - The values for `encbuf` and the resulting hash value format is described in `hash()`.\n","starsCount":2,"created":"2012-05-30T21:58:47.940Z","modified":"2016-07-28T06:30:55.186Z","lastPublisher":{"name":"mscdex","email":"mscdex@mscdex.net"},"owners":[{"name":"mscdex","email":"mscdex@mscdex.net"}],"other":{"_attachments":{},"_from":"https://github.com/mscdex/node-xxhash/tarball/v0.2.4","_id":"xxhash","_nodeVersion":"6.1.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/xxhash-0.2.4.tgz_1469687452653_0.207918512634933"},"_npmUser":{"name":"mscdex","email":"mscdex@mscdex.net"},"_npmVersion":"3.8.6","_rev":"1-a68f3ad1e5eb7baf6800d96857813a25","_shasum":"8b8a48162cfccc21b920fa500261187d40216c39","author":{"name":"Brian White","email":"mscdex@mscdex.net"},"bugs":{"url":"https://github.com/mscdex/node-xxhash/issues"},"directories":{},"dist-tags":{"latest":"0.2.4"},"dist":{"shasum":"8b8a48162cfccc21b920fa500261187d40216c39","tarball":"http://registry.npmjs.org/xxhash/-/xxhash-0.2.4.tgz"},"maintainers":[{"name":"mscdex","email":"mscdex@mscdex.net"}],"readmeFilename":"README.md","time":{"modified":"2016-07-28T06:30:55.186Z","created":"2012-05-30T21:58:47.940Z","0.0.1":"2012-05-30T21:58:49.314Z","0.1.0":"2013-01-14T00:26:09.505Z","0.1.1":"2013-01-22T19:37:39.378Z","0.1.2":"2013-03-14T01:44:31.630Z","0.1.3":"2013-04-05T23:42:37.614Z","0.2.0":"2013-06-27T00:38:26.158Z","0.2.1":"2015-01-25T04:58:26.726Z","0.2.2":"2015-05-05T17:39:02.244Z","0.2.3":"2015-09-13T05:06:58.695Z","0.2.4":"2016-07-28T06:30:55.186Z"},"users":{"estliberitas":true,"xieranmaya":true}}}