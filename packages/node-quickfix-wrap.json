{"name":"node-quickfix-wrap","version":"2.0.16","gypfile":true,"scripts":{"test":"mocha","install":"node-gyp rebuild"},"main":"index.js","description":"This is a wrapper for the Quickfix C++ library to be used within node.js applications","dependencies":{"nan":"2.4.0"},"devDependencies":{"dateformat":"^1.0.8","mocha":"^2.2.5","mocha-jenkins-reporter":"^0.1.9","segfault-handler":"^1.0.0","should":"^6.0.3"},"repository":"https://github.com/ctubio/node-quickfix-wrap","gitHead":"f681e1ea9600e7163f01142d155616ca226a466f","homepage":"https://github.com/ctubio/node-quickfix-wrap#readme","versions":[{"number":"2.0.11","date":"2017-05-27T22:47:42.112Z"},{"number":"2.0.12","date":"2017-06-10T17:02:36.389Z"},{"number":"2.0.13","date":"2017-06-10T17:43:17.189Z"},{"number":"2.0.14","date":"2017-06-11T16:12:56.498Z"},{"number":"2.0.15","date":"2017-06-27T18:32:40.240Z"},{"number":"2.0.16","date":"2017-06-27T18:49:23.010Z"}],"readme":"node-quickfix\n==========\n\nThis is a node.js wrapper of the popular QuickFIX library. Information about QuickFIX can be found at http://quickfixengine.org/. FIX is a standardized messaging protocol used for electronic communication of financial information. More information about FIX can be found at http://www.fixprotocol.org/\n\n###Installing######\n\n1. Download quickfix tar here: http://www.quickfixengine.org/\n2. Check required dependencies: http://www.quickfixengine.org/quickfix/doc/html/dependencies.html\n  - On Ubuntu 14.04 LTS (Trusty Tahr) [zlib1g-dev](http://packages.ubuntu.com/trusty/zlib1g-dev) is required.\n3. Install via the following instructions: http://www.quickfixengine.org/quickfix/doc/html/building.html\n4. After installing copy \"config.h\" from the install directory to your include directory (usually /usr/local/include/quickfix)\n5. Include this module in your package.json file.\n\n###Features######\n\nThis module currently supports creating an Acceptor, an Initiator, and retrieving individual Sessions.\nExamples can be found in the examples directory of this project.\n\n####Configuration######\n\nSessions can be configured through a properties file or directly with a String (which can be built from a JSON variable). For example, if your properties file has the following:\n```\n[DEFAULT]\nReconnectInterval=60\nSocketAcceptPort=3223\nPersistMessages=Y\nFileStorePath=./data\nFileLogPath=./log\nHttpAcceptPort=9011\n\n[SESSION]\nConnectionType=acceptor\nSenderCompID=ELECTRONIFIE\nTargetCompID=NODEQUICKFIX\nBeginString=FIX.4.4\nStartTime=00:00:00\nEndTime=23:59:59\nHeartBtInt=30\nUseDataDictionary=Y\nDataDictionary=./fix_spec/FIX44.xml\nRefreshOnLogon=Y\n```\nYou can pass a String in to the options of your acceptor/initiator:\n```\nvar quickfix = require('node-quickfix');\n\nvar fixAcceptor = quickfix.acceptor({\n  settings: \"[DEFAULT]\\n\n  \tReconnectInterval=60\\n\n  \tRefreshOnLogon=Y\\n\n  \tSendRedundantResendRequests=Y\\n\n  \tPersistMessages=Y\\n\n  \tFileStorePath=./data/1\\n\n  \tFileLogPath=./log/1\\n\n  \tHttpAcceptPort=9011\\n\\n\n  \t[SESSION]\\n\n  \tConnectionType=acceptor\\n\n  \tSenderCompID=ELECTRONIFIE\\n\n  \tTargetCompID=NODEQUICKFIX\\n\n  \tBeginString=FIX.4.4\\n\n  \tStartTime=00:00:00\\n\n  \tEndTime=23:59:59\\n\n  \tHeartBtInt=30\\n\n  \tSocketAcceptPort=3223\\n\n  \tUseDataDictionary=Y\\n\n  \tDataDictionary=./fix_spec/FIX44.xml\",\n  logonProvider: logonProvider,\n  storeFactory: \"file\"\n});\n```\n\nnode-quickfix also has database support for quickfix. Provided you have the correct database installed, and have compiled quickfix with database support as described in http://www.quickfixengine.org/quickfix/doc/html/building.html , then using the database is as simple as updating your properties and then creating an acceptor with the correct storeFactory (file, postgresql, mysql, odbc). node-quickfix will use file storage by default.\n\n```\n[DEFAULT]\nReconnectInterval=60\nSocketAcceptPort=3223\nPersistMessages=Y\nPostgreSQLStoreDatabase=quickfix\nPostgreSQLStoreUser=postgres\nPostgreSQLStorePassword=postgres\nPostgreSQLStoreHost=localhost\nPostgreSQLStorePort=5432\nPostgreSQLStoreUseConnectionPool=Y\nPostgreSQLLogDatabase=quickfix\nPostgreSQLLogUser=postgres\nPostgreSQLLogPassword=postgres\nPostgreSQLLogHost=localhost\nPostgreSQLLogPort=5432\nPostgreSQLLogUseConnectionPool=Y\nHttpAcceptPort=9011\n```\n\n```\nvar fixAcceptor = quickfix.acceptor({\n  propertiesFile: './acceptor.properties',\n  logonProvider: logonProvider,\n  storeFactory: 'postgresql'\n});\n```\n\n####Logon Handling#######\n\nYou can create a custom logon handler in node-quickfix by creating a logon provider and then constructing your acceptor or initiator with it. You can also pass credentials to the constructor that will be used to populate field 553 and 554 of your logon messages.\n\n```\nvar quickfix = require('node-quickfix');\n\nvar logonProvider = quickfix.logonProvider(function(logonResponse, msg, sessionId) {\n\tif(msg.tags[553] == 'USERNAME' && msg.tags[554] == 'PASSWORD') {\n\t\tlogonResponse.done(true); //successful logon\n\t} else {\n\t\tlogonResponse.done(false); //reject logon\n\t}\n});\n\nvar fixAcceptor = quickfix.acceptor({\n  \"logonProvider\": logonProvider,\n  propertiesFile: \"./acceptor.properties\"\n});\n```\n\n```\nvar fixClient = quickfix.initiator({\n  credentials: {\n    username: \"USERNAME\",\n    password: \"PASSWORD\"\n  },\n  propertiesFile: \"./initiator.properties\"\n});\n```\n\n####Message format######\n```\nmessage = {\n    header: {\n      8: 'FIX.4.4',\n      35: type,\n      49: senderId,\n      56: targetId\n    },\n    tags: {\n        tag1: value1,\n        tag2: value2\n    },\n    groups:[{\n        'index': field for NoOfEntries,\n        'delim': first tag in group,\n        'entries': [{tag1: value1, tag2: value2}, {tag1: value1, tag2: value2}]\n    }, ...]\n  }\n```\n\n####Acceptor API######\n`start(callback) //start acceptor`\n\n`send(msg, callback) //send json messages`\n\n`sendRaw(msg, callback) //send FIX message string`\n\n`stop(callback) //stop acceptor`\n\n`getSessions() //get configured sessions`\n\n`getSession(sessionId) //get session by session ID`\n\n\nAcceptors and initiators inherit from EventEmitter and so the following events can be listened for on acceptors/initiators with `fixAcceptor.on(eventName, callback);` Valid eventNames and the callback arguments are:\n```\nonCreate: sessionID\nonLogon: sessionID\nonLogout: sessionID\nonLogonAttempt:  message, sessionID\ntoAdmin: message, sessionID\nfromAdmin: message, sessionID\nfromApp:  message, sessionID\n```\n\n####Initiator API######\n`start(callback) //start acceptor`\n\n`send(msg, callback) //send json messages`\n\n`sendRaw(msg, callback) //send FIX message string`\n\n`stop(callback) //stop acceptor`\n\n`getSessions() //get configured sessions`\n\n`getSession(sessionId) //get session by session ID`\n\n`isLoggedOn() //is initiator is currently connected to a session`\n\n\n####Session API######\n`disconnect(callback) //disconnect a session`\n\n`getSessionID() //get session id for a session`\n\n`isEnabled() //is the session enabled`\n\n`isLoggedOn() //is the session currently logged on`\n\n`logon(callback) //log the session on`\n\n`logout(callback) //log the session out`\n\n`refresh(callback) //refresh session state from the message store`\n\n`reset(callback) //reset session sequence numbers`\n\ngetters/setters for session sequence numbers:\n\n```\ngetSenderSeqNum()\nsetSenderSeqNum(num)\ngetTargetSeqNum()\nsetSenderSeqNum(num)\n```\n\n","created":"2017-05-27T22:47:42.112Z","modified":"2017-06-27T18:49:23.010Z","lastPublisher":{"name":"ctubio","email":"analpaper@gmail.com"},"owners":[{"name":"ctubio","email":"analpaper@gmail.com"}],"other":{"_attachments":{},"_id":"node-quickfix-wrap","_nodeVersion":"7.8.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-quickfix-wrap-2.0.16.tgz_1498589361398_0.059172792825847864"},"_npmUser":{"name":"ctubio","email":"analpaper@gmail.com"},"_npmVersion":"5.0.3","_rev":"6-c7cdcf00bbe95db9d6f4c59000ce9757","author":{"name":"Kermen Deol","email":"kermen.deol@electronifie.com"},"bugs":{"url":"https://github.com/ctubio/node-quickfix-wrap/issues"},"directories":{},"dist-tags":{"latest":"2.0.16"},"dist":{"integrity":"sha512-sL25yRc1A2pJah6B8s1Ov5VmAmEMk4vdFpm0g3AdLpLfWneZg0F8IKt8N5vdpLZ4jOmMNx3WqLJHVFpWibU8nw==","shasum":"7f6494a968d589142b7a1226c1700d0f29f5e6b2","tarball":"https://registry.npmjs.org/node-quickfix-wrap/-/node-quickfix-wrap-2.0.16.tgz"},"maintainers":[{"name":"ctubio","email":"analpaper@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-27T18:49:23.010Z","created":"2017-05-27T22:47:42.112Z","2.0.11":"2017-05-27T22:47:42.112Z","2.0.12":"2017-06-10T17:02:36.389Z","2.0.13":"2017-06-10T17:43:17.189Z","2.0.14":"2017-06-11T16:12:56.498Z","2.0.15":"2017-06-27T18:32:40.240Z","2.0.16":"2017-06-27T18:49:23.010Z"}}}