{"name":"libmill","version":"0.4.0","description":"bindings to libmill","dependencies":{"nan":"2","node-gyp":"3"},"devDependencies":{"tape":"3.5","tap-spec":"2.2"},"repository":"https://github.com/reqshark/mill","scripts":{"test":"node test | tap-spec","install":"node-gyp rebuild"},"homepage":"http://req.link","keywords":["native","binding","addon","concurrency"],"license":"MIT","gypfile":true,"gitHead":"82669ed7e08440357586dec5431d48085d6ae7f9","versions":[{"number":"0.0.1","date":"2015-07-14T11:05:34.590Z"},{"number":"0.0.2","date":"2015-09-09T22:33:13.756Z"},{"number":"0.0.3","date":"2015-09-21T01:02:03.109Z"},{"number":"0.0.4","date":"2015-09-21T04:18:32.550Z"},{"number":"0.0.5","date":"2015-09-30T04:02:06.509Z"},{"number":"0.0.6","date":"2015-12-19T08:35:52.670Z"},{"number":"0.0.7","date":"2015-12-19T12:15:24.322Z"},{"number":"0.0.8","date":"2016-01-09T08:59:41.494Z"},{"number":"0.0.9","date":"2016-01-10T22:12:36.962Z"},{"number":"0.1.0","date":"2016-01-12T06:25:38.334Z"},{"number":"0.1.1","date":"2016-01-12T09:37:45.530Z"},{"number":"0.2.0","date":"2016-02-08T21:00:25.312Z"},{"number":"0.2.1","date":"2016-03-29T04:21:49.340Z"},{"number":"0.2.2","date":"2016-04-04T18:46:36.915Z"},{"number":"0.2.3","date":"2016-04-06T07:27:17.247Z"},{"number":"0.3.0","date":"2016-04-13T02:12:49.704Z"},{"number":"0.3.1","date":"2016-04-13T02:27:18.235Z"},{"number":"0.3.2","date":"2016-04-13T02:29:55.784Z"},{"number":"0.3.3","date":"2016-04-13T02:37:00.004Z"},{"number":"0.3.4","date":"2016-04-13T02:45:23.412Z"},{"number":"0.3.5","date":"2016-04-13T02:50:35.316Z"},{"number":"0.4.0","date":"2016-04-13T20:55:20.731Z"}],"readme":"# node.js function access to libmill\n[![Build Status](https://circleci.com/gh/reqshark/mill/tree/master.svg?style=svg)](https://circleci.com/gh/reqshark/mill/tree/master)\n\ngo style concurrency for node.\n\nan experiment\n\n```bash\n#install libmill and libsodium dependencies\n$ git clone https://github.com/sustrik/libmill.git\n$ cd libmill && ./autogen.sh && ./configure && make -j 8 && sudo make install\n$ sudo /sbin/ldconfig # linux only\n\n$ git clone https://github.com/jedisct1/libsodium.git\n$ cd libsodium && ./autogen.sh && ./configure && make -j 8 && sudo make install\n$ sudo /sbin/ldconfig # linux only\n\n$ npm i && npm t\n```\n\n# tcp library\n\nfor msgs over tcp/ip, a server can use `tcplisten()`. once a client connects, the server can use `tcpaccept()` to establish bidirectional tcp streams.\n\n### `tcplisten()` and `tcpaccept()`\n```js\nvar lib = require('libmill');\n\n/* create an ipaddr */\nvar ipaddr = lib.iplocal(5555);\n\n/* listen on the ipaddr */\nvar ls = lib.tcplisten(ipaddr);\nconsole.log('listening on port %s', lib.tcpport(ls));\n\nwhile(1){\n  /* accept and establish tcp connection */\n  var as = lib.tcpaccept(ls);\n  console.log('\\nnew connection\\nmsg recvd: ' + lib.tcprecvuntil(as));\n\n  /* close tcp connection */\n  lib.tcpclose(as);\n}\n```\n### `tcpconnect()`\n```js\nvar lib = require('libmill');\n\n/* create an ipaddr */\nvar ipaddr = lib.iplocal(5555);\n\n/* connect over the ipaddr */\nvar cs = lib.tcpconnect(ipaddr);\nvar str = 'go style concurrency for node', num = 1;\n\n/* send a few msg before tcpflush */\n/* delimiter is set to '\\r', tells tcprecvuntil when to finish */\nsend('msg # ', str);\nsend('msg # ', str);\nsend('msg #', str+'\\r');\nfunction send(n, msg){\n  n+= num+++msg+'\\n';\n  lib.tcpsend(cs, new Buffer(n));\n}\n\n/* tcpsend() stores data in user space and tcpflush() pushes it to kernel */\nlib.tcpflush(cs);\n```\n\n# udp library\n### `udplisten()` and `udprecv()`\n\n```js\nvar lib = require('libmill');\n\n/* create an ipaddr */\nvar ipaddr = lib.iplocal(4444);\n\n/* listen on ipaddr */\nvar ls = lib.udplisten(ipaddr);\nprocess.stdout.write('udp socket listening on port: ' + lib.udpport(ls) + '\\n');\n\n/* next, to get udp msgs, use udprecv\n   if you pass a cb function as the 3rd param, the call will use libuv async\n   the callback's param will contain your msg\n\n   otherwise w/out a cb, it will block and udprecv's return value is your msg */\n\n\n/* the non-blocking way (a for async) */\nlib.udprecv(ls, 255, function (msg) {\n  var buf = String(msg.buf) /* msg.buf is a node buffer of the packet body */\n  var addr = msg.addr  /* string address of packet origin */\n});\n\n/* the blocking way  */\nwhile (1) {\n  var sz = 13;\n  var deadline = 10;\n\n  var msg = lib.udprecv(ls, sz, deadline); /* deadline is optional param */\n  process.stdout.write(msg.buf + '\\n');\n}\n```\n\n### `udpsend()`\n```js\nvar s = lib.udplisten(ipaddr);\nvar buf = new Buffer('Hello, world!');\n\nlib.udpsend(s, ipaddr, buf);\n```\n# test\nsee [`test` directory](test)\n\n## license\n\nMIT\n\n<sub>*tested on circleci linux and osx.*</sub>\n","created":"2015-07-14T11:05:34.590Z","modified":"2016-04-13T20:55:20.731Z","lastPublisher":{"name":"reqshark","email":"bent@nothingsatisfies.com"},"owners":[{"name":"reqshark","email":"bent@nothingsatisfies.com"}],"other":{"_attachments":{},"_from":".","_id":"libmill","_nodeVersion":"5.5.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/libmill-0.4.0.tgz_1460580918930_0.23431810294277966"},"_npmUser":{"name":"reqshark","email":"bent@nothingsatisfies.com"},"_npmVersion":"3.3.12","_rev":"1-f6ceb526dcfc05e416a6218624c9f01d","_shasum":"57c97bf763eb9799c35407d2fd02ac9d190f7f8c","author":{"name":"Bent Cardan","email":"bent@nothingsatisfies.com","url":"http://req.link"},"bugs":{"url":"https://github.com/reqshark/mill/issues"},"contributors":[{"name":"Bent Cardan","email":"bent@nothingsatisfies.com","url":"https://github.com/reqshark"}],"directories":{},"dist-tags":{"latest":"0.4.0"},"dist":{"shasum":"57c97bf763eb9799c35407d2fd02ac9d190f7f8c","tarball":"http://registry.npmjs.org/libmill/-/libmill-0.4.0.tgz"},"maintainers":[{"name":"reqshark","email":"bent@nothingsatisfies.com"}],"readmeFilename":"readme.markdown","time":{"modified":"2016-04-13T20:55:20.731Z","created":"2015-07-14T11:05:34.590Z","0.0.1":"2015-07-14T11:05:34.590Z","0.0.2":"2015-09-09T22:33:13.756Z","0.0.3":"2015-09-21T01:02:03.109Z","0.0.4":"2015-09-21T04:18:32.550Z","0.0.5":"2015-09-30T04:02:06.509Z","0.0.6":"2015-12-19T08:35:52.670Z","0.0.7":"2015-12-19T12:15:24.322Z","0.0.8":"2016-01-09T08:59:41.494Z","0.0.9":"2016-01-10T22:12:36.962Z","0.1.0":"2016-01-12T06:25:38.334Z","0.1.1":"2016-01-12T09:37:45.530Z","0.2.0":"2016-02-08T21:00:25.312Z","0.2.1":"2016-03-29T04:21:49.340Z","0.2.2":"2016-04-04T18:46:36.915Z","0.2.3":"2016-04-06T07:27:17.247Z","0.3.0":"2016-04-13T02:12:49.704Z","0.3.1":"2016-04-13T02:27:18.235Z","0.3.2":"2016-04-13T02:29:55.784Z","0.3.3":"2016-04-13T02:37:00.004Z","0.3.4":"2016-04-13T02:45:23.412Z","0.3.5":"2016-04-13T02:50:35.316Z","0.4.0":"2016-04-13T20:55:20.731Z"}}}