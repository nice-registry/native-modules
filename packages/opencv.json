{"name":"opencv","version":"6.0.0","description":"Node Bindings to OpenCV","dependencies":{"buffers":"^0.1.1","istanbul":"0.4.5","nan":"^2.0.9","node-pre-gyp":"^0.6.30"},"devDependencies":{"tape":"^3.0.0","aws-sdk":"~2.1.20","glob":"^5.0.3","request":"^2.44.0"},"license":"MIT","scripts":{"build":"node-gyp build","test":"node test/unit.js","install":"node-pre-gyp install --fallback-to-build"},"keywords":["opencv","computer","vision","quadrocopter"],"main":"./lib/opencv","repository":"https://github.com/peterbraden/node-opencv","engines":{"node":">=0.12"},"binary":{"module_name":"opencv","module_path":"./build/{module_name}/v{version}/{configuration}/{node_abi}-{platform}-{arch}/","remote_path":"./{module_name}/v{version}/{configuration}/","package_name":"{node_abi}-{platform}-{arch}.tar.gz","host":"https://node-opencv.s3.amazonaws.com"},"gitHead":"4586b9bd40c75e795a11db6f898a60aa8654354c","homepage":"https://github.com/peterbraden/node-opencv","bundleDependencies":["node-pre-gyp"],"versions":[{"number":"0.0.1","date":"2012-01-19T08:04:18.424Z"},{"number":"0.0.2","date":"2012-01-20T02:23:29.302Z"},{"number":"0.0.3","date":"2012-04-26T20:37:35.054Z"},{"number":"0.0.4","date":"2012-05-29T22:07:35.035Z"},{"number":"0.0.5","date":"2012-07-31T00:34:07.576Z"},{"number":"0.0.6","date":"2012-08-24T20:26:37.432Z"},{"number":"0.0.7","date":"2012-10-15T20:39:01.092Z"},{"number":"0.0.8","date":"2012-10-24T06:02:00.479Z"},{"number":"0.0.9","date":"2012-11-12T21:34:34.084Z"},{"number":"0.0.10","date":"2013-02-05T22:38:07.205Z"},{"number":"0.0.11","date":"2013-03-01T02:03:54.495Z"},{"number":"0.0.12","date":"2013-03-05T19:29:29.491Z"},{"number":"0.1.0","date":"2013-05-01T18:54:36.293Z"},{"number":"0.2.0","date":"2013-06-19T18:24:25.222Z"},{"number":"0.3.0","date":"2013-06-19T18:28:17.036Z"},{"number":"0.3.1","date":"2013-07-17T22:48:52.462Z"},{"number":"0.4.0","date":"2013-12-24T00:11:25.994Z"},{"number":"0.5.0","date":"2014-03-14T21:38:18.966Z"},{"number":"0.6.0","date":"2014-09-17T20:36:22.446Z"},{"number":"0.7.0","date":"2014-09-24T18:08:44.116Z"},{"number":"1.0.0","date":"2014-10-11T16:21:37.948Z"},{"number":"2.0.0","date":"2015-02-11T19:01:08.120Z"},{"number":"3.0.0","date":"2015-02-11T20:53:09.964Z"},{"number":"3.1.0","date":"2015-08-17T16:40:18.714Z"},{"number":"3.2.0","date":"2015-08-22T16:05:40.106Z"},{"number":"4.0.0","date":"2015-11-26T17:55:47.498Z"},{"number":"5.0.0","date":"2016-02-09T08:44:10.619Z"},{"number":"6.0.0","date":"2016-09-23T10:53:57.818Z"}],"readme":"# node-opencv\n\n[![Build Status](https://secure.travis-ci.org/peterbraden/node-opencv.png)](http://travis-ci.org/peterbraden/node-opencv)\n[![Coverage](http://codecov.io/github/peterbraden/node-opencv/coverage.svg?branch=master)](https://codecov.io/gh/peterbraden/node-opencv)\n\n[OpenCV](http://opencv.org) bindings for Node.js. OpenCV is\nthe defacto computer vision library - by interfacing with it natively in node,\nwe get powerful real time vision in js.\n\nPeople are using node-opencv to fly control quadrocoptors, detect faces from\nwebcam images and annotate video streams. If you're using it for something\ncool, I'd love to hear about it!\n\n## Install\n\nYou'll need OpenCV 2.3.1 or newer installed before installing node-opencv.  Note\nthat OpenCV 3.x is not yet fully supported.\n\n## Specific for Windows\n1. Download and install OpenCV (Be sure to use a 2.4 version) @\nhttp://opencv.org/downloads.html\nFor these instructions we will assume OpenCV is put at C:\\OpenCV, but you can\nadjust accordingly.\n\n2. If you haven't already, create a system variable called OPENCV_DIR and set it\n   to C:\\OpenCV\\build\\x64\\vc12\n\n   Make sure the \"x64\" part matches the version of NodeJS you are using.\n\n   Also add the following to your system PATH\n        ;%OPENCV_DIR%\\bin\n\n3. Install Visual Studio 2013. Make sure to get the C++ components.\n   You can use a different edition, just make sure OpenCV supports it, and you\n   set the \"vcxx\" part of the variables above to match.\n\n4. Download peterbraden/node-opencv fork\ngit clone https://github.com/peterbraden/node-opencv\n\n5. run npm install\n\n```bash\n$ npm install opencv\n```\n\n## Examples\nRun the examples from the parent directory.\n\n### Face Detection\n\n```javascript\ncv.readImage(\"./examples/files/mona.png\", function(err, im){\n  im.detectObject(cv.FACE_CASCADE, {}, function(err, faces){\n    for (var i=0;i<faces.length; i++){\n      var x = faces[i]\n      im.ellipse(x.x + x.width/2, x.y + x.height/2, x.width/2, x.height/2);\n    }\n    im.save('./out.jpg');\n  });\n})\n```\n\n\n## API Documentation\n\n### Matrix\n\nThe [matrix](http://opencv.jp/opencv-2svn_org/cpp/core_basic_structures.html#mat) is the most useful\nbase datastructure in OpenCV. Things like images are just matrices of pixels.\n\n#### Creation\n\n```javascript\nnew Matrix(rows, cols)\n```\n\nOr if you're thinking of a Matrix as an image:\n\n```javascript\nnew Matrix(height, width)\n```\n\nOr you can use opencv to read in image files. Supported formats are in the OpenCV docs, but jpgs etc are supported.\n\n```javascript\ncv.readImage(filename, function(err, mat){\n  ...\n})\n\ncv.readImage(buffer, function(err, mat){\n  ...\n})\n```\n\nIf you need to pipe data into an image, you can use an ImageDataStream:\n\n```javascript\nvar s = new cv.ImageDataStream()\n\ns.on('load', function(matrix){\n  ...\n})\n\nfs.createReadStream('./examples/files/mona.png').pipe(s);\n```\n\nIf however, you have a series of images, and you wish to stream them into a\nstream of Matrices, you can use an ImageStream. Thus:\n\n```javascript\nvar s = new cv.ImageStream()\n\ns.on('data', function(matrix){\n   ...\n})\n\nardrone.createPngStream().pipe(s);\n```\n\nNote: Each 'data' event into the ImageStream should be a complete image buffer.\n\n\n\n#### Accessing Data\n\n```javascript\nvar mat = new cv.Matrix.Eye(4,4); // Create identity matrix\n\nmat.get(0,0) // 1\n\nmat.row(0)  // [1,0,0,0]\nmat.col(4)  // [0,0,0,1]\n```\n\n##### Save\n\n```javascript\nmat.save('./pic.jpg')\n```\n\nor:\n\n```javascript\nvar buff = mat.toBuffer()\n```\n\n#### Image Processing\n\n```javascript\nim.convertGrayscale()\nim.canny(5, 300)\nim.houghLinesP()\n```\n\n\n#### Simple Drawing\n\n```javascript\nim.ellipse(x, y)\nim.line([x1,y1], [x2, y2])\n```\n\n#### Object Detection\n\nThere is a shortcut method for\n[Viola-Jones Haar Cascade](http://www.cognotics.com/opencv/servo_2007_series/part_2/sidebar.html) object\ndetection. This can be used for face detection etc.\n\n```javascript\nmat.detectObject(haar_cascade_xml, opts, function(err, matches){})\n```\n\nFor convenience in face detection, cv.FACE_CASCADE is a cascade that can be used for frontal face detection.\n\nAlso:\n\n```javascript\nmat.goodFeaturesToTrack\n```\n\n#### Contours\n\n```javascript\nmat.findCountours\nmat.drawContour\nmat.drawAllContours\n```\n\n### Using Contours\n\n`findContours` returns a `Contours` collection object, not a native array. This object provides\nfunctions for accessing, computing with, and altering the contours contained in it.\nSee [relevant source code](src/Contours.cc) and [examples](examples/)\n\n```javascript\nvar contours = im.findContours();\n\n// Count of contours in the Contours object\ncontours.size();\n\n// Count of corners(verticies) of contour `index`\ncontours.cornerCount(index);\n\n// Access vertex data of contours\nfor(var c = 0; c < contours.size(); ++c) {\n  console.log(\"Contour \" + c);\n  for(var i = 0; i < contours.cornerCount(c); ++i) {\n    var point = contours.point(c, i);\n    console.log(\"(\" + point.x + \",\" + point.y + \")\");\n  }\n}\n\n// Computations of contour `index`\ncontours.area(index);\ncontours.arcLength(index, isClosed);\ncontours.boundingRect(index);\ncontours.minAreaRect(index);\ncontours.isConvex(index);\ncontours.fitEllipse(index);\n\n// Destructively alter contour `index`\ncontours.approxPolyDP(index, epsilon, isClosed);\ncontours.convexHull(index, clockwise);\n```\n\n## Test\n\nUsing [tape](https://github.com/substack/tape). Run with command:\n\n`npm test`.\n\n## Code coverage\n\nUsing [istanbul](http://gotwarlost.github.io/istanbul/) and [lcov](http://ltp.sourceforge.net/coverage/lcov.php). Run with command:\n\n`make cover`\n\nBuild version of `opencv.node` will be generated, and coverage files will be put in `coverage/` directory. These files can be remvoved automatically by running `make clean`.\n\n## MIT License\nThe library is distributed under the MIT License - if for some reason that\ndoesn't work for you please get in touch.\n","starsCount":48,"created":"2012-01-19T08:04:17.100Z","modified":"2017-07-19T05:16:51.312Z","lastPublisher":{"name":"peterbraden","email":"peterbraden@peterbraden.co.uk"},"owners":[{"name":"peterbraden","email":"peterbraden@peterbraden.co.uk"}],"other":{"_attachments":{},"_from":".","_id":"opencv","_nodeVersion":"1.2.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/opencv-6.0.0.tgz_1474628036708_0.5535066712182015"},"_npmUser":{"name":"peterbraden","email":"peterbraden@peterbraden.co.uk"},"_npmVersion":"2.5.1","_rev":"13-db19c9f4508b23b00753e1a8b0edebe7","_shasum":"9682bc5c5f35e7d77421bddcf651cf3fe3debe56","author":{"name":"Peter Braden","email":"peterbraden@peterbraden.co.uk"},"bugs":{"url":"https://github.com/peterbraden/node-opencv/issues"},"directories":{},"dist-tags":{"latest":"6.0.0"},"dist":{"shasum":"9682bc5c5f35e7d77421bddcf651cf3fe3debe56","tarball":"http://registry.npmjs.org/opencv/-/opencv-6.0.0.tgz"},"maintainers":[{"name":"peterbraden","email":"peterbraden@peterbraden.co.uk"}],"readmeFilename":"README.md","time":{"modified":"2017-07-19T05:16:51.312Z","created":"2012-01-19T08:04:17.100Z","0.0.1":"2012-01-19T08:04:18.424Z","0.0.2":"2012-01-20T02:23:29.302Z","0.0.3":"2012-04-26T20:37:35.054Z","0.0.4":"2012-05-29T22:07:35.035Z","0.0.5":"2012-07-31T00:34:07.576Z","0.0.6":"2012-08-24T20:26:37.432Z","0.0.7":"2012-10-15T20:39:01.092Z","0.0.8":"2012-10-24T06:02:00.479Z","0.0.9":"2012-11-12T21:34:34.084Z","0.0.10":"2013-02-05T22:38:07.205Z","0.0.11":"2013-03-01T02:03:54.495Z","0.0.12":"2013-03-05T19:29:29.491Z","0.1.0":"2013-05-01T18:54:36.293Z","0.2.0":"2013-06-19T18:24:25.222Z","0.3.0":"2013-06-19T18:28:17.036Z","0.3.1":"2013-07-17T22:48:52.462Z","0.4.0":"2013-12-24T00:11:25.994Z","0.5.0":"2014-03-14T21:38:18.966Z","0.6.0":"2014-09-17T20:36:22.446Z","0.7.0":"2014-09-24T18:08:44.116Z","1.0.0":"2014-10-11T16:21:37.948Z","2.0.0":"2015-02-11T19:01:08.120Z","3.0.0":"2015-02-11T20:53:09.964Z","3.1.0":"2015-08-17T16:40:18.714Z","3.2.0":"2015-08-22T16:05:40.106Z","4.0.0":"2015-11-26T17:55:47.498Z","5.0.0":"2016-02-09T08:44:10.619Z","6.0.0":"2016-09-23T10:53:57.818Z"},"users":{"285858315":true,"fgribreau":true,"luk":true,"gazzwi86":true,"yizen":true,"tamim":true,"drittich":true,"typeofgraphic":true,"demian85":true,"aahz":true,"hagb4rd":true,"subso":true,"shanewholloway":true,"jason0518":true,"sky3r":true,"jawish":true,"insdevmail":true,"isaacvitor":true,"xumakjosh":true,"vot":true,"thesagarsutar":true,"coleww":true,"xupit3r":true,"thomas.miele":true,"andrew.medvedev":true,"wynfrith":true,"japh":true,"efernandesng":true,"mikemimik":true,"beaunus":true,"mateus1165":true,"goatandsheep":true,"mugifly":true,"rajivmehtajs":true,"andr":true,"igasho":true,"leizongmin":true,"haitch":true,"chbardel":true,"cmtegner":true,"rochejul":true,"nickeltobias":true,"licg9999":true,"didijudo":true,"kele527":true,"yuch4n":true,"rethinkflash":true,"psbolden":true}}}