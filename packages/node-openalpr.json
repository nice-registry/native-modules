{"name":"node-openalpr","description":"Node.js OpenALPR Bindings","version":"1.1.1","license":"AGPL","keywords":["bindings","license","plate","recognition","lpr","openalpr"],"repository":"https://github.com/netPark/node-openalpr","dependencies":{"fs-extra":"^0.23.1","nan":"^2.0.5","node-pre-gyp":"git+https://github.com/mapbox/node-pre-gyp.git"},"main":"./src/openalpr","binary":{"module_name":"node_openalpr","module_path":"release/{platform}_{arch}/","host":""},"engines":{"node":">= 4.0.0","iojs":">= 3.0.0"},"scripts":{"install":"node-pre-gyp install --build-from-source --fallback-to-build","postinstall":"node -e \"var fs = require('fs-extra'); fs.remove ('build');\""},"gitHead":"360c8d37f0da62b63f8f51e5b21c4841b5878797","homepage":"https://github.com/netPark/node-openalpr#readme","versions":[{"number":"1.0.4","date":"2015-08-19T21:42:53.140Z"},{"number":"1.0.5","date":"2015-08-20T12:58:53.367Z"},{"number":"1.0.6","date":"2015-08-20T14:09:50.794Z"},{"number":"1.0.7","date":"2015-08-25T18:31:35.006Z"},{"number":"1.0.8","date":"2015-09-04T19:13:47.551Z"},{"number":"1.0.9","date":"2015-09-04T19:58:27.714Z"},{"number":"1.1.0","date":"2016-01-04T17:33:03.052Z"},{"number":"1.1.1","date":"2016-01-06T15:58:41.719Z"}],"readme":"node-openalpr\r\n============\r\n\r\nThis package binds [OpenALPR](https://github.com/openalpr/openalpr) with Node.js\r\n\r\nVersion: 1.1.0 - Released January 4th, 2016\r\n\r\n```\r\nChangelog:\r\n\r\n1.1.1\t- Fix for building on OSX\r\n1.1.0   - Updated OpenALPR to version 2.2, should fix Linux and OSX builds\r\n1.0.9\t- Updated OpenALPR build and US region data\r\n1.0.7\t- Added the capability to specify regions\r\n1.0.6\t- Slowed down the event loop to 30 times per second\r\n1.0.1:5\t- Documentation changes\r\n1.0.0\t- Initial release\r\n```\r\n\r\n# Installation and Example\r\n\r\nUse npm to get the node-openalpr package. We'll attempt to use node-pre-gyp to compile from source, but if\r\nthat's not possible we'll fallback to precompiled binaries.\r\n\r\n### Linux\r\n\r\n0. Install [OpenALPR](https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(Ubuntu-Linux))\r\n0. Run ```npm install node-openalpr```\r\n\r\n### Windows\r\n0. Run ```npm install node-openalpr```\r\n\r\n### OS X\r\n0. Install OpenALPR\r\n\t- [OpenALPR](https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(OS-X))\r\n\t- using Homebrew(openalpr v2.2.0)\r\n0. Run ```npm install node-openalpr```\r\n\r\n\r\n### Example\r\n\r\n```javascript\r\nvar openalpr = require (\"node-openalpr\");\r\n\r\nfunction identify (id, path) {\r\n\tconsole.log (openalpr.IdentifyLicense (path, function (error, output) {\r\n\t\tvar results = output.results;\r\n        console.log (id +\" \"+ output.processing_time_ms +\" \"+ ((results.length > 0) ? results[0].plate : \"No results\"));\r\n\t\r\n\t\tif (id == 349) {\r\n\t\t\tconsole.log (openalpr.Stop ());\r\n\t\t}\r\n\t}));\r\n}\r\n\r\nopenalpr.Start ();\r\nopenalpr.GetVersion ();\r\n\r\nfor (var i = 0; i < 350; i++) {\r\n\tidentify (i, \"lp.jpg\");\r\n}\r\n```\r\n\r\n### Methods\r\n\r\nThis is a breakdown of all of the methods available for node-openalpr. Start needs to be called before any other method.\r\n\r\n* `openalpr.Start ([config[, runtime[, count[, start_queue]]]])` - Initializes OpenALPR with default settings\r\n  * config - Path to configuration file. On Windows defaults to the config file in node-openalpr directory, on Linux defaults to openalpr installation\r\n  * runtime - Path to runtime data. On Windows defaults to \"openalpr_runtime\" folder in node-openalpr directory, on Linux defaults to openalpr installation\r\n  * count - Number of concurrent OpenALPR processes to run - defaults to CPU core count\r\n  * start_queue - Auto start queue monitoring thread - defaults to true\r\n* `openalpr.Stop ()` - Stops the OpenALPR processes and clears out any queued images\r\n* `openalpr.StartQueue ()` - Starts the OpenALPR queue monitoring thread (normally started automatically after calling Start ())\r\n* `openalpr.StopQueue ()` - Stops the OpenALPR queue monitoring thread\r\n* `openalpr.queueLoop ()` - Method used in checking queue - can be called manually if start_queue is false for finer control\r\n* `openalpr.IdentifyLicense (path, options/callback[, callback])` - Begins the process of identifying a license from the given image, returns \"working\" or \"queued\" status result\r\n  * path - Path to image - if image does not exist an exception will be thrown\r\n  * callback/options - Additional options for the image or a callback\r\n    * options.state         (string)  - State (\"oh\") license plates are in for additional validation\r\n    * options.prewarp       (string)  - Prewarp configuration information\r\n    * options.detectRegion  (boolean) - Use detect region functionality of OpenALPR? (slower)\r\n    * options.regions       (array)   - Specify the regions of the image to work on (format: [{ x: 0, y: 0, width: 0, height: 0 }, ...]\r\n  * callback - Callback with results: function (errors, output)\r\n* `openalpr.GetVersion ()` - Get the version of OpenALPR currently being run against\r\n\r\n# How to Compile\r\n\r\n0. [Download and install io.js v3.0.0+](https://iojs.org/en/index.html)\r\n0. [Download and install git](https://git-scm.com/downloads)\r\n0. [Download and install cmake](https://cmake.org/download/)\r\n\r\n#### Windows\r\n\r\n0. [Download and install Visual Studio 2013/2015](https://www.visualstudio.com/)\r\n0. Run PowerShell ISE as an administrator and execute: Set-ExecutionPolicy RemoteSigned\r\n0. Run openalpr-install.ps1\r\n0. Take output from openalpr/windows/build/dist and put into \"lib\" and \"release/win32\" folder in node-openalpr\r\n0. Run npm install\r\n\r\n#### Linux\r\n\r\n0. Run openalpr-install.sh\r\n0. Run npm install\r\n\r\n# Features, Bugs and Collaborating\r\n\r\nAll of the code is provided as-is. We will not provide on-going support for any bugs that may be found. Please submit bug\r\nand features requests - we will review them but we do not garunteed that they will be addressed. Pull requests are welcome \r\nand we'll review them as quickly as we can.\r\n","starsCount":6,"created":"2015-08-19T21:42:53.140Z","modified":"2016-10-13T08:43:51.573Z","lastPublisher":{"name":"kjlaw89","email":"kjtehprogrammer@gmail.com"},"owners":[{"name":"kjlaw89","email":"kjtehprogrammer@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"node-openalpr","_nodeVersion":"5.3.0","_npmUser":{"name":"kjlaw89","email":"kjtehprogrammer@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-bedd64fb7975c42e289660f9c017ca3b","_shasum":"55d9a84e0cff347800c0e6beb9d8947b5995fa51","author":{"name":"netPark","email":"klawrence@netpark.us","url":"https://www.netpark.us"},"bugs":{"url":"https://github.com/netPark/node-openalpr/issues"},"contributors":[{"name":"Kevin Lawrence","email":"klawrence@netpark.us"}],"directories":{},"dist-tags":{"latest":"1.1.1"},"dist":{"shasum":"55d9a84e0cff347800c0e6beb9d8947b5995fa51","tarball":"http://registry.npmjs.org/node-openalpr/-/node-openalpr-1.1.1.tgz"},"maintainers":[{"name":"kjlaw89","email":"kjtehprogrammer@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-13T08:43:51.573Z","created":"2015-08-19T21:42:53.140Z","1.0.4":"2015-08-19T21:42:53.140Z","1.0.5":"2015-08-20T12:58:53.367Z","1.0.6":"2015-08-20T14:09:50.794Z","1.0.7":"2015-08-25T18:31:35.006Z","1.0.8":"2015-09-04T19:13:47.551Z","1.0.9":"2015-09-04T19:58:27.714Z","1.1.0":"2016-01-04T17:33:03.052Z","1.1.1":"2016-01-06T15:58:41.719Z"},"users":{"sky3r":true,"aggregate":true,"hibrahimsafak":true,"afelicioni":true,"larnera":true,"andyd":true}}}