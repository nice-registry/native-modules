{"name":"basejump","version":"0.2.0","description":"Built to convert 128 bit buffers to base 62 strings. Supports base 36 and buffers of arbitrary size.","main":"src/baseJump.js","scripts":{"test":"gulp test","install":"node-gyp configure build"},"publishConfig":{"registry":"https://registry.npmjs.org/"},"repository":"https://github.com/arobson/baseJump","keywords":["base 62","base 36","128 bit","flake"],"license":"MIT","devDependencies":{"biggulp":"0.0.2","gulp":"^3.8.11","gulp-mocha":"~0.4.1","lodash":"^2.4.1","should":"~3.2.0-beta1"},"dependencies":{"nan":"^2.1.0"},"gitHead":"8e8dabb4419bba9c0ba927499325c1b52c4edc6f","homepage":"https://github.com/arobson/baseJump#readme","versions":[{"number":"0.0.1","date":"2014-03-22T06:04:58.011Z"},{"number":"0.0.2","date":"2014-04-17T17:08:11.126Z"},{"number":"0.0.3","date":"2014-04-17T17:23:24.931Z"},{"number":"0.0.4","date":"2014-04-17T18:30:59.024Z"},{"number":"0.0.5","date":"2014-04-17T19:05:58.644Z"},{"number":"0.1.1","date":"2015-03-13T14:09:49.268Z"},{"number":"0.2.0","date":"2015-11-30T11:27:41.112Z"}],"readme":"# baseJump\n\n## Disclaimer\nThis project combines the 3 things I'm worst at:\n 1. Math\n 1. C++\n 1. Computers\n\nThat said, I have verified the output against third party tools that will freely convert between different numeric bases. I did not include these in the tests because reasons.\n\n## Huge Thanks To Matt McCutchen\nI have one dependency that is included in this code, namely the venerable and blessed Matt Mccutchen's Big Integer Library. Matt graciously hosts this source at: http://mattmccutchen.net/bigint/. If you need Maths in C++, I recommend this over using OpenSSL's BigInteger lib.\n\n## API\nIt's so easy even I can use it:\n\n```javascript\nvar jump = require( 'baseJump' );\n\n// Node buffers can be treated as / thought of as an array of 8 bit numbers.\n// Don't believe me? Call buffer.toJSON somtime. Anyway, passing one of those\n// arrays to baseJump is how we pass along data.\nvar one = jump.toBase62( [ 100, 100, 200 ] );\n\n// one == '000000000000000000t6Sy'\n// Because of my own selfish selfishness, it auto-pads to 22 characters since that's\n// the max number of characters required to represent a 128 bit unsigned integer. Maybe. Who knows.\n// Certainly not me. Math is hard.\n// The good news is you can control this:\nvar two = jump.toBase62( [ 100, 100, 200 ], 10 );\n\n// two == '000000t6Sy' Easy.\n\n// And base 36 calls work the same, btw, toBase36 defaults to 26 spaces.\nvar three = jump.toBase36( [ 100, 100, 200 ], 10 );\n\n// three == '000007THES' ta-da\n```\n\n## Frequently Imagined Questions (FIQ)\n\n### How Do I Get This Crap To Install on Windows\nYou'll need a pre-3.0 Python version installed an in your PATH.\nYou'll also need a C++ compiler. This will be annoying to set up if you don't have one. But you're on Windows and that's just how they do.\n\n * [VS 2010 C++ Express](http://go.microsoft.com/?linkid=9709949)\n * [VS 2010 SP1](http://www.microsoft.com/en-us/download/confirmation.aspx?id=23691) - why isn't this just in the download? So that everything they do will remain a consistent hot bucket of non-sense :)\n\n### Why?\nFlake ids should be 128 bits as the good Boundary intended. Or whoever came up with it. Anyway, I want flake ids and I want them today and in 128 bits and rendered as base 62 encoded, lexicograhpically sortable strings. And I want it to be as fast as possible. That is the only reason anyone should ever hurt themselves with C++.\n\n### BaseJump?\nYeah. So. Take the code and call it something else. If other people ask me, I might be able to add different base conversions. I tried to make it so it'd be easy for me. But I see a lot of folks asking for 62 and 36 and almost nothing supports either (in Node anyway) or does it sloooooowwwwwllllyyyyy.\n\n### Why Didn't You Just Use [some other thing]\nI tried. Those other things were slow and/or irritating and/or required a ton of dependencies.\n","created":"2014-03-22T06:04:56.758Z","modified":"2015-11-30T11:27:41.112Z","lastPublisher":{"name":"arobson","email":"asrobson@gmail.com"},"owners":[{"name":"a_robson","email":"alex@sharplearningcurve.com"},{"name":"arobson","email":"asrobson@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"basejump","_nodeVersion":"5.1.0","_npmUser":{"name":"arobson","email":"asrobson@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-9600dc9d26b942f9763290c61269cde6","_shasum":"9b75920564fd43c48a5016396f653a27a3c6e4e3","author":{"name":"Alex Robson"},"bugs":{"url":"https://github.com/arobson/baseJump/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"9b75920564fd43c48a5016396f653a27a3c6e4e3","tarball":"http://registry.npmjs.org/basejump/-/basejump-0.2.0.tgz"},"maintainers":[{"name":"a_robson","email":"alex@sharplearningcurve.com"},{"name":"arobson","email":"asrobson@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-11-30T11:27:41.112Z","created":"2014-03-22T06:04:56.758Z","0.0.1":"2014-03-22T06:04:58.011Z","0.0.2":"2014-04-17T17:08:11.126Z","0.0.3":"2014-04-17T17:23:24.931Z","0.0.4":"2014-04-17T18:30:59.024Z","0.0.5":"2014-04-17T19:05:58.644Z","0.1.1":"2015-03-13T14:09:49.268Z","0.2.0":"2015-11-30T11:27:41.112Z"}}}