{"name":"quantlib","description":"QuantLib Asyn Bindings for Node.js","version":"0.3.0","keywords":["quantlib"],"main":"lib/quantlib.js","repository":"https://github.com/quantlibnode/quantlibnode","engines":{"node":">= 0.12"},"dependencies":{"fs-extra":"~0.26.2","node-pre-gyp":"~0.6.15","promisify-node":"~0.3.0"},"devDependencies":{"nan":"^2.2.0","node-gyp":"~3.0.3"},"scripts":{"prepublish":"npm prune","postinstall":"node-pre-gyp install"},"binary":{"module_name":"quantlib","module_path":"./build/Release/quantlib.node","host":"https://github.com","package_name":"{platform}-{arch}.tar.gz","remote_path":"./quantlibnode/quantlibnode/releases/download/v{version}/"},"license":"MIT","gitHead":"b50348131af77a2b6c295f44ef3245daf05c4afc","homepage":"https://github.com/quantlibnode/quantlibnode#readme","bundleDependencies":["node-pre-gyp"],"versions":[{"number":"0.1.0","date":"2016-11-01T04:08:53.220Z"},{"number":"0.1.1","date":"2016-11-01T05:21:10.912Z"},{"number":"0.1.2","date":"2016-11-01T05:36:00.249Z"},{"number":"0.1.3","date":"2016-11-01T05:50:32.551Z"},{"number":"0.1.4","date":"2016-11-01T06:38:39.753Z"},{"number":"0.2.0","date":"2017-02-17T05:10:10.046Z"},{"number":"0.2.1","date":"2017-02-17T05:21:43.704Z"},{"number":"0.3.0","date":"2017-05-17T04:26:21.648Z"}],"readme":"## QuantLib Async Bindings for Node.js \r\n\r\n[![NPM](https://nodei.co/npm/quantlib.png?downloads=true&downloadRank=true)](https://nodei.co/npm/quantlib/)\r\n\r\n[![npm version](https://badge.fury.io/js/quantlib.svg)](http://badge.fury.io/js/quantlib) \r\n[![Twitter Follow](https://img.shields.io/twitter/follow/quantlibnode.svg?style=social&maxAge=3600)](https://twitter.com/quantlibnode)\r\n\r\nThis [open source project](https://github.com/quantlibnode/quantlibnode) brings [QuantLib](http://quantlib.org/) to the Node.js community, it's similar to [QuantLibXL](http://quantlib.org/quantlibxl/) project which is for Microsoft Excel.\r\n\r\nMost functions in QuantLibXL can be used in the similar way in Node on the server side.\r\n\r\nAll functions in this project are Async, they are exported to [Promise](https://www.promisejs.org/) sytle function, please see [Example](#example) below.\r\n\r\n\r\n## Getting started\r\n\r\n```sh\r\nnpm install quantlib\r\n```\r\n\r\n* Windows (32-bit & 64-bit)\r\n\r\n`npm install quantlib` will do everything, including the node package installation and pre-built native addon (no dependency) download, you can start use it right away.\r\n\r\n> v0.2.x windows prebuilt on windows 8.1 with VC14\r\n\r\n> v0.1.x windows prebuilt on windows 7 with VC12, only 32-bit available\r\n\r\n* Linux & Mac\r\n\r\nPlease refer to [how to build](#building-the-native-addon) below\r\n\r\n\r\n## QuantLib Documents\r\n\r\n* [Function Categories](http://quantlib.org/quantlibxl/categories.html)\r\n\r\n* [Function List](http://quantlib.org/quantlibxl/allfunctions.html)\r\n\r\n## Version Matrix\r\n\r\n| QuantLib | QuantLibAddin | Node.js | quantlib.node |\r\n| -------- | ------------- | ------- | ------------- |\r\n|    1.7.1 |         1.7.0 |   6.9.1 |         0.1.x |\r\n|    1.8.1 |         1.8.0 |   6.9.5 |         0.2.x |\r\n|    1.9.2 |         1.9.0 |   6.9.5 |         0.3.x |\r\n\r\n## Building the native addon\r\n\r\n#### Prerequisite\r\n\r\n* CMake 2.8 or above, Visual C++ for windows, Xcode for Mac, GCC for Linux\r\n* Node.js according to [version matrix](#version-matrix)\r\n* [nan](https://github.com/nodejs/nan) ^2.2.0\r\n* [node-gyp](https://github.com/nodejs/node-gyp) ~3.0.3\r\n* QuantLib, QuantLibAddin, ObjectHandler source code according to [version matrix](#version-matrix), they need to be put in the same directory\r\n* `boost` - which is required to build QuantLib\r\n\r\n> for Mac OS X and Linux, QuantLib projects must be built with `-std=c++11` this flag is required by node\r\n\r\n> for linux, need to add `-fPIC` flag\r\n\r\n#### Set environment variable\r\n\r\nplease refer to `cmake/*.cmake` and `CMakeList.txt` files\r\n\r\n* `NAN_DIR` - location of `nan`\r\n* `NODE_GYP_DIR` - location of `.node-gyp` generated by `node-gyp` tool, which is at `~/.node-gyp`, if it doesn't exist, follow the instruction in [node-gyp](https://github.com/nodejs/node-gyp), and build a helloword program, it will generate the `.node-gyp` directory\r\n* `QUANTLIB_ROOT` - location of QuantLib, QuantLibAddin, ObjectHandler source code\r\n* `BOOST_ROOT` - location `boost` installed\r\n\r\n#### Use cmake to build the addon\r\n\r\n1. Build QuantLib and QuantLibAddin, please check `CMakeList.txt` for library name, and make sure generated library names are the same in `CMakeList.txt`\r\n2. from `quantlibnode` root directory `cd build`\r\n3. `cmake ..` for Windows and Linux, `cmake -G Xcode ..` for Mac OS X\r\n4. `cmake --build . --config Release`\r\n5. For Linux, you may need to put `quantlib.node` under `build/Release` manually,\r\n\r\n## Example\r\n\r\n> This is from QuantLibXL - StandaloneExamples - Math - RankReduction.xlsx - FirstCorrMatrix\r\n\r\n> C2 - formulat: =qlSymmetricSchurDecomposition(,B3:K12)\r\n\r\n> M3:12 - forumula: {=qlSymmetricSchurDecompositionEigenvalues(C2)}\r\n\r\n> the input/output are the same\r\n\r\n```js\r\nvar ql = require('quantlib');\r\n\r\nvar mtx1 =\r\n[\r\n  [1.00000,\t0.97560,\t0.95240,\t0.93040,\t0.90940,\t0.88940,\t0.87040,\t0.85230,\t0.83520,\t0.81880],\r\n  [0.97560,\t1.00000,    0.97560,    0.95240,    0.93040,    0.90940,    0.88940,    0.87040,    0.85230,    0.83520],\r\n  [0.95240,\t0.97560,\t1.00000,\t0.97560,\t0.95240,\t0.93040,\t0.90940,\t0.88940,\t0.87040,\t0.85230],\r\n  [0.93040,\t0.95240,\t0.97560,\t1.00000,\t0.97560,\t0.95240,\t0.93040,\t0.90940,\t0.88940,\t0.87040],\r\n  [0.90940,\t0.93040,\t0.95240,\t0.97560,\t1.00000,\t0.97560,\t0.95240,\t0.93040,\t0.90940,\t0.88940],\r\n  [0.88940,\t0.90940,\t0.93040,\t0.95240,\t0.97560,\t1.00000,\t0.97560,\t0.95240,\t0.93040,\t0.90940],\r\n  [0.87040,\t0.88940,\t0.90940,\t0.93040,\t0.95240,\t0.97560,\t1.00000,\t0.97560,\t0.95240,\t0.93040],\r\n  [0.85230,\t0.87040,\t0.88940,\t0.90940,\t0.93040,\t0.95240,\t0.97560,\t1.00000,\t0.97560,\t0.95240],\r\n  [0.83520,\t0.85230,\t0.87040,\t0.88940,\t0.90940,\t0.93040,\t0.95240,\t0.97560,\t1.00000,\t0.97560],\r\n  [0.81880,\t0.83520,\t0.85230,\t0.87040,\t0.88940,\t0.90940,\t0.93040,\t0.95240,\t0.97560,\t1.00000]\r\n];\r\n\r\n/* \r\n * call Constructor to create object, objectID needs to be provided as input, this is diffierent with QuantLibXL\r\n * ObjectID, can be generated with Node.js, it needs to be uniquie\r\n * since this is on server side, you may put session# as part of objectID\r\n*/\r\nql.SymmetricSchurDecomposition('mtx#1',mtx1).then(function(obj){ //C2 formula: =qlSymmetricSchurDecomposition(,B3:K12)\r\n  \r\n  // call Method with objectID, this is same as QuantLibXL\r\n  ql.SymmetricSchurDecompositionEigenvalues(obj).then(function(r){ // M3:12 formula: {=qlSymmetricSchurDecompositionEigenvalues(C2)}\r\n    console.log(r);\r\n  });\r\n\r\n}).catch(function(e){\r\n  console.log(e);\r\n});\r\n\r\n```\r\n\r\n```sh\r\n>\r\n[ 9.270906840163782,\r\n  0.4207173234885105,\r\n  0.12674770658244172,\r\n  0.059239731356788505,\r\n  0.03595303870722261,\r\n  0.024956978505270924,\r\n  0.019117669503864024,\r\n  0.01580103250921176,\r\n  0.01377474504269164,\r\n  0.012784934140218302 ]\r\n```","created":"2016-11-01T04:08:53.220Z","modified":"2017-07-19T13:32:58.253Z","lastPublisher":{"name":"jerryyangjin","email":"jerry.yang.jin@gmail.com"},"owners":[{"email":"quantlab.io@gmail.com","name":"quantlab"},{"email":"jerry.yang.jin@gmail.com","name":"jerryyangjin"}],"other":{"_attachments":{},"_from":".","_id":"quantlib","_nodeVersion":"6.9.4","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/quantlib-0.3.0.tgz_1494995179242_0.06043635657988489"},"_npmUser":{"name":"jerryyangjin","email":"jerry.yang.jin@gmail.com"},"_npmVersion":"3.10.10","_rev":"12-592105c07bb788f47c01c8e4776e948d","_shasum":"8b1963e62bd43d1c02510f7f26eff2b5a5a5a2ea","author":{"name":"Jerry Jin"},"bugs":{"url":"http://github.com/quantlibnode/quantlibnode/issues"},"directories":{"build":"./build","lib":"./lib"},"dist-tags":{"latest":"0.3.0"},"dist":{"shasum":"8b1963e62bd43d1c02510f7f26eff2b5a5a5a2ea","tarball":"https://registry.npmjs.org/quantlib/-/quantlib-0.3.0.tgz"},"maintainers":[{"email":"quantlab.io@gmail.com","name":"quantlab"},{"email":"jerry.yang.jin@gmail.com","name":"jerryyangjin"}],"readmeFilename":"README.md","time":{"modified":"2017-07-19T13:32:58.253Z","created":"2016-11-01T04:08:53.220Z","0.1.0":"2016-11-01T04:08:53.220Z","0.1.1":"2016-11-01T05:21:10.912Z","0.1.2":"2016-11-01T05:36:00.249Z","0.1.3":"2016-11-01T05:50:32.551Z","0.1.4":"2016-11-01T06:38:39.753Z","0.2.0":"2017-02-17T05:10:10.046Z","0.2.1":"2017-02-17T05:21:43.704Z","0.3.0":"2017-05-17T04:26:21.648Z"}}}