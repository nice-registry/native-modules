{"name":"libquoted","version":"1.1.2","main":"index.js","license":"GPL-3.0","keywords":["quoted-printable"],"repository":"https://github.com/danielsen/node-libquoted","dependencies":{"nan":"^2.2.0"},"scripts":{"prebuild":"npm install nan","install":"node-gyp rebuild"},"gypfile":true,"gitHead":"4b4a68382d02a923e9dde2204b7dfecf32e13baf","description":"node-libquoted provdides a NodeJS module ('libquoted') for encoding and decodingquoted-printable text as described in  [RFC2045](http://tools.ietf.org/html/rfc2045#page-19)","homepage":"https://github.com/danielsen/node-libquoted#readme","versions":[{"number":"1.1.0","date":"2016-04-19T17:35:27.122Z"},{"number":"1.1.1","date":"2016-05-17T02:56:21.161Z"},{"number":"1.1.2","date":"2016-05-18T11:36:52.517Z"}],"readme":"node-libquoted provdides a NodeJS module ('libquoted') for encoding and decodingquoted-printable text as described in \n[RFC2045](http://tools.ietf.org/html/rfc2045#page-19)\n\n### Overview\n`libquoted` provides simple functions for encoding and decoding quoted-printabletext.\n\n### Prerequisites\n* [NodeJS v0.10+](http://www.nodejs.org)\n* npm - Usually packaged with NodeJS\n\n### Installation\n    npm install danielsen/node-libquoted\n\nor\n\n    # cd /path/to/myapp/node_modules\n    # mkdir quoted-printable \n    # cd quoted-printable\n    # git clone git@github.com:danielsen/node-quoted-printable.git\n    # npm install\n\n### Documentation\nLocal documentation can be generated with the `doxygen` command, however this\nonly covers the C++ backer functions.\n\n    # doxygen Doxyfile\n\n### Usage\nUse `encode` to encode unicode text to quoted-printable. Use `decode` to decode\nquoted-printable text to unicode.\n\n    var libquoted = require('libquoted');\n\n    console.log(libquoted.encode('热门搜索'));\n    =E7=83=AD=E9=97=A8=E6=90=9C=E7=B4=A2\n    console.log(libquoted.decode('=E7=83=AD=E9=97=A8=E6=90=9C=E7=B4=A2'));\n    热门搜索\n\nEncoded strings can be folded to meet the 76 character quoted-printable line \nlength requirement with `wrap()`.\n\n    var folded = libquoted.wrap(LongQuotedPrintableLine);\n\nStreams can be encoded and decoded with the `Encoder` and `Decoder` stream \nobjects. Both accept the optional stream options argument. The `Encoder`\nconsturctor accepts the optional options variable `lineLength` for working\nwith line lengths other than the default 76 characters.\n\n    var encoder = new libquoted.Encoder([options]);\n    var decoder = new libquoted.Decoder();\n\n    var sourceFile  = fs.createReadStream('sourcefile.txt');\n    var encodedFile = fs.createWriteStream('encodedfile.txt');\n    var decodedFile = fs.createWriteStream('decodedfile.txt');\n\n    sourceFile.pipe(encoder).pipe(encodedFile);\n    encodedFile.pipe(decoder).pipe(decodedFile);\n","created":"2016-04-19T17:35:27.122Z","modified":"2016-05-18T11:36:52.517Z","lastPublisher":{"name":"danielsen","email":"dnielsen@reachmail.com"},"owners":[{"name":"danielsen","email":"dnielsen@reachmail.com"}],"other":{"_attachments":{},"_from":".","_id":"libquoted","_nodeVersion":"4.2.4","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/libquoted-1.1.2.tgz_1463571409921_0.9591090404428542"},"_npmUser":{"name":"danielsen","email":"dnielsen@reachmail.com"},"_npmVersion":"2.14.12","_rev":"1-d5f20ac6be4e5c01f7ea9ac4c4d6e468","_shasum":"c56dd81a505f62babe95251378635536b6870a1e","author":{"name":"Dan Nielsen","email":"dnielsen@reachmail.com"},"bugs":{"url":"https://github.com/danielsen/node-libquoted/issues"},"directories":{},"dist-tags":{"latest":"1.1.2"},"dist":{"shasum":"c56dd81a505f62babe95251378635536b6870a1e","tarball":"http://registry.npmjs.org/libquoted/-/libquoted-1.1.2.tgz"},"maintainers":[{"name":"danielsen","email":"dnielsen@reachmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-05-18T11:36:52.517Z","created":"2016-04-19T17:35:27.122Z","1.1.0":"2016-04-19T17:35:27.122Z","1.1.1":"2016-05-17T02:56:21.161Z","1.1.2":"2016-05-18T11:36:52.517Z"}}}