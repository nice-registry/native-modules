{"name":"font-manager-nw","version":"0.2.2","description":"Provides access to the system font catalog using nw.js","main":"build/Release/fontmanager","dependencies":{"nan":"~2.1.0"},"devDependencies":{"mocha":"*"},"scripts":{"test":"cd test && nw .","install":"nw-gyp --target=0.12.3 configure && nw-gyp build"},"repository":"https://github.com/rBurgett/font-manager-nw","keywords":["font","find","search","substitute","enumerate"],"license":"MIT","gypfile":true,"homepage":"https://github.com/rBurgett/font-manager-nw","gitHead":"2182b693a91e163b6673ac30581fd02ecb5bf5bb","versions":[{"number":"0.2.0","date":"2015-10-30T16:52:51.976Z"},{"number":"0.2.1","date":"2015-10-30T16:56:35.650Z"},{"number":"0.2.2","date":"2016-02-02T13:50:39.672Z"}],"readme":"# font-manager-nw\n\nA C++ module for NW.js (formerly Node Webkit) providing access to the system font catalog. This is a fork of the great [font-manager](https://github.com/devongovett/font-manager) package by [Devon Govett](https://github.com/devongovett). But this version has been retooled to work with NW. If something is not working, please file an issue and/or issue a pull request. Thanks!\n\n## Features\n\n* List all available fonts\n* Find fonts with specified characteristics\n* Font substitution when characters are missing\n\n## Platforms\n\n* Mac OS X 10.5 and later supported via [CoreText](https://developer.apple.com/library/mac/documentation/Carbon/reference/CoreText_Framework_Ref/_index.html)\n* Windows 7 and later supported via [DirectWrite](http://msdn.microsoft.com/en-us/library/windows/desktop/dd368038(v=vs.85).aspx)\n* Linux supported via [fontconfig](http://www.freedesktop.org/software/fontconfig)\n\n## Dependencies\n* [nw.js](https://github.com/nwjs/nw.js) - NW (formerly Node Webkit): `npm install -g nw`\n* [nw-gyp](https://github.com/nwjs/nw-gyp) - native addon build tool for node-webkit\n* On Linux, you also may need to install the `libfontconfig-dev` package: `sudo apt-get install libfontconfig-dev`\n\n## Installation\nInstall via npm:\n\n```\nnpm install font-manager-nw\n```\n\n## API\n\nYou load the `font-manager` module using `require` as with all Node modules:\n\n```javascript\nvar fontManager = require('font-manager-nw');\n```\n\nAll of the methods exported by `font-manager` have both synchronous and asynchronous versions available.\nYou should generally prefer the asynchronous version as it will allow your program to continue doing other\nprocessing while a request for fonts is processing in the background, which may be expensive depending on\nthe platform APIs that are available.\n\n* [`getAvailableFonts()`](#getavailablefonts)\n* [`findFonts(fontDescriptor)`](#findfontsfontdescriptor)\n* [`findFont(fontDescriptor)`](#findfontfontdescriptor)\n* [`substituteFont(postscriptName, text)`](#substitutefontpostscriptname-text)\n\n### getAvailableFonts()\n\nReturns an array of all [font descriptors](#font-descriptor) available on the system.\n\n```javascript\n// asynchronous API\nfontManager.getAvailableFonts(function(fonts) { ... });\n\n// synchronous API\nvar fonts = fontManager.getAvailableFontsSync();\n\n// output\n[ { path: '/Library/Fonts/Arial.ttf',\n    postscriptName: 'ArialMT',\n    family: 'Arial',\n    style: 'Regular',\n    weight: 400,\n    width: 5,\n    italic: false,\n    monospace: false },\n  ... ]\n```\n\n### findFonts(fontDescriptor)\n\nReturns an array of [font descriptors](#font-descriptor) matching a query\n[font descriptor](#font-descriptor).\nThe returned array may be empty if no fonts match the font descriptor.\n\n```javascript\n// asynchronous API\nfontManager.findFonts({ family: 'Arial' }, function(fonts) { ... });\n\n// synchronous API\nvar fonts = fontManager.findFontsSync({ family: 'Arial' });\n\n// output\n[ { path: '/Library/Fonts/Arial.ttf',\n    postscriptName: 'ArialMT',\n    family: 'Arial',\n    style: 'Regular',\n    weight: 400,\n    width: 5,\n    italic: false,\n    monospace: false },\n  { path: '/Library/Fonts/Arial Bold.ttf',\n    postscriptName: 'Arial-BoldMT',\n    family: 'Arial',\n    style: 'Bold',\n    weight: 700,\n    width: 5,\n    italic: false,\n    monospace: false } ]\n```\n\n### findFont(fontDescriptor)\n\nReturns a single [font descriptors](#font-descriptor) matching a query\n[font descriptors](#font-descriptor) as well as possible. This method\nalways returns a result (never `null`), so sometimes the output will not\nexactly match the input font descriptor if not all input parameters\ncould be met.\n\n```javascript\n// asynchronous API\nfontManager.findFont({ family: 'Arial', weight: 700 }, function(font) { ... });\n\n// synchronous API\nvar font = fontManager.findFontSync({ family: 'Arial', weight: 700 });\n\n// output\n{ path: '/Library/Fonts/Arial Bold.ttf',\n  postscriptName: 'Arial-BoldMT',\n  family: 'Arial',\n  style: 'Bold',\n  weight: 700,\n  width: 5,\n  italic: false,\n  monospace: false }\n```\n\n### substituteFont(postscriptName, text)\n\nSubstitutes the font with the given `postscriptName` with another font\nthat contains the characters in `text`.  If a font matching `postscriptName`\nis not found, a font containing the given characters is still returned.  If\na font matching `postscriptName` *is* found, its characteristics (bold, italic, etc.)\nare used to find a suitable replacement.  If the font already contains the characters\nin `text`, it is not replaced and the font descriptor for the original font is returned.\n\n```javascript\n// asynchronous API\nfontManager.substituteFont('TimesNewRomanPSMT', '汉字', function(font) { ... });\n\n// synchronous API\nvar font = fontManager.substituteFontSync('TimesNewRomanPSMT', '汉字');\n\n// output\n{ path: '/Library/Fonts/Songti.ttc',\n  postscriptName: 'STSongti-SC-Regular',\n  family: 'Songti SC',\n  style: 'Regular',\n  weight: 400,\n  width: 5,\n  italic: false,\n  monospace: false }\n```\n\n### Font Descriptor\n\nFont descriptors are normal JavaScript objects that describe characteristics of\na font.  They are passed to the `findFonts` and `findFont` methods and returned by\nall of the methods.  Any combination of the fields documented below can be used to\nfind fonts, but all methods return full font descriptors.\n\nName             | Type    | Description\n---------------- | ------- | -----------\n`path`           | string  | The path to the font file in the filesystem. **(not applicable for queries, only for results)**\n`postscriptName` | string  | The PostScript name of the font (e.g `'Arial-BoldMT'`). This uniquely identities a font in most cases.\n`family`         | string  | The font family name (e.g `'Arial'`)\n`style`          | string  | The font style name (e.g. `'Bold'`)\n`weight`         | number  | The font weight (e.g. `400` for normal weight). Should be a multiple of 100, between 100 and 900. See [below](#weights) for weight documentation.\n`width`          | number  | The font width (e.g. `5` for normal width). Should be an integer between 1 and 9. See [below](#widths) for width documentation.\n`italic`         | boolean | Whether the font is italic or not.\n`monospace`      | boolean | Whether the font is monospace or not.\n\n#### Weights\n\nValue | Name\n----- | -------------------------\n100   | Thin\n200   | Ultra Light\n300   | Light\n400   | Normal\n500   | Medium\n600   | Semi Bold\n700   | Bold\n800   | Ultra Bold\n900   | Heavy\n\n#### Widths\n\nValue | Name\n----- | -----------------------------\n1     | Ultra Condensed\n2     | Extra Condensed\n3     | Condensed\n4     | Semi Condensed\n5     | Normal\n6     | Semi Expanded\n7     | Expanded\n8     | Extra Expanded\n9     | Ultra Expanded\n\n## License\n\nMIT\n","created":"2015-10-30T16:52:51.976Z","modified":"2016-02-02T13:50:39.672Z","lastPublisher":{"name":"rburgett","email":"ryan@burgettweb.net"},"owners":[{"name":"rburgett","email":"ryan@burgettweb.net"}],"other":{"_attachments":{},"_from":".","_id":"font-manager-nw","_nodeVersion":"0.12.7","_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/font-manager-nw-0.2.2.tgz_1454421037467_0.12933551450259984"},"_npmUser":{"name":"rburgett","email":"ryan@burgettweb.net"},"_npmVersion":"2.11.3","_rev":"1-39fe12ff3de67f6eb79f8b0e360798cd","_shasum":"4c9e395873a0b3b99130419840e7928ee8f7a60e","author":{"name":"Devon Govett","email":"devongovett@gmail.com"},"bugs":{"url":"https://github.com/rBurgett/font-manager-nw/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"0.2.2"},"dist":{"shasum":"4c9e395873a0b3b99130419840e7928ee8f7a60e","tarball":"http://registry.npmjs.org/font-manager-nw/-/font-manager-nw-0.2.2.tgz"},"maintainers":[{"name":"rburgett","email":"ryan@burgettweb.net"}],"readmeFilename":"README.md","time":{"modified":"2016-02-02T13:50:39.672Z","created":"2015-10-30T16:52:51.976Z","0.2.0":"2015-10-30T16:52:51.976Z","0.2.1":"2015-10-30T16:56:35.650Z","0.2.2":"2016-02-02T13:50:39.672Z"}}}