{"name":"ref-array-atom-shell","description":"Create C \"array\" instances on top of Buffers","keywords":["array","ref"],"version":"2.0.1","repository":"https://github.com/TooTallNate/ref-array","main":"./lib/array.js","scripts":{"test":"node-gyp rebuild --directory test && mocha -gc --reporter spec"},"dependencies":{"array-index":"~0.1.0","debug":"2","ref-atom-shell":"*"},"devDependencies":{"bindings":"~1.2.0","mocha":"*","nan":"https://atom.io/download/atom-shell/nan-1.6.1.tgz"},"gitHead":"2385efe5f35e35ff6fc26aae2d0908843b0f9c92","homepage":"https://github.com/TooTallNate/ref-array","versions":[{"number":"2.0.1","date":"2015-02-09T02:34:09.648Z"}],"readme":"ref-array\n=========\n### Create C typed \"array\" instances on top of Buffers\n[![Build Status](https://secure.travis-ci.org/TooTallNate/ref-array.svg)](https://travis-ci.org/TooTallNate/ref-array)\n[![Build Status](https://ci.appveyor.com/api/projects/status/auxk791h56hbughd)](https://ci.appveyor.com/project/TooTallNate/ref-array)\n\n\nThis module offers an \"array\" implementation on top of Node.js Buffers using\nthe ref \"type\" interface.\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install ref-array\n```\n\n\nExamples\n--------\n\n#### Basic usage\n\n``` js\nvar ref = require('ref')\nvar ArrayType = require('ref-array')\n\n// typedef\nvar int = ref.types.int\n\n// define the \"int[]\" type\nvar IntArray = ArrayType(int)\n\n// now we can create array instances; the constructor takes the same arguments\n// the native JS Array class\n\nvar a = new IntArray(5) // by length\na.length // 5\na[0] = 0\na[1] = 1\na[2] = -1\na[3] = 2\na[4] = -2\n\nvar b = new IntArray([1, 2, 3, 4, 5]) // with an existing Array\nb.length // 5\nb[0] // 1\nb[1] // 2\nb[2] // 3\nb[3] // 4\nb[4] // 5\n```\n\n#### Reading a `NULL`-terminated Array\n\n``` js\n// sometimes you get a variable length array that is terminated by a NULL byte.\nvar buf = new Buffer(int.size * 3)\nint.set(buf, int.size * 0, 5)\nint.set(buf, int.size * 1, 8)\nint.set(buf, int.size * 2, 0) // <- terminate with 0s\n\n// you can create an array instance with the length automatically determined\nvar array = IntArray.untilZeros(buf)\nconsole.log(array.length)\n// 2\nconsole.log(array)\n// [ 5, 8 ]\n```\n\n#### With `node-ffi`\n\n``` js\nvar ffi = require('ffi')\n\n// the \"int[]\" type may be used as a \"type\" in FFI'd functions or callbacks\nvar func = ffi.ForeignFunction(funcPointer, int, [ IntArray, int ])\n\nvar arg = new IntArray(3)\narg[0] = 1234\narg[1] = -9999\narg[2] = 1\n\nvar rtn = func(arg, arg.length)\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","created":"2015-02-09T02:34:09.648Z","modified":"2015-02-09T02:34:09.648Z","lastPublisher":{"name":"paulcbetts","email":"paul@paulbetts.org"},"owners":[{"name":"paulcbetts","email":"paul@paulbetts.org"}],"other":{"_attachments":{},"_from":".","_id":"ref-array-atom-shell","_nodeVersion":"0.10.33","_npmUser":{"name":"paulcbetts","email":"paul@paulbetts.org"},"_npmVersion":"2.1.10","_rev":"1-fd5caf1bf90cf7a1762ee02b9976dd41","_shasum":"6f8fc40f9f3b4b730b8c04ea1f78b45354c2db9e","author":{"name":"Nathan Rajlich","email":"nathan@tootallnate.net","url":"http://tootallnate.net"},"bugs":{"url":"https://github.com/TooTallNate/ref-array/issues"},"directories":{},"dist-tags":{"latest":"2.0.1"},"dist":{"shasum":"6f8fc40f9f3b4b730b8c04ea1f78b45354c2db9e","tarball":"http://registry.npmjs.org/ref-array-atom-shell/-/ref-array-atom-shell-2.0.1.tgz"},"maintainers":[{"name":"paulcbetts","email":"paul@paulbetts.org"}],"readmeFilename":"README.md","time":{"modified":"2015-02-09T02:34:09.648Z","created":"2015-02-09T02:34:09.648Z","2.0.1":"2015-02-09T02:34:09.648Z"}}}