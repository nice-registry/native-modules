{"name":"woff2","version":"0.0.1","description":"Node wrapper around Google's woff2 utility.","main":"./src/woff2.js","scripts":{"test":"tap test/*.js","install":"node-gyp rebuild"},"repository":"https://github.com/eqyiel/node-woff2","license":"MIT","files":["README.md","Gruntfile.js","binding.gyp","src/","test/","woff2/"],"dependencies":{"bindings":"^1.2.1","nan":"^2.2.1"},"devDependencies":{"eslint-config-airbnb":"^6.2.0","font-awesome":"^4.5.0","grunt":"^1.0.1","grunt-contrib-clean":"^1.0.0","grunt-eslint":"^18.0.0","grunt-jsdoc-to-markdown":"^1.2.0","mmmagic":"^0.4.1","tap":"^5.7.1","temp":"^0.8.3"},"gypfile":true,"gitHead":"209b8af37eeabfdc937fc1894f9fdda7d5db2ddb","homepage":"https://github.com/eqyiel/node-woff2#readme","versions":[{"number":"0.0.1","date":"2016-05-15T03:36:54.074Z"}],"readme":"# node-woff2\n\nThis is just a Node.js wrapper around Google's excellent\n[woff2](https://github.com/google/woff2) utility.\n\n## Usage\n\nIf you're using `npm`:\n\n```\nnpm install --save-dev woff2\n```\n\nAlternatively you can clone this repo and run `npm install`.  Be sure to get\nthe submodule dependency (use the `--recursive` flag when cloning).  Note that\nyou can't install directly from this repo because `npm` doesn't understand\nsubmodules.\n\n## Special thanks\n\n[nfroidure](https://github.com/nfroidure) wrote a wrapper that\nconverts TTF to WOFF2.  I wanted something that could encode\nand decode though, so I recycled his `bindings.gyp` file, and\nthe file `./src/woff2_encode.cc` is more or less straight from\nhis repository.  In respect for his work this wrapper is also\nunder the MIT license.\n\n## API Reference\n<a name=\"woff2\"></a>\n\n## woff2 : <code>object</code>\n**Kind**: global namespace  \n\n* [woff2](#woff2) : <code>object</code>\n    * [.decode](#woff2.decode) ⇒ <code>Buffer</code>\n    * [.encode](#woff2.encode) ⇒ <code>Buffer</code>\n\n<a name=\"woff2.decode\"></a>\n\n### woff2.decode ⇒ <code>Buffer</code>\nConvert WOFF2 data to TTF.\n\n**Kind**: static property of <code>[woff2](#woff2)</code>  \n**Returns**: <code>Buffer</code> - Decoded TTF data.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| data | <code>Buffer</code> | WOFF2 data to be decoded. |\n\n**Example**  \n```js\nvar woff2 = require('woff2');\nvar input = fs.readFileSync('something.woff2');\nvar output = 'output.ttf';\nfs.writeFileSync(output, woff2.decode(input));\n```\n<a name=\"woff2.encode\"></a>\n\n### woff2.encode ⇒ <code>Buffer</code>\nConvert TTF data to WOFF2.\n\n**Kind**: static property of <code>[woff2](#woff2)</code>  \n**Returns**: <code>Buffer</code> - Encoded WOFF2 data.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| data | <code>Buffer</code> | TTF font data to be encoded. |\n\n**Example**  \n```js\nvar woff2 = require('woff2');\nvar input = fs.readFileSync('something.ttf');\nvar output = 'output.woff2';\nfs.writeFileSync(output, woff2.encode(input));\n```\n","created":"2016-05-15T03:36:54.074Z","modified":"2016-05-15T03:36:54.074Z","lastPublisher":{"name":"eqyiel","email":"r@rkm.id.au"},"owners":[{"name":"eqyiel","email":"r@rkm.id.au"}],"other":{"_attachments":{},"_from":".","_id":"woff2","_nodeVersion":"5.10.1","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/woff2-0.0.1.tgz_1463283410231_0.6618618508800864"},"_npmUser":{"name":"eqyiel","email":"r@rkm.id.au"},"_npmVersion":"3.8.6","_rev":"1-3d6250b180cb187f5d6e4b9e8188e3cf","_shasum":"9db007917885834ccb0d058bbdf36b59b9ee25d6","author":{"name":"Ruben Maher","email":"r@rkm.id.au","url":"https://rkm.id.au/"},"bugs":{"url":"https://github.com/eqyiel/node-woff2/issues"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"9db007917885834ccb0d058bbdf36b59b9ee25d6","tarball":"http://registry.npmjs.org/woff2/-/woff2-0.0.1.tgz"},"maintainers":[{"name":"eqyiel","email":"r@rkm.id.au"}],"readmeFilename":"README.md","time":{"modified":"2016-05-15T03:36:54.074Z","created":"2016-05-15T03:36:54.074Z","0.0.1":"2016-05-15T03:36:54.074Z"}}}