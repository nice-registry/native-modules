{"name":"wrtc-full","description":"Standards-compliant WebRTC implementation for Node","keywords":["webrtc","p2p","peer"],"version":"0.0.67","homepage":"http://js-platform.github.io/node-webrtc/","license":"BSD","repository":"https://github.com/alexanderb14/node-webrtc-mediastream","main":"lib/index.js","browser":"lib/browser.js","binary":{"module_name":"wrtc","module_path":"./build/{module_name}/v{version}/{configuration}/{node_abi}-{platform}-{arch}/","remote_path":"./{module_name}/v{version}/{configuration}/","package_name":"{node_abi}-{platform}-{arch}.tar.gz","host":"https://node-webrtc-full.s3.amazonaws.com"},"engines":{"node":">=4.0.0"},"dependencies":{"download":"^5.0.0","nan":"^2.3.2","node-pre-gyp":"0.6.x","unzip":"^0.1.11"},"devDependencies":{"aws-sdk":"^2.2.10","minimist":"0.0.8","node-static-alias":"^0.1.2","simple-peer":"^5.0.0","tape":"~2.4.2","ws":"^1.1.0"},"scripts":{"download-webrtc-libraries-and-headers":"node scripts/download-webrtc-libraries-and-headers.js","install":"node-pre-gyp install --fallback-to-build","test":"node test/all.js"},"gitHead":"068ec549a1db36db47881efe96f9da0a1c97311a","versions":[{"number":"0.0.62","date":"2016-11-01T13:36:43.628Z"},{"number":"0.0.63","date":"2016-11-01T14:01:15.945Z"},{"number":"0.0.64","date":"2016-11-01T14:10:01.076Z"},{"number":"0.0.65","date":"2016-11-01T14:27:08.651Z"},{"number":"0.0.66","date":"2016-11-01T14:33:53.233Z"},{"number":"0.0.67","date":"2016-11-01T15:43:27.655Z"}],"readme":"# Preamble\n\nForked from https://github.com/modeswitch/node-webrtc\nMediaStream APIs are supported and partly implemented. Fake file audio devices are used instead of the hardware audio devices, enabling running this multiple times on one machine.\n\nThis open-source project provides a native module for NodeJS that supports a subset of standards-compliant WebRTC features. Specifically, the PeerConnection and DataChannel APIs. \n\nThis project relies on precompiled WebRTC binaries.\n\n# Getting Started\n\n## Prerequisites\n\n* python2\n* git\n* pkg-config\n* libncurses-devel\n* libssl-devel\n* libnss-devel\n* libexpat-devel\n\n### Debian/Ubuntu\n\nTo install prerequisites with the apt-get package manager,\n\n`apt-get install python2.7 git-all pkg-config libncurses5-dev libssl-dev libnss3-dev libexpat-dev  `\n\n### CentOS/Fedora/RHEL\n\nTo install prerequisites with the yum package manager,\n\n`yum install python git pkgconfig openssl-devel ncurses-devel nss-devel expat-devel`\n\n### OSX\n\n* XCode\n\nTo install prerequisites using the homebrew package manager,\n\n```\nbrew update\nbrew install git openssl pkg-config openssl homebrew/dupes/ncurses nss expat\n```\n\nSome of these libraries may be installed by default. Package names for these libraries may differ between distributions.\n\n## Install\n\nThe easiest way to install is via npm:\n\n````\nnpm install wrtc-full\n````\n\nIf you want to work from source:\n\n````\ngit clone https://github.com/alexanderb14/node-webrtc-full\ncd node-webrtc-full\nnpm install\n````\n\n## Troubleshooting\n\n### Error while loading libtinfo.so.5 on Linux\n\nAdd a symlink to libncurses:\n\n        sudo ln -s /usr/lib/libncurses.so.5 /usr/lib/libtinfo.so.5\n\n### Some linux distros default to Python3 and the build process fails\n\nThis is most common on Arch Linux. Set `python2` as the default for `npm`:\n\n        npm config set python python2\n\n### The node.js package for my distro is too old\n\nFollow the instructions here: https://github.com/joyent/node/wiki/installing-node.js-via-package-manager\n\n# Tests\n\n## Unit tests\n\nOnce everything is built, try `npm test` as a sanity check.\n\n## bridge.js\nYou can run the data channel demo by `node examples/bridge.js` and browsing to `examples/peer.html` in `chrome --enable-data-channels`.\n\nusage:\n````\nnode examples/bridge.js [-h <host>] [-p <port>] [-ws <ws port>]\n````\noptions:\n````\n-h  host IP for the webserver that will serve the static files (default 127.0.0.1)\n-p  host port for the webserver that will serve the static files (default 8080)\n-ws port of the Web Socket server (default 9001)\n````\n\nIf the bridge and peer are on different machines, you can pass the bridge address to the peer by:\n````\nhttp://<webserver>/peer.html?<sockertserver:port>\n````\nBy default the bridge will be the same IP as the webserver and will listen on port 9001.\n\n## ping-pong-test.js\n\nThe ping-pong example creates two peer connections and sends some data between them.\n\nusage:\n````\nnode examples/ping-pong-test.js\n````\n\n[wrtc-gratipay-image]: https://img.shields.io/gratipay/modeswitch.svg?style=flat\n[wrtc-gratipay-url]: https://gratipay.com/modeswitch/\n","starsCount":1,"created":"2016-11-01T13:36:43.628Z","modified":"2016-11-03T12:30:20.134Z","lastPublisher":{"name":"alexanderb14","email":"a.brauckmann@gmail.com"},"owners":[{"name":"alexanderb14","email":"a.brauckmann@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"wrtc-full","_nodeVersion":"4.4.4","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/wrtc-full-0.0.67.tgz_1478015005686_0.6070922377984971"},"_npmUser":{"name":"alexanderb14","email":"a.brauckmann@gmail.com"},"_npmVersion":"3.8.6","_rev":"7-7eb19d5b9df08e81ec0b92bf74f9d82e","_shasum":"5974f005add03d1aa992d75e6c5ab62808e11571","author":{"name":"Alan K","email":"ack@modeswitch.org","url":"http://blog.modeswitch.org"},"bugs":{"url":"https://github.com/js-platform/node-webrtc/issues"},"contributors":[{"name":"Alan K","email":"ack@modeswitch.org","url":"blog.modeswitch.org"},{"name":"Eric Rescorla","email":"ekr@rtfm.org"},{"name":"Pasquale Boemio","email":"boemianrapsodi@gmail.com"},{"name":"Damon Oehlman","email":"damon@fluxant.com"},{"name":"Benjamin Byholm","email":"bbyholm@abo.fi"},{"name":"Alex Londeree","email":"alex.londeree@gmail.com"},{"name":"Jesús Leganés Combarro \"piranna\"","email":"piranna@gmail.com"},{"name":"Dario Andrei","email":"wouldgo84@gmail.com"},{"name":"Matt Porritt","email":"mattp@catalyst-au.net"},{"name":"Mark Andrus Roberts","email":"markandrusroberts@gmail.com"},{"name":"Arno Klein","email":"klaronix@aklein.net"},{"name":"Manu Raghavan","email":"manu@voxology.co"},{"name":"Ross Kukulinski","email":"ross@getyodlr.com"}],"directories":{},"dist-tags":{"latest":"0.0.67"},"dist":{"shasum":"5974f005add03d1aa992d75e6c5ab62808e11571","tarball":"http://registry.npmjs.org/wrtc-full/-/wrtc-full-0.0.67.tgz"},"maintainers":[{"name":"alexanderb14","email":"a.brauckmann@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-03T12:30:20.134Z","created":"2016-11-01T13:36:43.628Z","0.0.62":"2016-11-01T13:36:43.628Z","0.0.63":"2016-11-01T14:01:15.945Z","0.0.64":"2016-11-01T14:10:01.076Z","0.0.65":"2016-11-01T14:27:08.651Z","0.0.66":"2016-11-01T14:33:53.233Z","0.0.67":"2016-11-01T15:43:27.655Z"},"users":{"sergeyg":true}}}