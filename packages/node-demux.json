{"name":"node-demux","version":"1.1.0","description":"Video Demuxer","main":"index.js","repository":"https://github.com/tmarrinan/node-demux","dependencies":{"nan":"^2.3.5"},"keywords":["video","demux","nan"],"license":"BSD-3-Clause","scripts":{"install":"node-gyp rebuild"},"gypfile":true,"gitHead":"91c9a9ff0758059b5c3cca97eb25d0643feeb434","homepage":"https://github.com/tmarrinan/node-demux#readme","versions":[{"number":"0.0.1","date":"2015-01-05T22:14:29.467Z"},{"number":"0.0.2","date":"2015-01-16T17:23:43.999Z"},{"number":"0.0.3","date":"2015-01-16T17:40:29.350Z"},{"number":"0.0.4","date":"2015-01-22T19:42:47.423Z"},{"number":"0.0.5","date":"2015-01-26T03:35:45.199Z"},{"number":"0.0.6","date":"2015-01-26T06:54:17.739Z"},{"number":"0.0.7","date":"2015-01-26T21:52:03.816Z"},{"number":"0.0.8","date":"2015-01-29T21:04:59.264Z"},{"number":"0.0.9","date":"2015-01-30T02:32:01.697Z"},{"number":"0.1.0","date":"2015-03-05T21:07:39.840Z"},{"number":"0.1.1","date":"2015-03-10T17:58:49.047Z"},{"number":"1.0.0","date":"2015-09-10T18:20:09.997Z"},{"number":"1.0.1","date":"2015-09-10T19:26:19.203Z"},{"number":"1.0.2","date":"2015-09-16T16:34:58.219Z"},{"number":"1.0.3","date":"2015-10-15T15:09:46.202Z"},{"number":"1.1.0","date":"2016-06-13T16:53:04.135Z"}],"readme":"node-demux\n==========\n\nNode-Demux is a node.js package that decodes video files into raw frames in real-time. This is useful for creating a video player.\n\n\n### Prerequisites ###\nFFMpeg (for developers)\n* Windows\n    * Download [FFMpeg](http://ffmpeg.zeranoe.com/builds/) (Shared and Dev - 64bit)\n    * Use 7-zip to extract downloads\n    * Create folder 'C:\\Dev' if it does not already exist\n    * Move extracted FFMpeg Shared folder to 'C:\\Dev\\ffmpeg-win64-shared'\n    * Move extracted FFMpeg Dev folder to 'C:\\Dev\\ffmpeg-win64-dev'\n    * Add 'C:\\Dev\\ffmpeg-win64-shared\\bin' to your system `Path` variable\n* Mac OS X\n    * `brew install ffmpeg --with-libvpx --with-libvorbis --with-ffplay`\n* Linux\n    * Install FFMpeg and FFMpeg-Dev from your package manager (may need at add repository prior to install)\n\n\n### Install ###\n\n* `npm install node-demux`\n    * Note: Windows users may need option to specify compiler `--msvc_version=2013`\n\n\n### Usage ###\n\ndeclare new demuxer: `var video = new demux();`\n\n| Method                            | Use |\n|-----------------------------------|-----|\n| `video.load(filename, options)`   | loads video from file (`filename` is path or url to desired file, `options` is an optional object) |\n| `video.play()`                    | starts demuxing video (callback for `'start'` when it begins and `'frame'` on each new decoded frame |\n| `video.pause(callback)`           | pauses demuxing (`callback` is called once video successfully pauses decoding |\n| `video.stop(callback)`            | stops demuxing (same as pause, but also seeks video back to start) |\n| `video.seek(timestamp, callback)` | seeks video to desired time in seconds (`callback` is called once video successfully finished seek) |\n| `video.nextFrame()`               | decodes next frame as soon as possible (`'frame'` message will be called) |\n| `video.on(message)`               | `message` is one of `'error'`, `'metadata'`, `'start'`, `'end'`, or `'frame'` |\n\n\n### Load Options ###\n| Option                            | Meaning |\n|-----------------------------------|---------|\n| `decodeFirstFrame`                | boolean flag: decodes one frame after load, seek, or stop |\n| `colorspace`                      | string: desired frame colorspace (`'yuv420p'` or `'rgb24'`) |\n\n\n### Example ###\n\n```\nvar demux = require('node-demux');\n\n\nvar start;\nvar nframes;\n\nvar video = new demux();\nvideo.on('error', function(err) {\n    console.log(err);\n});\nvideo.on('metadata', function(metadata) {\n\tnframes = 0;\n    console.log(metadata);\n});\nvideo.on('start', function() {\n    start = Date.now();\n    console.log(\"start demuxing\");\n});\nvideo.on('end', function() {\n    var time = (Date.now() - start) / 1000;\n    console.log(\"finished demuxing\");\n    console.log(\"  total time: \" + time.toFixed(3) + \"sec\");\n    console.log(\"  average frames per second: \" + (nframes/time).toFixed(3) + \"fps\");\n});\nvideo.on('frame', function(frameIdx, data) {\n    nframes++;\n    console.log(\"received frame \" + frameIdx + \" (size: \" + data.length + \")\");\n});\nvideo.load(\"big-buck-bunny_trailer.mp4\");\nvideo.play();\n```\n","created":"2015-01-05T22:14:29.467Z","modified":"2016-06-13T16:53:04.135Z","lastPublisher":{"name":"tmarrinan","email":"thomas.j.marrinan@gmail.com"},"owners":[{"name":"tmarrinan","email":"thomas.j.marrinan@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"node-demux","_nodeVersion":"5.1.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/node-demux-1.1.0.tgz_1465836780587_0.834696727572009"},"_npmUser":{"name":"tmarrinan","email":"thomas.j.marrinan@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-5609a87c5b86839aef024c1b9851ac39","_shasum":"6d3752ca2cae0c14f980082dedeea675d05f430c","author":{"name":"Thomas Marrinan"},"bugs":{"url":"https://github.com/tmarrinan/node-demux/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"6d3752ca2cae0c14f980082dedeea675d05f430c","tarball":"http://registry.npmjs.org/node-demux/-/node-demux-1.1.0.tgz"},"maintainers":[{"name":"tmarrinan","email":"thomas.j.marrinan@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-06-13T16:53:04.135Z","created":"2015-01-05T22:14:29.467Z","0.0.1":"2015-01-05T22:14:29.467Z","0.0.2":"2015-01-16T17:23:43.999Z","0.0.3":"2015-01-16T17:40:29.350Z","0.0.4":"2015-01-22T19:42:47.423Z","0.0.5":"2015-01-26T03:35:45.199Z","0.0.6":"2015-01-26T06:54:17.739Z","0.0.7":"2015-01-26T21:52:03.816Z","0.0.8":"2015-01-29T21:04:59.264Z","0.0.9":"2015-01-30T02:32:01.697Z","0.1.0":"2015-03-05T21:07:39.840Z","0.1.1":"2015-03-10T17:58:49.047Z","1.0.0":"2015-09-10T18:20:09.997Z","1.0.1":"2015-09-10T19:26:19.203Z","1.0.2":"2015-09-16T16:34:58.219Z","1.0.3":"2015-10-15T15:09:46.202Z","1.1.0":"2016-06-13T16:53:04.135Z"}}}