{"main":"./lib/oniguruma.js","name":"alexandrudima-oniguruma","description":"oniguruma regular expression library","version":"6.0.3","licenses":[{"type":"MIT","url":"http://github.com/atom/node-oniguruma/raw/master/LICENSE.md"}],"repository":"https://github.com/atom/node-oniguruma","homepage":"http://atom.github.io/node-oniguruma","keywords":["regex","regexp","re","regular expression","async"],"devDependencies":{"async":"~0.9.0","coffee-script":"~1.9.1","coffeelint":"~1.9.2","grunt":"~0.4.5","grunt-cli":"~0.1.13","grunt-coffeelint":"0.0.13","grunt-contrib-coffee":"~0.13.0","grunt-shell":"~1.1.2","jasmine-focused":"~1.0.7","node-cpplint":"~0.4.0"},"dependencies":{"nan":"^2.0.9"},"scripts":{"prepublish":"grunt publish","test":"grunt test","benchmark":"benchmark/benchmark.coffee","install":"node-gyp rebuild"},"gypfile":true,"gitHead":"d5b2d4171e1f61d7f9ae00cf50c91e3966301239","versions":[{"number":"6.0.0","date":"2015-12-06T21:03:56.377Z"},{"number":"6.0.1","date":"2015-12-07T09:48:18.299Z"},{"number":"6.0.2","date":"2016-01-28T23:59:58.817Z"},{"number":"6.0.3","date":"2016-01-29T01:19:48.824Z"}],"readme":"# Oniguruma Node module [![Build Status](https://travis-ci.org/atom/node-oniguruma.svg?branch=master)](https://travis-ci.org/atom/node-oniguruma)\n\nNative Node bindings to the Oniguruma regular expressions library.\n\nRead all about Oniguruma regular expressions [here](http://oniguruma.rubyforge.org/oniguruma/files/Syntax_txt.html).\n\nVersion 2.0 of this library added an asynchronous API, the old synchronous\nmethods have been renamed to have a `Sync` suffix.\n\n## Installing\n\n```sh\nnpm install oniguruma\n```\n\n## Building\n  * Clone the repository\n  * Run `npm install`\n  * Run `grunt` to compile the CoffeeScript and native code\n  * Run `npm test` to run the specs\n\n## Using\n\n```coffeescript\n{OnigRegExp, OnigScanner} = require 'oniguruma'\n```\n\n### OnigScanner(patterns)\n\nCreate a new scanner with the given patterns.\n\n`patterns` - An array of string patterns.\n\n### OnigScanner::findNextMatch(string, startPosition, callback)\n\nFind the next match from a given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start at, defaults to `0`.\n\n`callback` - The `(error, match)` function to call when done, `match` will\nnull when there is no match.\n\n#### Example\n\n```coffeescript\nscanner = new OnigScanner(['c', 'a(b)?'])\nscanner.findNextMatch 'abc', (error, match) ->\n  console.log match\n  {\n    index: 1,  # Index of the best pattern match\n    captureIndices: [\n      {index: 0, start: 0, end: 2, length: 2},  # Entire match\n      {index: 1, start: 1, end: 2, length: 1}   # Match of first capture group\n    ]\n  }\n```\n\n### OnigScanner::findNextMatchSync(string, startPosition)\n\nSynchronously find the next match from a given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start at, defaults to `0`.\n\nReturns an object containing details about the match or `null` if no match.\n\n#### Example\n\n```coffeescript\nscanner = new OnigScanner(['c', 'a(b)?'])\nmatch = scanner.findNextMatchSync('abc')\nconsole.log match\n{\n  index: 1,  # Index of the best pattern match\n  captureIndices: [\n    {index: 0, start: 0, end: 2, length: 2},  # Entire match\n    {index: 1, start: 1, end: 2, length: 1}   # Match of first capture group\n  ]\n}\n```\n\n### OnigRegExp(pattern)\n\nCreate a new regex with the given pattern.\n\n`pattern` - A string pattern.\n\n### OnigRegExp::search(string, startPosition, callback)\n\nSearch the string for a match starting at the given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start the search at, defaults to `0`.\n\n`callback` - The `(error, match)` function to call when done, `match` will be\nnull if no matches were found. `match` will be an array of objects for each\nmatched group on a successful search.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nregex.search '!abcdef', (error, match) ->\n  console.log match\n  [\n    {index: 0, start: 1, end: 4, match: 'abc', length: 3}, # Entire match\n    {index: 1, start: 2, end: 3, match: 'b', length: 1}    # Match of first capture group\n  ]\n```\n\n### OnigRegExp::searchSync(string, startPosition)\n\nSynchronously search the string for a match starting at the given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start the search at, defaults to `0`.\n\nReturns an array of objects for each matched group or `null` if no match was\nfound.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nmatch = regex.searchSync('!abcdef')\nconsole.log match\n[\n  {index: 0, start: 1, end: 4, match: 'abc', length: 3}, # Entire match\n  {index: 1, start: 2, end: 3, match: 'b', length: 1}    # Match of first capture group\n]\n```\n\n### OnigRegExp::test(string, callback)\n\nTest if this regular expression matches the given string.\n\n`string` - The string to test against.\n\n`callback` - The `(error, matches)` function to call when done, `matches` will\nbe `true` if at least one match is found, `false` otherwise.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nregex.test 'abcdef', (error, matches) ->\n  console.log matches # true\n```\n\n### OnigRegExp::testSync(string)\n\nSynchronously test if this regular expression matches the given string.\n\n`string` - The string to test against.\n\nReturns `true` if at least one match, `false` otherwise.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nmatches = regex.testSync('abcdef')\nconsole.log matches # true\n```\n","created":"2015-12-06T21:03:56.377Z","modified":"2016-01-29T01:19:48.824Z","lastPublisher":{"name":"alexandrudima","email":"alexdima@microsoft.com"},"owners":[{"name":"alexandrudima","email":"alexdima@microsoft.com"}],"other":{"_attachments":{},"_from":".","_id":"alexandrudima-oniguruma","_nodeVersion":"4.1.1","_npmUser":{"name":"alexandrudima","email":"alexdima@microsoft.com"},"_npmVersion":"2.14.4","_rev":"1-fb9e70fdd12b3d2f856c6e40c5de2419","_shasum":"08bb98e5333d4f8bf97f2f1796017650fc82c2da","bugs":{"url":"https://github.com/atom/node-oniguruma/issues"},"directories":{},"dist-tags":{"latest":"6.0.3"},"dist":{"shasum":"08bb98e5333d4f8bf97f2f1796017650fc82c2da","tarball":"http://registry.npmjs.org/alexandrudima-oniguruma/-/alexandrudima-oniguruma-6.0.3.tgz"},"maintainers":[{"name":"alexandrudima","email":"alexdima@microsoft.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-29T01:19:48.824Z","created":"2015-12-06T21:03:56.377Z","6.0.0":"2015-12-06T21:03:56.377Z","6.0.1":"2015-12-07T09:48:18.299Z","6.0.2":"2016-01-28T23:59:58.817Z","6.0.3":"2016-01-29T01:19:48.824Z"}}}