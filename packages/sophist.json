{"name":"sophist","version":"1.1.0","description":"A (maintained) Sophia binding.","keywords":["sophia","sophiadb"],"repository":"https://github.com/stephenmathieson/node-sophist","dependencies":{"bindings":"^1.2.1","nan":"^1.4.1","yieldly":"0.0.1"},"devDependencies":{"co-mocha":"^1.0.0","gnode":"^0.1.0","matcha":"^0.5.0","mocha":"^2.0.1","rimraf":"^2.2.8"},"main":"index","license":"MIT","scripts":{"install":"node-gyp rebuild"},"gypfile":true,"gitHead":"9838d6e0ee57a3a548d28523f37b0ba2d7ca83d7","homepage":"https://github.com/stephenmathieson/node-sophist","versions":[{"number":"0.0.0","date":"2014-01-23T17:48:32.185Z"},{"number":"0.1.0","date":"2014-01-27T17:59:31.545Z"},{"number":"0.2.0","date":"2014-02-09T03:38:30.369Z"},{"number":"0.2.1","date":"2014-02-09T04:43:07.830Z"},{"number":"0.2.2","date":"2014-04-20T15:34:12.986Z"},{"number":"1.0.0","date":"2014-09-18T17:54:14.988Z"},{"number":"1.1.0","date":"2014-12-12T17:18:48.857Z"}],"readme":"\n# sophist\n\n  A (maintained) Sophia binding.\n\n[![Build Status](https://travis-ci.org/stephenmathieson/node-sophist.png?branch=master)](https://travis-ci.org/stephenmathieson/node-sophist)\n\n## API\n\n### var db = new Sophist(path);\n\n  Create a db instance at `path`.\n\n#### db.open([options], [fn]) / db.openSync([options])\n\n  Open the database, optionally with the given `options`.\n\n  Options:\n\n  * `createIfMissing`: boolean, default `true`\n  * `readOnly`: boolean, default `false`\n  * `pageSize`: number, default `2048`\n  * `mergeWatermark`: number, default `100000`\n\n```js\nyield db.open({ createIfMissing: false });\ndb.open(function (err) { /* ... */ });\ndb.openSync();\n```\n\n#### db.close([fn]) / db.closeSync()\n\n  Close the database.\n\n```js\nyield db.close();\ndb.close(function (err) { /* ... */ });\ndb.closeSync();\n```\n\n#### db.set(key, value, [fn]) / db.setSync(key, value)\n\n  Set `key` to `value` in the database.\n\n```js\nyield db.set('foo', 'bar');\ndb.set('foo', 'bar', function (err) { /* ... */ });\ndb.setSync('foo', 'bar');\n```\n\n#### db.get(key, [fn]) / db.getSync(key)\n\n  Get the value of `key`.\n\n```js\nvar value = yield db.get('foo');\ndb.get('foo', function (err, value) { /* ... */ });\nvar value = db.getSync('foo');\n```\n\n#### db.delete(key, [fn]) / db.deleteSync(key)\n\n  Delete `key` from the database.\n\n```js\nvar value = yield db.delete('foo');\ndb.delete('foo', function (err) { /* ... */ });\nvar value = db.deleteSync('foo');\n```\n\n#### var iterator = db.iterator([options])\n\n  Create an iterator.\n\n  **NOTE**: Sophia does *not* support writes while an iterator is open.\n\n  Options:\n\n  * `reverse`: boolean, default `false`\n  * `start`: string, default `null`\n  * `end`: string, default `null`\n  * `gte`: boolean, default `false`\n  * `lte`: boolean, default `false`\n\n##### iterator.next([fn])\n\n  Get the next key/value pair from the iterator.\n\n  Upon reaching the last key, `null`s will be provided.\n\n```js\nvar arr = yield iterator.next(); // [key, value]\niterator.next(function (err, key, value) { /* ... */ });\n```\n\n##### iterator.end([fn])\n\n  End the iterator.\n\n```js\nyield iterator.end();\niterator.end(function (err) { /* ... */ });\n```\n\n#### var transaction = db.transaction()\n\n  Create a Sophia transaction.\n\n  During a transaction, all writes (`set` and `delete`) are posponed until `transaction#commit()` is called.  Transaction writes may be reverted by calling `transaction#rollback()`.\n\n  Unlike Sophia's raw C API, values set by `transaction#set()` and `transaction#get()` are **not** able to be retreived by `sophist#get()`.\n\n  Sophia does not support nested or multiple transactions, so doing so will cause an error to be thrown.\n\n```js\nvar transaction = db.transaction();\nvar transaction2 = db.transaction(); // throws\n```\n\n##### transaction.set(key, value)\n\n  Push a `set` operation into the transaction.\n\n```js\nyield db.set('foo', 'bar');\nvar transaction = db.transaction();\ntransaction.set('foo', 'baz');\nvar val = yield db.get('foo'); // bar\nyield transaction.commit();\nvar val = yield db.get('foo'); // baz\n```\n\n##### transaction.delete(key)\n\n  Push a `delete` operation into the transaction.\n\n```js\nyield db.set('foo', 'bar');\nvar transaction = db.transaction();\ntransaction.delete('foo');\nvar val = yield db.get('foo'); // bar\nyield transaction.commit();\nvar val = yield db.get('foo'); // null\n```\n\n##### transaction.commit([fn])\n\n  Commit the operations stored by the transaction.\n\n```js\nvar transaction = db.transaction();\n// ...\nyield transaction.commit();\ntransaction.commit(function (err) { /* ... */ });\n```\n\n##### transaction.rollback([fn])\n\n  Rollback/revert the operations stored by the transaction.\n\n```js\nvar transaction = db.transaction();\n// ...\nyield transaction.rollback();\ntransaction.rollback(function (err) { /* ... */ });\n```\n\n## License\n\n  MIT\n","created":"2014-01-23T17:48:32.185Z","modified":"2014-12-12T17:18:48.857Z","lastPublisher":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"owners":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"other":{"_attachments":{},"_from":".","_id":"sophist","_npmUser":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"_npmVersion":"2.0.0","_rev":"1-909297d61d0aaf0b5a7366949ac9d394","_shasum":"2fc6b65126514eaf4bfb2bbc733a629c398a4108","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"bugs":{"url":"https://github.com/stephenmathieson/node-sophist/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"2fc6b65126514eaf4bfb2bbc733a629c398a4108","tarball":"http://registry.npmjs.org/sophist/-/sophist-1.1.0.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"readmeFilename":"Readme.md","time":{"modified":"2014-12-12T17:18:48.857Z","created":"2014-01-23T17:48:32.185Z","0.0.0":"2014-01-23T17:48:32.185Z","0.1.0":"2014-01-27T17:59:31.545Z","0.2.0":"2014-02-09T03:38:30.369Z","0.2.1":"2014-02-09T04:43:07.830Z","0.2.2":"2014-04-20T15:34:12.986Z","1.0.0":"2014-09-18T17:54:14.988Z","1.1.0":"2014-12-12T17:18:48.857Z"}}}