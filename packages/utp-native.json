{"name":"utp-native","version":"1.5.4","description":"Native bindings for libutp","main":"index.js","gypfile":true,"scripts":{"test-timeouts":"tape test/timeouts.js","test":"standard && tape test/socket-api.js test/net-api.js","prebuild":"prebuildify --all --strip","prebuild-ia32":"prebuildify --all --strip --arch=ia32","install":"node-gyp-build"},"bin":{"ucat":"./ucat.js"},"dependencies":{"nan":"^2.5.1","node-gyp-build":"^3.0.0","readable-stream":"^2.2.2"},"devDependencies":{"prebuildify":"^2.2.0","standard":"^8.6.0","tape":"^4.6.3"},"repository":"https://github.com/mafintosh/utp-native","license":"MIT","homepage":"https://github.com/mafintosh/utp-native","gitHead":"7d43096c1866081486a071c4f5c52a50e5cee385","versions":[{"number":"0.0.0","date":"2015-04-15T19:09:11.575Z"},{"number":"0.0.1","date":"2016-01-22T03:57:25.248Z"},{"number":"1.0.0","date":"2016-02-07T21:23:28.406Z"},{"number":"1.1.0","date":"2016-02-07T21:39:17.646Z"},{"number":"1.2.0","date":"2016-02-14T16:00:24.980Z"},{"number":"1.2.1","date":"2016-02-14T22:07:22.808Z"},{"number":"1.2.2","date":"2016-02-21T20:24:20.501Z"},{"number":"1.2.3","date":"2016-02-26T19:23:26.013Z"},{"number":"1.2.4","date":"2016-05-05T12:57:00.724Z"},{"number":"1.3.0","date":"2016-06-19T10:00:34.052Z"},{"number":"1.3.1","date":"2016-08-21T22:15:08.127Z"},{"number":"1.3.2","date":"2016-12-09T12:02:57.234Z"},{"number":"1.4.0","date":"2017-02-05T20:17:32.656Z"},{"number":"1.5.0","date":"2017-02-17T10:27:43.715Z"},{"number":"1.5.1","date":"2017-05-31T22:15:58.719Z"},{"number":"1.5.2","date":"2017-07-07T14:15:43.636Z"},{"number":"1.5.3","date":"2017-07-23T15:34:56.280Z"},{"number":"1.5.4","date":"2017-07-23T16:10:15.384Z"}],"readme":"# utp-native\n\nNative bindings for [libutp](https://github.com/bittorrent/libutp). For more information about utp read [BEP 29](http://www.bittorrent.org/beps/bep_0029.html).\n\n```\nnpm install utp-native\n```\n\n[![build status](https://travis-ci.org/mafintosh/utp-native.svg?branch=master)](https://travis-ci.org/mafintosh/utp-native)\n[![build status](https://ci.appveyor.com/api/projects/status/mflwybd36fnkq8vu/branch/master?svg=true)](https://ci.appveyor.com/project/juliangruber/utp-native/branch/master)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n## Usage\n\n``` js\nvar utp = require('utp-native')\n\nvar server = utp.createServer(function (socket) {\n  socket.pipe(socket) // echo server\n})\n\nserver.listen(10000, function () {\n  var socket = utp.connect(10000)\n\n  socket.write('hello world')\n  socket.on('data', function (data) {\n    console.log('echo: ' + data)\n  })\n})\n```\n\n## API\n\nThere two APIs available. One that mimicks the net core module in Node as much as possible and another one that allows you to reuse the same udp socket for both the client and server. The last one is useful if you plan on using this in combination with NAT hole punching.\n\n## [net](http://nodejs.org/api/net.html)-like API\n\n#### `server = utp.createServer([onconnection])`\n\nCreate a new utp server instance.\n\n#### `server.listen([port], [address], [onlistening])`\n\nListen for on port. If you don't provide a port or pass in `0` a free port will be used. Optionally you can provide an interface address as well, defaults to `0.0.0.0`.\n\n#### `var addr = server.address()`\n\nReturns an address object, `{port, address}` that tell you which port / address this server is bound to.\n\n#### `server.on('listening')`\n\nEmitted when the server is listening\n\n#### `server.on('connection', connection)`\n\nEmitted when a client has connected to this server\n\n#### `server.on('error', err)`\n\nEmitted when a critical error happened\n\n#### `server.close()`\n\nCloses the server.\n\n#### `server.on('close')`\n\nEmitted when the server is fully closed. Note that this will only happen after all connections to the server are closed.\n\n#### `server.maxConnections`\n\nSet this property is you want to limit the max amount of connections you want to receive\n\n#### `server.connections`\n\nAn array of all the connections the server has.\n\n#### `server.ref()`\n\nOpposite of unref.\n\n#### `server.unref()`\n\nUnreferences the server from the node event loop.\n\n#### `connection = utp.connect(port, [host])`\n\nCreate a new client connection. host defaults to localhost.\nThe client connection is a duplex stream that you can write / read from.\n\n#### `address = connection.address()`\n\nSimilar to `server.address`.\n\n#### `connection.ref()`\n\nSimilar to `server.ref()`\n\n#### `connection.unref()`\n\nSimilar to `server.unref()`\n\n#### `connection.on('close')`\n\nEmitted when the connection is fully closed.\n\n#### `connection.on('error', err)`\n\nEmitted if an unexpected error happens.\n\n#### `connection.destroy()`\n\nForcefully destroys the connection.\n\nIn addition to this the connection has all the classic stream methods such as `.write` etc.\n\n## Socket API\n\nThe socket api allows you to reuse the same underlying UDP socket to both connect to other clients on accept incoming connections. It also mimicks the node core [dgram socket](https://nodejs.org/api/dgram.html#dgram_class_dgram_socket) api.\n\n#### `socket = utp()`\n\nCreate a new utp socket\n\n#### `socket.bind([port], [host], [onlistening])`\n\nBind the socket.\n\n#### `socket.on('listening')`\n\nEmitted when the socket is bound.\n\n#### `socket.send(buf, offset, len, port, host, [callback])`\n\nSend a udp message.\n\n#### `socket.on('message', buffer, rinfo)`\n\nListen for a udp message.\n\n#### `socket.close()`\n\nClose the socket.\n\n#### `address = socket.address()`\n\nReturns an address object, `{port, address}` that tell you which port / address this socket is bound to.\n\n#### `socket.on('close')`\n\nEmitted when the socket is fully closed.\n\n#### `socket.on('error')`\n\nEmitted if the socket experiences an error.\n\n#### `socket.listen([port], [host], [onlistening])`\n\nStart listening for incoming connections. Performs a bind as well.\n\n#### `socket.on('connection', connection)`\n\nEmitted after you start listening and a client connects to this socket.\nConnection is similar to the connection used in the net api.\n\n#### `connection = socket.connect(port, host)`\n\nConnect to another socket. Connection is similar to the connection used in the net api.\n\n#### `socket.unref()`\n\nDereference the socket from the node event loop.\n\n#### `socket.ref()`\n\nOpposite of `socket.unref()`\n\n## License\n\nMIT\n","starsCount":1,"created":"2015-04-15T19:09:11.575Z","modified":"2017-07-23T16:10:15.384Z","lastPublisher":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"owners":[{"name":"juliangruber","email":"julian@juliangruber.com"},{"name":"mafintosh","email":"mathiasbuus@gmail.com"}],"other":{"_attachments":{},"_id":"utp-native","_nodeVersion":"8.2.1","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/utp-native-1.5.4.tgz_1500826213300_0.26819250104017556"},"_npmUser":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"_npmVersion":"5.3.0","_rev":"9-f7037a73a4e9ff58556f78266e3ae1e3","author":{"name":"Mathias Buus","url":"@mafintosh"},"bugs":{"url":"https://github.com/mafintosh/utp-native/issues"},"directories":{},"dist-tags":{"latest":"1.5.4"},"dist":{"integrity":"sha512-cOzS0kJlMC9LScG9Rl0W6j4y8DimC1ZQQniNwJuUKwnCwuBG3jj3tTYjudTCmEGZoGnYrRTf8MZ0IrTL4hls2w==","shasum":"09ffaa2b0c1993a72a06734fcd3d8c826a7aa8ee","tarball":"https://registry.npmjs.org/utp-native/-/utp-native-1.5.4.tgz"},"maintainers":[{"name":"juliangruber","email":"julian@juliangruber.com"},{"name":"mafintosh","email":"mathiasbuus@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-07-23T16:10:15.384Z","created":"2015-04-15T19:09:11.575Z","0.0.0":"2015-04-15T19:09:11.575Z","0.0.1":"2016-01-22T03:57:25.248Z","1.0.0":"2016-02-07T21:23:28.406Z","1.1.0":"2016-02-07T21:39:17.646Z","1.2.0":"2016-02-14T16:00:24.980Z","1.2.1":"2016-02-14T22:07:22.808Z","1.2.2":"2016-02-21T20:24:20.501Z","1.2.3":"2016-02-26T19:23:26.013Z","1.2.4":"2016-05-05T12:57:00.724Z","1.3.0":"2016-06-19T10:00:34.052Z","1.3.1":"2016-08-21T22:15:08.127Z","1.3.2":"2016-12-09T12:02:57.234Z","1.4.0":"2017-02-05T20:17:32.656Z","1.5.0":"2017-02-17T10:27:43.715Z","1.5.1":"2017-05-31T22:15:58.719Z","1.5.2":"2017-07-07T14:15:43.636Z","1.5.3":"2017-07-23T15:34:56.280Z","1.5.4":"2017-07-23T16:10:15.384Z"},"users":{"swordfeng":true}}}