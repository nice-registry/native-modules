{"name":"posix-read","version":"0.2.0","description":"Do POSIX read on files and sockets with Node.js","main":"index.js","repository":"https://github.com/adrienverge/posix-read","license":"MIT","homepage":"https://github.com/adrienverge/posix-read","scripts":{"install":"node-gyp configure && node-gyp build","lint_js":"eslint $(git ls-files '*.js')","lint_cpp":"node-cpplint $(git ls-files '*.cpp' '*.h')","test":"mocha"},"dependencies":{"bindings":"^1.2.1","nan":"^2.0.9"},"devDependencies":{"babel-eslint":"^4.1.6","eslint":"^1.10.3","eslint-config-airbnb":"^1.0.0","mocha":"^2.3.3","node-cpplint":"^0.4.0"},"gypfile":true,"gitHead":"6e7be380e73b7d31d6a390cef5d5bcdab91924be","versions":[{"number":"0.2.0","date":"2015-12-09T10:27:59.600Z"}],"readme":"# posix-read\n\nDo POSIX read on files and sockets with Node.js.\n\n[![Build Status](https://travis-ci.org/adrienverge/posix-read.svg?branch=master)](https://travis-ci.org/adrienverge/posix-read)\n\n## Motivation\n\nIn Node.js, reading from sockets is performed using `uv_read_start()` from\n`libuv`. This consumes data from the file descriptor whenever it is available,\nbut consumes it all. There is not built-in way to read a fixed amount, let's say\n`n` bytes.\n\nThis is a problem when you want to read *only* `n` bytes and leave the rest in\nthe socket (so that, for instance, another process reads remaining data).\n\nposix-read is a module to perform a POSIX read on a socket. That way, only `n`\nbytes are brought up to user-space and the rest remains in kernel-space, ready\nto be `read(2)` by any other process.\n\n## Usage\n\n### Warning\n\nFor posix-read to work, your code must prevent `libuv` to start reading from the\nsocket. That means the socket must have the `pauseOnCreate` property.\n\nIn practice: if you get the socket from a `net.Server`, this server has to be\ncreated with the `pauseOnConnect` set to `true`.\n\n### Example\n\n```js\nconst net = require('net');\nconst posixRead = require('posix-read');\n\nconst server = net.createServer({ pauseOnConnect: true }, function (socket) {\n    // Just got an incoming connection. Let's read 10 bytes from it (but DO NOT\n    // consume more than 10 bytes from the socket).\n    posixRead.read(socket, 10, function (err, buffer) {\n        if (err && err.endOfFile)\n            return process.stderr.write('peer sent less than 10 bytes\\n');\n        if (err)\n            return process.stderr.write(`error: ${err}\\n`);\n\n        return process.stdout.write(`10 first bytes: ${buffer}\\n`);\n    });\n}).listen(1234);\n```\n\n### Error types\n\nIf a problem happens, the `Error` object passed to the callback has helpful\nproperties:\n\n* `error.badStream === true` if the socket is malformed or its file descriptor\n  is not available\n* `error.endOfFile === true` if the end-of-file was reached before having read\n  all the bytes requested\n* `error.systemError === true` in case of a system call error (in such a case,\n  `error.message` should contain more useful information.\n\n## License\n\nMIT license\n","created":"2015-12-09T10:27:59.600Z","modified":"2015-12-09T10:27:59.600Z","lastPublisher":{"name":"adrienverge","email":"adrienverge@gmail.com"},"owners":[{"name":"adrienverge","email":"adrienverge@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"posix-read","_nodeVersion":"5.1.1","_npmUser":{"name":"adrienverge","email":"adrienverge@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-9f3eaa8eccc8994cfd74a7062167262b","_shasum":"dfcfa120ca93a2123eff05ecb23930d2f9305954","author":{"name":"Adrien Verg√©"},"bugs":{"url":"https://github.com/adrienverge/posix-read/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"dfcfa120ca93a2123eff05ecb23930d2f9305954","tarball":"http://registry.npmjs.org/posix-read/-/posix-read-0.2.0.tgz"},"maintainers":[{"name":"adrienverge","email":"adrienverge@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-12-09T10:27:59.600Z","created":"2015-12-09T10:27:59.600Z","0.2.0":"2015-12-09T10:27:59.600Z"}}}