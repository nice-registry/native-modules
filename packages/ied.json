{"name":"ied","version":"2.3.6","bin":{"ied":"lib/cmd.js"},"dependencies":{"easy-table":"^1.0.0","force-symlink":"0.0.2","gunzip-maybe":"^1.3.1","init-package-json":"^1.9.4","lodash.frompairs":"^4.0.1","lodash.memoize":"^4.1.0","minimist":"^1.2.0","mkdirp":"^0.5.1","needle":"1.0.0","node-gyp":"^3.4.0","node-pre-gyp":"^0.6.29","node-uuid":"^1.4.7","npm-package-arg":"^4.2.0","ora":"^0.2.3","rimraf":"^2.5.3","rxjs":"5.0.0-rc.1","semver":"^5.2.0","source-map-support":"^0.4.1","tar-fs":"^1.13.0"},"devDependencies":{"babel-cli":"^6.10.1","babel-core":"^6.10.4","babel-eslint":"^6.1.0","babel-plugin-__coverage__":"^11.0.0","babel-plugin-transform-function-bind":"^6.8.0","babel-plugin-transform-object-rest-spread":"^6.8.0","babel-preset-es2015":"^6.9.0","babel-register":"^6.9.0","cross-env":"^2.0.0","esdoc":"^0.4.7","esdoc-es7-plugin":"0.0.3","eslint":"^2.13.1","eslint-config-airbnb-base":"^3.0.1","eslint-plugin-import":"^1.10.2","mocha":"^2.5.3","nyc":"^6.6.1","resolve":"^1.1.7","rimraf":"^2.5.3","sinon":"^1.17.4"},"scripts":{"start":"npm run test:spec -- --watch","test":"npm run test:spec && npm run test:e2e","test:e2e":"rimraf .tmp/test/*; cross-env NODE_ENV=test mocha test/e2e","test:spec":"cross-env NODE_ENV=test mocha test/spec","test:coverage":"nyc --reporter=lcov npm run test:spec -- --reporter dot && nyc report","compile":"rimraf lib/*; cross-env NODE_ENV=production babel src/ -d lib/","compile:watch":"npm run compile -- -w","dev":"rimraf lib/*; cross-env NODE_ENV=development babel src/ -d lib/ -s","dev:watch":"npm run dev -- -w","lint":"eslint src/ test/","prepublish":"npm run compile"},"repository":"https://github.com/alexanderGugel/ied","license":"MIT","homepage":"https://github.com/alexanderGugel/ied#readme","description":"An alternative package manager for Node.","files":["lib","USAGE.txt"],"nyc":{"sourceMap":false,"instrument":false},"gitHead":"1821dccf38f96f6b3d0d034777db5932cb0bde08","versions":[{"number":"0.0.0","date":"2015-11-15T19:49:35.318Z"},{"number":"0.0.1","date":"2015-11-15T22:00:46.710Z"},{"number":"0.0.2","date":"2015-11-15T23:19:59.438Z"},{"number":"0.0.3","date":"2015-11-16T00:56:03.394Z"},{"number":"0.0.4","date":"2015-11-16T01:13:35.770Z"},{"number":"0.0.5","date":"2015-11-16T01:27:48.605Z"},{"number":"0.1.0","date":"2015-11-16T23:08:44.618Z"},{"number":"0.1.1","date":"2015-11-17T23:15:31.365Z"},{"number":"0.2.0","date":"2015-11-18T01:46:50.327Z"},{"number":"0.2.1","date":"2015-11-18T18:37:56.724Z"},{"number":"0.2.2","date":"2015-11-19T23:12:32.406Z"},{"number":"0.2.3","date":"2015-11-20T03:37:31.914Z"},{"number":"0.2.4","date":"2015-11-20T20:15:25.958Z"},{"number":"0.2.5","date":"2015-11-20T20:18:26.672Z"},{"number":"0.3.0","date":"2015-11-21T03:15:24.742Z"},{"number":"0.3.1","date":"2015-11-21T03:43:25.260Z"},{"number":"0.3.2","date":"2015-11-21T16:38:02.595Z"},{"number":"0.3.3","date":"2015-11-22T19:31:25.606Z"},{"number":"0.3.4","date":"2015-11-27T13:33:25.763Z"},{"number":"0.3.5","date":"2015-12-03T01:57:54.937Z"},{"number":"0.3.6","date":"2015-12-10T09:46:04.181Z"},{"number":"0.4.0","date":"2016-01-18T21:19:14.680Z"},{"number":"0.4.1","date":"2016-01-21T21:26:22.599Z"},{"number":"0.4.2","date":"2016-01-25T13:19:01.231Z"},{"number":"0.4.3","date":"2016-01-25T20:16:47.766Z"},{"number":"0.4.4","date":"2016-01-27T18:13:27.202Z"},{"number":"0.4.5","date":"2016-01-27T23:28:22.334Z"},{"number":"0.4.6","date":"2016-01-28T02:38:12.175Z"},{"number":"0.4.7","date":"2016-01-28T14:02:43.666Z"},{"number":"0.4.8","date":"2016-01-29T12:46:43.975Z"},{"number":"0.4.9","date":"2016-01-29T13:21:28.570Z"},{"number":"0.4.10","date":"2016-01-30T09:30:31.526Z"},{"number":"0.4.11","date":"2016-01-30T09:37:27.948Z"},{"number":"1.0.0","date":"2016-02-01T18:14:42.209Z"},{"number":"1.0.1","date":"2016-02-10T00:05:35.681Z"},{"number":"1.0.2","date":"2016-02-10T01:08:41.419Z"},{"number":"1.0.3","date":"2016-02-17T01:53:51.451Z"},{"number":"1.0.4","date":"2016-02-17T19:59:04.336Z"},{"number":"1.0.5","date":"2016-02-22T01:42:47.765Z"},{"number":"1.0.6","date":"2016-03-08T01:12:18.641Z"},{"number":"1.1.0","date":"2016-03-29T22:03:33.728Z"},{"number":"1.1.1","date":"2016-04-06T02:53:01.291Z"},{"number":"2.0.0","date":"2016-05-27T00:04:52.980Z"},{"number":"2.0.1","date":"2016-05-27T00:15:50.670Z"},{"number":"2.0.2","date":"2016-05-27T01:19:10.165Z"},{"number":"2.0.3","date":"2016-05-27T02:21:31.302Z"},{"number":"2.0.4","date":"2016-05-28T23:54:59.210Z"},{"number":"2.0.5","date":"2016-06-21T02:16:43.947Z"},{"number":"2.1.0","date":"2016-07-08T03:28:21.861Z"},{"number":"2.1.1","date":"2016-07-23T00:28:25.966Z"},{"number":"2.2.0","date":"2016-07-26T00:54:07.598Z"},{"number":"2.3.0","date":"2016-07-27T01:10:02.219Z"},{"number":"2.3.1","date":"2016-07-29T01:22:48.206Z"},{"number":"2.3.2","date":"2016-08-14T21:10:34.585Z"},{"number":"2.3.3","date":"2016-09-26T01:49:39.384Z"},{"number":"2.3.4","date":"2016-11-07T20:43:59.018Z"},{"number":"2.3.5","date":"2016-11-07T21:10:17.701Z"},{"number":"2.3.6","date":"2016-11-08T18:55:40.290Z"}],"readme":"ied\n===\n\n[![Travis](https://img.shields.io/travis/alexanderGugel/ied.svg)](https://travis-ci.org/alexanderGugel/ied)\n[![npm](https://img.shields.io/npm/v/ied.svg)](https://www.npmjs.com/package/ied)\n[![Inline docs](http://inch-ci.org/github/alexanderGugel/ied.svg?branch=master&style=shields)](http://inch-ci.org/github/alexanderGugel/ied)\n\n```\n__/\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\____\n _\\/////\\\\\\///__\\/\\\\\\///////////__\\/\\\\\\////////\\\\\\__\n  _____\\/\\\\\\_____\\/\\\\\\_____________\\/\\\\\\______\\//\\\\\\_\n   _____\\/\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\_______\\/\\\\\\_\n    _____\\/\\\\\\_____\\/\\\\\\///////______\\/\\\\\\_______\\/\\\\\\_\n     _____\\/\\\\\\_____\\/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_\n      _____\\/\\\\\\_____\\/\\\\\\_____________\\/\\\\\\_______/\\\\\\__\n       __/\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\/___\n        _\\///////////__\\///////////////__\\////////////_____\n```\n\nAn alternative package manager for Node.\n\n* **Concurrent Installations** - `ied` installs sub-dependencies in parallel.\n  This means that the download of a dependency might have been completed before\n  that of its parent or any of its siblings even started.\n\n* **Correct Caching** - Downloaded packages are being cached locally. Similarly\n  to the entry dependencies stored in `node_modules`, they are being identified\n  by their checksums. Therefore we can guarantee the consistency of the cache\n  itself without (manually) invalidating dependencies (e.g. due to overridden\n  version numbers).\n\n* **`node_modules` as CAS** - Packages are always being referenced by their\n  *SHA-1* checksums. Therefore a `node_modules` directory can be considered to\n  be a [Content Addressable\n  Storage](https://en.wikipedia.org/wiki/Content-addressable_storage), meaning\n  that packages are being identified by their contents, not by arbitrary\n  identifiers, such as package names that are not guaranteed to be unique\n  across different registries.\n\n* **Flat `node_modules`** - Due to the *CAS*-based design, conflicts due to\n  naming collisions are more or less impossible. Therefore all dependencies can\n  be stored in a flat directory structure. Circular dependencies and\n  dependencies on different versions of the same packages are still being\n  handled correctly.\n\n* **Guaranteed uniqueness** - Since the directory in which a specific package\n  is being stored is determined by its *shasum*, identical packages can't\n  conflict due to their location in the file system itself. This also means\n  that the same dependency won't be installed more than once. Dependencies\n  don't need to be explicitly declared as `peerDependencies`, since shared\n  sub-dependencies are the default, not an option.\n\n* **Atomic installs** - The atomicity of installs can be ensured on a\n  *package-level*. \"In progress\" downloads are being stored in\n  `node_modules/.tmp` and moved into `node_modules` once their download has\n  been completed. In order to prevent deadlocks, packages that have circular\n  dependencies are exempt from this limitation. In most cases however, the\n  `node_modules` directory is *consistent* at any given point in time during\n  the main installation procedure.\n\n* **Package names as links** - While packages are being referenced by their\n  *shasum* internally, they can still be required via their human-readable\n  equivalent name. Package names themselves are simply symbolic links to the\n  actual content-addressed package itself. A nice side-effect of this design is\n  that in contrast to other package managers, you can not accidentally require\n  a sub-dependency that hasn't been installed as such.\n\n* **Semantic Versioning** - [Semantic version numbers](http://semver.org/) are\n  being resolved correctly.\n\n* **Arbitrary package groups** - Packages can be grouped into \"package groups\",\n  such as `dependencies` and `devDependencies`. Dependencies can be installed\n  exclusively based on the group they are in.\n\n\nInternals\n---------\n\nUnder the hood, `ied` maintains an \"object database\", similar to `git`. Instead\nof storing packages by some arbitrary name, a SHA1-checksum is being generated\nto approximate their contents. The checksums can not only be used for\nguaranteeing a certain level of trust and consistency, but they also simplify\nthe algorithm through which dependencies are being managed.\n\nThe algorithm through which packages are being installed guarantees consistency\nthrough atomic installs. The installation of a package either fails or\nsucceeds, but at no point in time can a dependency itself be required without\nhaving its own sub-dependencies installed (with the exception of shared\ncircular dependencies).\n\nThe checksum of a package is based on the contents of the package itself, not\nof its sub-dependencies. Therefore the validity of a package can be verified by\nhashing the package itself. Subsequent dependency updates have no effect of the\ngenerated checksum.\n\nSince `node_modules` is essentially a file-system based content addressable\nstorage, multiple versions of the same package can co-exist in the same\nproject. In order to expose dependencies via CommonJS, symbolic links are being\ncreated that reference a specific version of the package. This has multiple\nadvantages:\n\n1. Undeclared dependencies that have been installed as sub-dependencies of\n   \"direct\" dependencies are unlikely to be required \"accidentally\".\n\n2. There is no need to \"manually\" (as in additionally to the installation\n   procedure itself) de-duplicate the dependency graph. As long as the\n   uniqueness of filenames itself can be guaranteed on an OS-level, it is\n   *impossible* to install the same package twice. This does not prevent users\n   from installing different versions of the same dependency as long as the\n   content is different (whereas a different version declared in the\n   `package.json` counts as different contents).\n\n3. Shorter pathnames and less problems due to OS-level limitations (as in\n   Windows where the maximum path length is limited).\n\n4. Additional application-level startup performance improvements. `require`\n   needs to traverse less directories. A limited number of symbolic links need\n   to be followed. This performance improvement is primarily useful for\n   continuously running tests, where startup time is actually noticeable for\n   larger test suits.\n\n\n### Directory Structure\n\nThe used directory structure is primarily optimized for reducing the amount of\nIO interaction with the file system during subsequent installations and\nguaranteeing the consistency of installed packages.\n\nA consequence of the\n[`require.resolve`](https://nodejs.org/api/modules.html#modules_all_together)\nalgorithm used by Node, all packages need to be stored in a project-level\n`node_modules` directory. This directory is completely flat on a package-level,\nmeaning that there are no nested packages inside it.\n\nInstead each package is being stored in its content-addressed directory. Such a\ndirectory has two sub-directories:\n\n* **package** - This is where the unpacked package contents is being stored. At\n  no point in time will this directory be modified. This enables us to verify\n  the integrity of the package at a later point in time by comparing the actual\n  checksum to the one defined by other dependents or registries.\n\n* **node_modules** - Sub-dependencies of the dependency installed in `package`\n  are being referenced by symbolic links in `node_modules` of the package\n  itself. `require.resolve` will fall-back to this level after failing to\n  locate a dependency in `package`. This means checked in dependencies are\n  still supported, provided that their sub-dependencies are also available\n  (anywhere in the dependency graph).\n\nOn a project level, the `node_modules` directory contains the fetched packages,\ninstalled dependencies and links that expose the packages to user-land via\n`require`.\n\nA comparison of sample directory structures produced by ied, npm 2 and npm 3 is\navailable as a [GitHub\nGist](https://gist.github.com/alexanderGugel/a10ed5655d366875a280).\n\n\nWhy?\n----\n\nThe original idea was to implement npm's pre-v3 install algorithm in as few\nlines as possible. This goal was achieved in\n[`c4ba56f`](https://github.com/alexanderGugel/ied/tree/c4ba56f7dece738db5b8cb28c20c7f6aa1e64d1d).\n\nCurrently the main goal of this project is to provide a more performant\nalternative to npm.\n\n\nInstallation\n------------\n\nThe easiest way to install ied is using [npm](https://www.npmjs.org/):\n\n```\nnpm i -g ied\n```\n\nAlternatively you can also \"bootstrap\" ied.\nAfter an initial installation via npm, ied will install its own dependencies:\n\n```\ngit clone https://github.com/alexanderGugel/ied ied && cd $_ && make install\n```\n\nUsage\n-----\n\nThe goal of `ied` is to support ~ 80 per cent of the npm commands that one uses\non a daily basis. Feature parity with npm **other than** with its installation\nprocess itself is not an immediate goal. Raw performance is the primary concern\nduring the development process.\n\nA global [configuration](src/config.js) can be supplied via environment\nvariables. `NODE_DEBUG` can be used in order to debug specific sub-systems. The\nprogress bar will be disabled in that case.\n\nAlthough `run-script` is supported, lifecycle scripts are not.\n\nAt this point in time, the majority of the command API is\n[self-documenting](bin/cmd.js). More extensive documentation will be available\nonce the API is stabilized.\n\nA high-level [USAGE](USAGE.txt) help is also supplied. The main goal is to\nkeep the API predictable for regular npm-users. This means certain flags, such\nas for example `--save`, `--save-dev`, `--save-optional`, are supported.\n\n```\n  ied is a package manager for Node.\n\n  Usage:\n\n    ied [command] [arguments]\n\n  The commands are:\n\n    install     fetch packages and dependencies\n    run         run a package.json script\n    shell       enter a sub-shell with augmented PATH\n    ping        check if the registry is up\n    config      print the used config\n    init        initialize a new package\n    link        link the current package or into it\n    unlink      unlink the current package or from it\n    start       runs `ied run start`\n    stop        runs `ied run stop`\n    build       runs `ied run build`\n    test        runs `ied run test`\n\n  Flags:\n    -h, --help          show usage information\n    -v, --version       print the current version\n    -S, --save          update package.json dependencies\n    -D, --save-dev      update package.json devDependencies\n    -O, --save-optional update package.json optionalDependencies\n    -r, --registry      use a custom registry\n                        (default: http://registry.npmjs.org/)\n    -b, --build         execute lifecycle scripts upon completion\n                        (e.g. postinstall)\n\n  Example:\n    ied install\n    ied install <pkg>\n    ied install <pkg>@<version>\n    ied install <pkg>@<version range>\n\n    Can specify one or more: ied install semver@^5.0.1 tape\n    If no argument is supplied, installs dependencies from package.json.\n    Sub-commands can also be called via their shorthand aliases.\n\n  README:  https://github.com/alexanderGugel/ied\n  ISSUES:  https://github.com/alexanderGugel/ied/issues\n```\n\nDevelopment notes\n-----------------\n\nTo run the test suite, run `npm test`. The test suite mocks all HTTP requests,\nwith fixtures cached inside `fixtures/generated/`. If you make new tests that\nperform HTTP requests, it'll be saved there.\n\n```\nnpm test\n```\n\nCredits\n-------\n\nSome ideas and (upcoming) features of `ied` are heavily inspired by\n[**Nix**](http://nixos.org/nix/), a purely functional package manager.\n\nLicense\n-------\n\nLicensed under the MIT license. See [LICENSE](LICENSE.md).\n\n","starsCount":4,"created":"2015-11-15T19:49:35.318Z","modified":"2016-11-08T18:55:40.290Z","lastPublisher":{"name":"alexandergugel","email":"alexander.gugel@gmail.com"},"owners":[{"name":"alexandergugel","email":"alexander.gugel@gmail.com"},{"name":"mgcrea","email":"olivier@mg-crea.com"}],"other":{"_attachments":{},"_from":".","_id":"ied","_nodeVersion":"8.0.0-pre","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ied-2.3.6.tgz_1478631338190_0.36231258208863437"},"_npmUser":{"name":"alexandergugel","email":"alexander.gugel@gmail.com"},"_npmVersion":"3.10.8","_rev":"4-52c9e77d3e74c90791d207044626f8a4","_shasum":"7182ddde29c5b18c41fc7ab11f550b047e6f4ddc","author":{"name":"Alexander Gugel","email":"alexander.gugel@gmail.com"},"bugs":{"url":"https://github.com/alexanderGugel/ied/issues"},"contributors":[{"name":"Alexander Gugel","email":"alexander.gugel@gmail.com"},{"name":"Olivier Louvignes","email":"olivier@mg-crea.com"},{"name":"just-boris","email":"just-boris@hotmail.com"},{"name":"Rico Sta. Cruz","email":"rstacruz@users.noreply.github.com"},{"name":"Noah Isaacson","email":"nisaacson@itriagehealth.com"},{"name":"Denis Malinochkin","email":"dmalinochkin@rambler.ru"},{"name":"dickeyxxx","email":"jeff@dickeyxxx.com"},{"name":"Tim Whidden","email":"twhid@twhid.com"},{"name":"Siegfried Ehret","email":"SiegfriedEhret@users.noreply.github.com"},{"name":"Josh Schreuder","email":"jschreuder@bcc.com.au"},{"name":"Yu Wu","email":"chaconnewu@gmail.com"},{"name":"Arnav Singh","email":"arnavion@gmail.com"}],"directories":{},"dist-tags":{"latest":"2.3.6"},"dist":{"shasum":"7182ddde29c5b18c41fc7ab11f550b047e6f4ddc","tarball":"http://registry.npmjs.org/ied/-/ied-2.3.6.tgz"},"maintainers":[{"name":"alexandergugel","email":"alexander.gugel@gmail.com"},{"name":"mgcrea","email":"olivier@mg-crea.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-08T18:55:40.290Z","created":"2015-11-15T19:49:35.318Z","0.0.0":"2015-11-15T19:49:35.318Z","0.0.1":"2015-11-15T22:00:46.710Z","0.0.2":"2015-11-15T23:19:59.438Z","0.0.3":"2015-11-16T00:56:03.394Z","0.0.4":"2015-11-16T01:13:35.770Z","0.0.5":"2015-11-16T01:27:48.605Z","0.1.0":"2015-11-16T23:08:44.618Z","0.1.1":"2015-11-17T23:15:31.365Z","0.2.0":"2015-11-18T01:46:50.327Z","0.2.1":"2015-11-18T18:37:56.724Z","0.2.2":"2015-11-19T23:12:32.406Z","0.2.3":"2015-11-20T03:37:31.914Z","0.2.4":"2015-11-20T20:15:25.958Z","0.2.5":"2015-11-20T20:18:26.672Z","0.3.0":"2015-11-21T03:15:24.742Z","0.3.1":"2015-11-21T03:43:25.260Z","0.3.2":"2015-11-21T16:38:02.595Z","0.3.3":"2015-11-22T19:31:25.606Z","0.3.4":"2015-11-27T13:33:25.763Z","0.3.5":"2015-12-03T01:57:54.937Z","0.3.6":"2015-12-10T09:46:04.181Z","0.4.0":"2016-01-18T21:19:14.680Z","0.4.1":"2016-01-21T21:26:22.599Z","0.4.2":"2016-01-25T13:19:01.231Z","0.4.3":"2016-01-25T20:16:47.766Z","0.4.4":"2016-01-27T18:13:27.202Z","0.4.5":"2016-01-27T23:28:22.334Z","0.4.6":"2016-01-28T02:38:12.175Z","0.4.7":"2016-01-28T14:02:43.666Z","0.4.8":"2016-01-29T12:46:43.975Z","0.4.9":"2016-01-29T13:21:28.570Z","0.4.10":"2016-01-30T09:30:31.526Z","0.4.11":"2016-01-30T09:37:27.948Z","1.0.0":"2016-02-01T18:14:42.209Z","1.0.1":"2016-02-10T00:05:35.681Z","1.0.2":"2016-02-10T01:08:41.419Z","1.0.3":"2016-02-17T01:53:51.451Z","1.0.4":"2016-02-17T19:59:04.336Z","1.0.5":"2016-02-22T01:42:47.765Z","1.0.6":"2016-03-08T01:12:18.641Z","1.1.0":"2016-03-29T22:03:33.728Z","1.1.1":"2016-04-06T02:53:01.291Z","2.0.0":"2016-05-27T00:04:52.980Z","2.0.1":"2016-05-27T00:15:50.670Z","2.0.2":"2016-05-27T01:19:10.165Z","2.0.3":"2016-05-27T02:21:31.302Z","2.0.4":"2016-05-28T23:54:59.210Z","2.0.5":"2016-06-21T02:16:43.947Z","2.1.0":"2016-07-08T03:28:21.861Z","2.1.1":"2016-07-23T00:28:25.966Z","2.2.0":"2016-07-26T00:54:07.598Z","2.3.0":"2016-07-27T01:10:02.219Z","2.3.1":"2016-07-29T01:22:48.206Z","2.3.2":"2016-08-14T21:10:34.585Z","2.3.3":"2016-09-26T01:49:39.384Z","2.3.4":"2016-11-07T20:43:59.018Z","2.3.5":"2016-11-07T21:10:17.701Z","2.3.6":"2016-11-08T18:55:40.290Z"},"users":{"ahmedelgabri":true,"timdp":true,"hal9zillion":true,"josiah":true}}}