{"name":"sse4_crc32","description":"Hardware-accelerated CRC-32C with software fallback","keywords":["crc","crc32","crc32c","sse","sse4","sse4.2","error detection"],"version":"5.1.1","license":"MIT","repository":"https://github.com/anandsuresh/sse4_crc32","engines":{"node":">=0.8"},"main":"./sse4_crc32","dependencies":{"bindings":"~1.2.1","nan":"^2.3.5"},"devDependencies":{"node-gyp":"^3.3.1","mocha":"^2.1.0","chai":"^2.0.0","crc32":"^0.2.1"},"scripts":{"test":"mocha test/*test.js","debug":"echo \"platform: $(uname -a)\"; echo \"node.js: $(node -v)\"; echo \"npm: $(npm -v)\"; echo \"node-gyp: $(./node_modules/.bin/node-gyp -v)\"; node -e \"console.log('H/w CRC Support: ' + require('./sse4_crc32').isHardwareCrcSupported());\"; node -pe \"require('./sse4_crc32');\"","hwcrc":"node -e \"console.log('H/w CRC Support: ' + require('./sse4_crc32').isHardwareCrcSupported());\"","install":"node-gyp rebuild"},"gypfile":true,"gitHead":"442632eb4c8a696300cd8493c6ef6d20fc658d43","homepage":"https://github.com/anandsuresh/sse4_crc32#readme","versions":[{"number":"1.0.0","date":"2013-11-27T07:05:34.422Z"},{"number":"1.1.0","date":"2013-11-28T20:11:46.985Z"},{"number":"1.1.1","date":"2013-11-28T20:51:44.222Z"},{"number":"1.1.2","date":"2013-12-01T22:44:26.353Z"},{"number":"1.1.3","date":"2013-12-08T21:08:15.436Z"},{"number":"2.0.0","date":"2014-01-30T07:28:49.960Z"},{"number":"2.1.0","date":"2014-05-24T17:14:01.415Z"},{"number":"2.1.2","date":"2015-02-06T23:21:33.021Z"},{"number":"3.0.0","date":"2015-03-08T23:43:00.334Z"},{"number":"3.0.1","date":"2015-03-17T05:13:04.709Z"},{"number":"3.1.0","date":"2015-04-02T18:23:00.687Z"},{"number":"3.1.1","date":"2015-05-03T18:47:09.619Z"},{"number":"3.1.2","date":"2015-05-05T02:23:39.413Z"},{"number":"3.2.0","date":"2015-06-13T21:49:58.047Z"},{"number":"3.3.0","date":"2015-08-01T01:21:25.641Z"},{"number":"3.4.0","date":"2015-08-05T05:20:11.092Z"},{"number":"4.0.0","date":"2015-08-05T05:40:06.123Z"},{"number":"4.0.1","date":"2015-08-21T16:37:24.733Z"},{"number":"4.1.0","date":"2015-09-13T23:21:10.227Z"},{"number":"4.1.1","date":"2015-10-28T22:39:54.497Z"},{"number":"5.0.0","date":"2016-04-16T20:05:33.060Z"},{"number":"5.1.0","date":"2016-05-02T16:15:59.811Z"},{"number":"5.1.1","date":"2016-06-01T23:11:17.886Z"}],"readme":"# SSE4-CRC32 [![Build Status](https://travis-ci.org/Voxer/sse4_crc32.svg?branch=master)](https://travis-ci.org/Voxer/sse4_crc32) [![npm version](https://badge.fury.io/js/sse4_crc32.svg)](http://badge.fury.io/js/sse4_crc32)\n\nStarting with the Nehalam series, Intel processors feature the Streaming SIMD Extensions instruction set which\nprovide a hardware-accelerated version of the CRC32 algorithm (Castagnoli variant). This library uses the\nIntel SSE 4.2 instruction set to provide a fast CRC-32 algorithm.\n\n\n## Features\n\n- Intel Streaming SIMD Extensions 4.2 based hardware accelerated CRC-32C calculation\n- Graceful fallback to software-based CRC (table-based CRC calculation)\n- Progressive CRC-32C calculation\n- Supports Node.js buffers\n\n\n## Performance\n\nThe tests were run on a Macbook Air running an Intel Core i7 processor, with 8GB of RAM and used buffers\ninstead of strings to prevent having items on the V8 heap that might cause the garbage collector to fire\nfrequently and interfere with the test run-times.\n\nBelow are the results from the 2 test cases:\n\n    > node benchmark/1.single_1kb_length_buffer.benchmark.js\n    100000 calls to calculate CRC on a 1024 byte buffer...\n        Hardware-based CRC-32C: 27.388368 ms\n        Software-based CRC-32C: 87.832587 ms\n        Pure JS CRC-32C (table-based): 726.95698 ms\n        Pure JS CRC-32C (direct): 4332.993692 ms\n\n    > node benchmark/2.multi_random_length_buffer.benchmark.js\n    100000 calls to calculate CRC on random-length buffers upto 4096 bytes long...\n        Avg. buffer length: 2049 bytes\n        Hardware-based CRC-32C: 88.440507 ms\n        Software-based CRC-32C: 173.136638 ms\n        Pure JS CRC-32C (table-based): 2131.861339 ms\n        Pure JS CRC-32C (direct): 9006.901272 ms\n\n\n## Installation\n\nUse the following command to install the library from npm:\n\n    npm install sse4_crc32\n\n\n## Usage\n\nUsing the library is quite simple. Start out by including the library in your code:\n\n    var Sse4Crc32 = require(\"sse4_crc32\");\n\nTo calculate the 32-bit CRC for any string, simply use the following code:\n\n    var crc = Sse4Crc32.calculate(\"my string\");\n\nInstead of passing in a string, a buffer can be passed to the `calculate()` function.\n\nFurthermore, the `calculate()` function takes an optional `initialCrc` value as the second argument, allowing\nfor progressive CRC calculation.\n\n    var crc = Sse4Crc32.calculate(\"my string\");\n    var newCrc = Sse4Crc32.calculate(\"my new string\", crc);\n\nAnother way to calculate CRC in a progressive manner is as follows:\n\n    var sse4crc32 = new Sse4Crc32.CRC32();\n    var myInputs = [ \"some string\", new Buffer(\"a buffer\"), \"yet another string\", new Buffer(\"yet another buffer\") ];\n    var crc;\n\n    myInputs.forEach(function (string) {\n        sse4crc32.update(string);\n    });\n\n    crc = sse4crc32.crc();\n\nAlso see the example code in the [examples](https://github.com/anandsuresh/sse4_crc32/tree/master/examples)\ndirectory.\n\n## How to compile\n\nOnce the repository has been cloned, use one of the following commands to build the library:\n\n    make all            // Builds the release version of the library and runs all tests\n    make debug          // Builds the debug version of the library\n    make clean          // Removes all files generated by builds\n\n\n## Contact\n\nAll feedback/suggestions/criticisms can be directed to [Anand Suresh](http://www.github.com/anandsuresh)\n","starsCount":2,"created":"2013-11-27T07:05:32.442Z","modified":"2017-01-24T19:26:03.126Z","lastPublisher":{"name":"anandsuresh","email":"anandsuresh@gmail.com"},"owners":[{"name":"anandsuresh","email":"anandsuresh@gmail.com"},{"name":"jgautier","email":"julian.gautier@alumni.neumont.edu"}],"other":{"_attachments":{},"_from":".","_id":"sse4_crc32","_nodeVersion":"4.2.6","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/sse4_crc32-5.1.1.tgz_1464822676706_0.03151704161427915"},"_npmUser":{"name":"anandsuresh","email":"anandsuresh@gmail.com"},"_npmVersion":"2.14.12","_rev":"4-d580db6ba8eaf01093d8f42698ad6d67","_shasum":"1a2e73a0a810e2d69b605fede789d567829a04b7","author":{"name":"Anand Suresh","email":"anandsuresh@gmail.com","url":"https://github.com/anandsuresh"},"bugs":{"url":"https://github.com/anandsuresh/sse4_crc32/issues"},"directories":{},"dist-tags":{"latest":"5.1.1"},"dist":{"shasum":"1a2e73a0a810e2d69b605fede789d567829a04b7","tarball":"http://registry.npmjs.org/sse4_crc32/-/sse4_crc32-5.1.1.tgz"},"maintainers":[{"name":"anandsuresh","email":"anandsuresh@gmail.com"},{"name":"jgautier","email":"julian.gautier@alumni.neumont.edu"}],"readmeFilename":"README.md","time":{"modified":"2017-01-24T19:26:03.126Z","created":"2013-11-27T07:05:32.442Z","1.0.0":"2013-11-27T07:05:34.422Z","1.1.0":"2013-11-28T20:11:46.985Z","1.1.1":"2013-11-28T20:51:44.222Z","1.1.2":"2013-12-01T22:44:26.353Z","1.1.3":"2013-12-08T21:08:15.436Z","2.0.0":"2014-01-30T07:28:49.960Z","2.1.0":"2014-05-24T17:14:01.415Z","2.1.2":"2015-02-06T23:21:33.021Z","3.0.0":"2015-03-08T23:43:00.334Z","3.0.1":"2015-03-17T05:13:04.709Z","3.1.0":"2015-04-02T18:23:00.687Z","3.1.1":"2015-05-03T18:47:09.619Z","3.1.2":"2015-05-05T02:23:39.413Z","3.2.0":"2015-06-13T21:49:58.047Z","3.3.0":"2015-08-01T01:21:25.641Z","3.4.0":"2015-08-05T05:20:11.092Z","4.0.0":"2015-08-05T05:40:06.123Z","4.0.1":"2015-08-21T16:37:24.733Z","4.1.0":"2015-09-13T23:21:10.227Z","4.1.1":"2015-10-28T22:39:54.497Z","5.0.0":"2016-04-16T20:05:33.060Z","5.1.0":"2016-05-02T16:15:59.811Z","5.1.1":"2016-06-01T23:11:17.886Z"},"users":{"cocopas":true,"dzhou777":true}}}