{"name":"fs-ext-prebuilt","description":"Extensions to core 'fs' module.","version":"0.4.7","keywords":["fs","filesystem","flock","seek"],"homepage":"https://github.com/RnbWd/fs-ext-prebuilt/","repository":"https://github.com/RnbWd/fs-ext-prebuilt","main":"fs-ext.js","engines":{"node":">= v0.8.0"},"scripts":{"install":"node-pre-gyp install --fallback-to-build","test":"./run_tests","prebuild":"node-pre-gyp rebuild && node-pre-gyp package"},"dependencies":{"nan":"~1.4.3","node-pre-gyp":"^0.6.2"},"gypfile":true,"binary":{"module_name":"fs-ext","module_path":"./build-pre-gyp/","host":"https://github.com/RnbWd/fs-ext-prebuilt/releases/download/0.4.4"},"publishConfig":{"registry":"https://registry.npmjs.org"},"license":"MIT","gitHead":"e4d37b70162363e7f06eade1b45954c026c2533a","bundleDependencies":["node-pre-gyp"],"versions":[{"number":"0.4.3","date":"2015-01-19T10:32:39.603Z"},{"number":"0.4.4","date":"2015-01-29T04:15:42.312Z"},{"number":"0.4.5","date":"2015-01-29T04:17:08.487Z"},{"number":"0.4.6","date":"2015-02-06T19:41:48.738Z"},{"number":"0.4.7","date":"2015-02-25T06:11:01.716Z"}],"readme":"fs-ext-prebuilt\n======\n\nExtras not included in Node's fs module.\n\n[![travis badge](http://img.shields.io/travis/codingalchemy/fs-ext-prebuilt.svg)](https://travis-ci.org/codingalchemy/fs-ext-prebuilt)\n\nInstallation\n------------\n\nInstall via npm:\n\n    npm install fs-ext-prebuilt\n\nUsage\n-----\n\nfs-ext imports all of the methods from the core 'fs' module, so you don't\nneed two objects.\n\n```js\nvar fs = require('fs-ext-prebuilt');\nvar fd = fs.openSync('foo.txt', 'r');\nfs.flock(fd, 'ex', function (err) {\n    if (err) {\n        return console.log(\"Couldn't lock file\");\n    }\n    // file is locked\n})\n```\n\nFor an advanced example checkout `example.js`.\n\nAPI\n---\n\n### fs.flock(fd, flags, [callback])\n\nAsynchronous flock(2). No arguments other than a possible error are passed to\nthe callback. Flags can be 'sh', 'ex', 'shnb', 'exnb', 'un' and correspond\nto the various LOCK_SH, LOCK_EX, LOCK_SH|LOCK_NB, etc.\n\n### fs.flockSync(fd, flags)\n\nSynchronous flock(2). Throws an exception on error.\n\n### fs.fcntl(fd, cmd, [arg], [callback])\n\nAsynchronous fcntl(2).\n\ncallback will be given two arguments (err, result).\n\nThe supported commands are:\n\n- 'getfd' ( F_GETFD )\n- 'setfd' ( F_SETFD )\n\nRequiring this module adds `FD_CLOEXEC` to the constants module, for use with F_SETFD.\n\n### fs.fcntlSync(fd, flags)\n\nSynchronous fcntl(2). Throws an exception on error.\n\n### fs.seek(fd, offset, whence, [callback])\n\nAsynchronous lseek(2).  \n\ncallback will be given two arguments (err, currFilePos).\n\nwhence can be 0 (SEEK_SET) to set the new position in bytes to offset, \n1 (SEEK_CUR) to set the new position to the current position plus offset \nbytes (can be negative), or 2 (SEEK_END) to set to the end of the file \nplus offset bytes (usually negative or zero to seek to the end of the file).\n\n### fs.seekSync(fd, offset, whence)\n\nSynchronous lseek(2). Throws an exception on error.  Returns current\nfile position.\n\n\n### fs.utime(path [, atime, mtime] [, callback])\n\nAsynchronous utime(2).\n\nArguments `atime` and `mtime` are in seconds as for the system call.  Note\nthat the number value of Date() is in milliseconds, so to use the 'now'\nvalue with `fs.utime()` you would have to divide by 1000 first, e.g. \nDate.now()/1000\n\nJust like for utime(2), the absence of the `atime` and `mtime` means 'now'.\n\n### fs.utimeSync(path [, atime, mtime])\n\nSynchronous version of utime().  Throws an exception on error.\n\n\n\n\n","created":"2015-01-19T10:32:39.603Z","modified":"2015-02-25T06:11:01.716Z","lastPublisher":{"name":"rnbwd","email":"dwisner6@gmail.com"},"owners":[{"name":"rnbwd","email":"dwisner6@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fs-ext-prebuilt","_nodeVersion":"0.12.0","_npmUser":{"name":"rnbwd","email":"dwisner6@gmail.com"},"_npmVersion":"2.6.0","_rev":"1-534f46d2b5cc65a77b2485a785e76073","_shasum":"a565cfc6bdc4c5e4e7912ff50bc04f241cfb100d","bugs":{"url":"https://github.com/RnbWd/fs-ext-prebuilt/issues"},"contributors":[{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},{"name":"David Wisner","email":"dwisner6@gmail.com"}],"directories":{},"dist-tags":{"latest":"0.4.7"},"dist":{"shasum":"a565cfc6bdc4c5e4e7912ff50bc04f241cfb100d","tarball":"http://registry.npmjs.org/fs-ext-prebuilt/-/fs-ext-prebuilt-0.4.7.tgz"},"maintainers":[{"name":"rnbwd","email":"dwisner6@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-02-25T06:11:01.716Z","created":"2015-01-19T10:32:39.603Z","0.4.3":"2015-01-19T10:32:39.603Z","0.4.4":"2015-01-29T04:15:42.312Z","0.4.5":"2015-01-29T04:17:08.487Z","0.4.6":"2015-02-06T19:41:48.738Z","0.4.7":"2015-02-25T06:11:01.716Z"}}}