{"name":"service-mx28adc","version":"1.0.5","description":"MX28ADC Service","main":"mx28adc.js","dependencies":{"nan":"^2.5.1","bindings":"^1.2.1"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild"},"gypfile":true,"repository":"https://github.com/embeddedarm/service-mx28adc","homepage":"https://github.com/embeddedarm/service-mx28adc#readme","license":"GPL 3.0","gitHead":"3cac2fb3602e815fc995f57a0df44c8589ce78a6","versions":[{"number":"1.0.0","date":"2017-04-22T22:43:44.295Z"},{"number":"1.0.1","date":"2017-04-22T22:44:46.205Z"},{"number":"1.0.2","date":"2017-04-22T22:57:55.215Z"},{"number":"1.0.3","date":"2017-04-22T22:59:14.176Z"},{"number":"1.0.4","date":"2017-04-28T16:26:58.344Z"},{"number":"1.0.5","date":"2017-04-28T17:26:09.311Z"}],"readme":"iMX28 ADC service plug-in for express-modular-server\r\n===========================================================================\r\n\r\nThis is a plug-in for [express-modular-server](https://github.com/michael-ts/express-modular-server/).  It provides a service for reading the iMX28 CPU Analog to Digital Convertor values.\r\n\r\nIf a string option is presented upon initialization, it is the base endpoint to serve GPIO control from.  If this option is not present,  a base endpoint of `/gpio/` is used.\r\n\r\n# Install\r\n\r\n    npm install service-mx28adc\r\n\r\nThe device you are running on must have an iMX28 CPU.  This code has been tested on a Technologic Systems [TS-7680](https://wiki.embeddedarm.com/wiki/TS-7680) which has a Freescale i.MX286 454MHz ARMv5TE ARM926EJ-S CPU.\r\n\r\nCurrently only boards with CPU registers at these physical addresses are supported (see TODO below):\r\n\r\n    MX LR ADC registers at 0x80050000\r\n    MX HS ADC registers at 0x80002000\r\n    MX CLK CTRL registers at 0x8004000\r\n\r\n# Usage\r\n\r\nThe following example loads the `mx28adc` module with the default endpoint:\r\n\r\n    var server = require(\"express-modular-server\")({\r\n         http:true\r\n       })\r\n        // other API calls here\r\n        .API(\"mx28adc\")\r\n        .start()\r\n\r\nIn this example, an endpoint of `/mx28adc/` is used to control GPIOs:\r\n\r\n\r\n    var server = require(\"express-modular-server\")({\r\n         http:true\r\n       })\r\n        // other API calls here\r\n        .API(\"gpio\",\"/mx28adc/\")\r\n        .start()\r\n\r\nTo get the current state of the 8 ADCs on the board, issue an HTTP GET request to the server.  The server will respond with each sample as a raw 16-bit integer followed by a newline.  For example:\r\n\r\n    wget http://192.168.1.100/adc\r\n    =>\r\n    1016\r\n    123\r\n    1500\r\n    5\r\n    6950\r\n    1112\r\n    12\r\n    68\r\n\r\n\r\n# To Do\r\n\r\nAllow the memory base address to be configurable so as to support more boards.\r\n\r\n# Copyright\r\n\r\nWritten by Michael Schmidt.\r\n\r\n# License\r\n\r\nGPL 3.0\r\n","created":"2017-04-22T22:43:44.295Z","modified":"2017-04-28T17:26:09.311Z","lastPublisher":{"name":"michael1","email":"technologic.michael@gmail.com"},"owners":[{"name":"michael1","email":"technologic.michael@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"service-mx28adc","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/service-mx28adc-1.0.5.tgz_1493400367261_0.5623862594366074"},"_npmUser":{"name":"michael1","email":"technologic.michael@gmail.com"},"_npmVersion":"3.10.3","_rev":"6-e948bf163b9c98919194be4d233ee9f7","_shasum":"bd218cf72c850d51506bfdfde34686253fe5b56c","author":{"name":"Michael Schmidt"},"bugs":{"url":"https://github.com/embeddedarm/service-mx28adc/issues"},"directories":{},"dist-tags":{"latest":"1.0.5"},"dist":{"shasum":"bd218cf72c850d51506bfdfde34686253fe5b56c","tarball":"https://registry.npmjs.org/service-mx28adc/-/service-mx28adc-1.0.5.tgz"},"maintainers":[{"name":"michael1","email":"technologic.michael@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-28T17:26:09.311Z","created":"2017-04-22T22:43:44.295Z","1.0.0":"2017-04-22T22:43:44.295Z","1.0.1":"2017-04-22T22:44:46.205Z","1.0.2":"2017-04-22T22:57:55.215Z","1.0.3":"2017-04-22T22:59:14.176Z","1.0.4":"2017-04-28T16:26:58.344Z","1.0.5":"2017-04-28T17:26:09.311Z"}}}