{"name":"rcswitch-peterstrapp","version":"0.3.0","description":"Control your wireless power outlet sockets and listen for sensor input on 315Mhz/433Mhz with RCSwitch for the Raspberry Pi","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild"},"repository":"https://github.com/peterstrapp/node-rcswitch","keywords":["rpi","raspberrypi","rcswitch","433","rf","wireless","power","outlet"],"engines":{"node":">=0.8"},"license":"GPL-2.0","gypfile":true,"homepage":"https://github.com/peterstrapp/node-rcswitch","dependencies":{"bindings":"^1.2.1","nan":"^2.0.8"},"gitHead":"c23d39821344ebffe364dee9f0bf801f713eac33","versions":[{"number":"0.3.0","date":"2015-09-18T22:49:50.223Z"},{"number":"0.3.1","date":"2015-09-29T21:49:20.960Z"}],"readme":"node-rcswitch\n=============\n\n[![NPM version](https://badge.fury.io/js/rcswitch.svg)](http://badge.fury.io/js/rcswitch)\n\nNode bindings for the [rcswitch RaspberryPi port](https://github.com/r10r/rcswitch-pi).\n\nIt should be compatible with Node 0.8, 0.10 and 0.12 (tested only on 0.10 and 0.12). Successfully tested on Raspbian Wheezy up-to-date as of 2015-02-28.\n\n## Requirements\n\n* [WiringPi must be installed](https://projects.drogon.net/raspberry-pi/wiringpi/download-and-install/) in order to compile.\n* Both the data and the power Pins of the 315/433Mhz receiver/emitter must be connected to the RPi. Note the number of the WiringPi data Pin. (see http://wiringpi.com/pins/)\n*    The user must have permission to access the Raspberry Pi GPIO pins. There are two options:\n    1. Start node with root access (not a good idea and can be unreliable).\n    2. The better method is to expose the GPIO pins in `/sys/class/gpio` using the [gpio tool](https://projects.drogon.net/raspberry-pi/wiringpi/the-gpio-utility/) that comes with WiringPi. Example:\n    ```\n    gpio export 27 out\n    ```\n    And give the user permission to access the GPIO pins:\n    ```\n    chgrp -R dialout /sys/class/gpio\n    chmod -R g+rw /sys/class/gpio\n    ```\n    The above 3 lines can be added to `/etc/rc.local` to allow the GPIO pins to be exposed on start-up.\n\n## Usage\n```javascript\nvar rcswitch = require('rcswitch'); // Might throw an error if wiring pi init failed, or exit process if no root (must work on that)\n\nrcswitch.enableTransmit(0); // Use data Pin 0\nrcswitch.switchOn(\"10110\", 1); // Switch on the first unit of 10110 (code 1x23x) group\nrcswitch.switchOff(\"11000\", 2); // Switch off the second unit of 11000 (code 12xxx) group\n```\n\n```javascript\nvar rcswitch = require('rcswitch');\n\nvar pin = 27;\n\nif(rcswitch.enableReceive(pin)) {\n  setInterval(function() {\n      if (rcswitch.available()) {\n          console.log(rcswitch.getReceivedValue());\n          rcswitch.resetAvailable();\n      }\n  }, 1000);\n}\n```\n\n## API\n\n### Configuration\n\n#### rcswitch.enableTransmit(`pin`)\n\nEnable transmission on the given pin (make it an OUTPUT). Must be called before any other functions.\n\n* `pin` - (Number) data Pin to use following [the WiringPi schema](http://wiringpi.com/pins/)\n\nReturn true if `pin` is an integer, false otherwise.\n\n#### rcswitch.disableTransmit()\n\nDisable transmission.\n\nReturn true.\n\n\n#### rcswitch.enableReceive(`pin`)\n\nEnable receive on the given pin (make it an INPUT). Must be called before any other functions.\n\n* `pin` - (Number) data Pin to use following [the WiringPi schema](http://wiringpi.com/pins/)\n\nReturn true if `pin` is an integer, false otherwise.\n\n#### rcswitch.disableReceive()\n\nDisable receive.\n\nReturn true.\n\n### Receive\n\n#### rcswitch.available()\n\nReturns true if data has been received and is waiting to be retrieved from the buffer.\n\n#### rcswitch.resetAvailable()\n\nResets the data available flag.\n\nReturns true;\n\n#### rcswitch.getReceivedValue()\n\nFetches buffered received data.\n\nReturns value as a Uint32.\n\n### Transmit - Type A\n\n![Type A switch](https://raw.github.com/marvinroger/node-rcswitch/master/img/type_a.jpg \"Type A switch\")\n\n#### rcswitch.switchOn(`group`, `switch`)\n\nSwitch a remote switch on (Type A with 10 pole DIP switches).\n\n* `group` - (String) code of the switch group (refers to DIP switches 1, 2, 3, 4 and 5 where \"1\" = on and \"0\" = off - e.g. if all DIP switches are on it's \"11111\")\n* `switch` - (Number) switch number (can be 1 (if DIP switch A is on), 2 (if DIP switch B is on) and so on until 4)\n\nReturn true.\n\n#### rcswitch.switchOff(`group`, `switch`)\n\nSwitch a remote switch off (Type A with 10 pole DIP switches).\n\n* `group` - (String) code of the switch group (refers to DIP switches 1, 2, 3, 4 and 5 where \"1\" = on and \"0\" = off - e.g. if all DIP switches are on it's \"11111\")\n* `switch` - (Number) switch number (can be 1 (if DIP switch A is on), 2 (if DIP switch B is on) and so on until 4)\n\nReturn true.\n\n### Transmit - Type B\n\n![Type B switch](https://raw.github.com/marvinroger/node-rcswitch/master/img/type_b.jpg \"Type B switch\")\n\n#### rcswitch.switchOn(`group`, `switch`)\n\nSwitch a remote switch on (Type B with two rotary/sliding switches).\n\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n#### rcswitch.switchOff(`group`, `switch`)\n\nSwitch a remote switch off (Type B with two rotary/sliding switches).\n\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n### Transmit - Type C\n\n#### rcswitch.switchOn(`family`, `group`, `switch`)\n\nSwitch a remote switch on (Type C Intertechno).\n\n* `family` - (String) familycode (can be a, b, c, d, e, f)\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n#### rcswitch.switchOff(`family`, `group`, `switch`)\n\nSwitch a remote switch off (Type C Intertechno).\n\n* `family` - (String) familycode (can be a, b, c, d, e, f)\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n### Other\n\n#### rcswitch.send(`codeWord`)\n\nSend raw codeword.\n\n* `codeword` - (String) codeword\n\nReturn true.\n","created":"2015-09-18T22:49:50.223Z","modified":"2015-09-29T21:57:56.833Z","lastPublisher":{"name":"peterstrapp","email":"peter@strapp.co.uk"},"owners":[{"name":"peterstrapp","email":"peter@strapp.co.uk"}],"other":{"_attachments":{},"_from":".","_id":"rcswitch-peterstrapp","_nodeVersion":"0.12.6","_npmUser":{"name":"peterstrapp","email":"peter@strapp.co.uk"},"_npmVersion":"2.11.2","_rev":"1-dce68ab9a7bcdae6e693e9714a464825","_shasum":"7a0c23ac7cc16edbabe5ec499481f8e7c45a427d","author":{"name":"Peter Strapp","email":"peter@strapp.co.uk","url":"http://www.marvinroger.fr/"},"bugs":{"url":"https://github.com/peterstrapp/node-rcswitch/issues"},"directories":{},"dist-tags":{"latest":"0.3.0"},"dist":{"shasum":"7a0c23ac7cc16edbabe5ec499481f8e7c45a427d","tarball":"http://registry.npmjs.org/rcswitch-peterstrapp/-/rcswitch-peterstrapp-0.3.0.tgz"},"maintainers":[{"name":"peterstrapp","email":"peter@strapp.co.uk"}],"readmeFilename":"README.md","time":{"modified":"2015-09-29T21:57:56.833Z","created":"2015-09-18T22:49:50.223Z","0.3.0":"2015-09-18T22:49:50.223Z","0.3.1":"2015-09-29T21:49:20.960Z"}}}