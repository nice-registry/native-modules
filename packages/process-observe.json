{"name":"process-observe","version":"0.3.3","description":"Make processes observable.","main":"index.js","scripts":{"test":"tape 'test/**/*.spec.js'","doc":"jsdoc2md lib/observe.js > doc/API.md && node -e \"const fs = require('fs');fs.writeFile('README.md', fs.readFileSync('doc/README.md'));['doc/README.md', 'doc/API.md', 'doc/LICENSE.md'].forEach(function(el){fs.appendFileSync('README.md',fs.readFileSync(el))})\"","install":"node-gyp rebuild"},"repository":"https://github.com/eljefedelrodeodeljefe/process-observe","keywords":["concurrency"],"license":"MIT","homepage":"https://github.com/eljefedelrodeodeljefe/process-observe#readme","devDependencies":{"jsdoc-to-markdown":"^1.3.6","standard":"^7.1.0","tape":"^4.5.1"},"dependencies":{"bindings":"^1.2.1","nan":"^2.3.3"},"gypfile":true,"gitHead":"c1c11731596fe501ed3302056d340f218ae5a2a5","versions":[{"number":"0.1.3-beta.2","date":"2016-05-22T17:42:47.344Z"},{"number":"0.1.4-beta.3","date":"2016-05-22T20:50:25.419Z"},{"number":"0.2.0-beta.4","date":"2016-05-23T13:31:10.663Z"},{"number":"0.2.1-beta.5","date":"2016-05-23T13:42:44.577Z"},{"number":"0.2.2-beta.5","date":"2016-05-23T13:46:06.316Z"},{"number":"0.3.0","date":"2016-05-23T18:00:37.251Z"},{"number":"0.3.1","date":"2016-05-23T18:14:55.966Z"},{"number":"0.3.2","date":"2016-05-23T18:50:24.393Z"},{"number":"0.3.3","date":"2016-05-23T20:07:39.083Z"}],"readme":"# process-observe\n\nNative bindings to observation APIs like `sysctl` (BSDs), `proc/{pid}/` (Linux) and Windows equivalents in the context of process observation.\n\n[![Build Status](https://travis-ci.org/eljefedelrodeodeljefe/process-observe.svg?branch=master)](https://travis-ci.org/eljefedelrodeodeljefe/process-observe) [![Build status](https://ci.appveyor.com/api/projects/status/59q34ua3i457k27x?svg=true)](https://ci.appveyor.com/project/eljefederodeodeljefe/process-observe) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](http://standardjs.com/) [![Join the chat at https://gitter.im/eljefedelrodeodeljefe/process-observe](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eljefedelrodeodeljefe/process-observe?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![NPM](https://nodei.co/npm-dl/process-observe.png?months=6&height=2)](https://nodei.co/npm/process-observe/)\n\n## TL;DR\n\n> In some cases you have orphaned process or just want to watch certain processes. To work with them from node you need either handles to them or need to observe them first. This module aids those purposes.\n\n```js\n// inspect your current process (here assuming that you have just spawned\n// a new process), here with async API\nobserve.children(process.pid, (err, result) => {\n\tif (err)\n\t\tconsole.log(err)\n\n\tconsole.log(result)\n\t// -> {pids: [5841], count: 1}\n})\n```\n## Implementation Status<a name=\"status\"></a>\n| Method | implemented |\n| --- | --- |\n| .info(pid [, cb]) | **yes** |\n| .children(pid [, cb]) | **yes** |\n\n\n\n### Overview\n\n### Technical Overview\n\n**Rquirements:**\n* Node 4.0.0+\n\n## Platform\n\nThis module is currently tested on:\n\n| Platform | 0.12 | 3.0 | 4.0 | 5.0 | 6.0 |\n| --- | --- | --- | --- | ---| ---|---|\n| Mac OS X | - | - | **yes** | **yes**| **yes** |\n| BSDs | - | - | - | - | - |\n| Linux | - | - | **yes** | **yes**  | **yes** |\n| Windows | - | - | - | - | - |\n\n## Roadmap\n\nPlease see [list of the implemented methods](#status) for now.\n\n\n## API\n<a name=\"ProcessObserve\"></a>\n\n## ProcessObserve\n**Kind**: global class  \n\n* [ProcessObserve](#ProcessObserve)\n    * [.children(pid, [cb])](#ProcessObserve+children) ⇒ <code>Object</code>\n    * [.info(pid, [cb])](#ProcessObserve+info) ⇒ <code>Object</code>\n\n<a name=\"ProcessObserve+children\"></a>\n\n### processObserve.children(pid, [cb]) ⇒ <code>Object</code>\nQuery a process associated with a specified `pid` for the number of and a\nlist of pids of childnre it has.\n\n**Kind**: instance method of <code>[ProcessObserve](#ProcessObserve)</code>  \n**Returns**: <code>Object</code> - returns an object with [0] the list of pids and [1] their count  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| pid | <code>Number</code> | `pid` to query |\n| [cb] | <code>function</code> | optional callback. If provided sync function will be called on next tick. |\n\n**Example**  \n```js\nconst observe = require('process-observer')\n// query the OS pid for all its children (100+), here with sync API\nobserve.children(0)\n// -> {pids: [1, 2, 50, ...], count: 121}\n\n// inspect your current process (here assuming that you have just spawned\n// a new process), here with async API\nobserve.children(process.pid, (err, result) => {\n  if (err)\n    console.log(err)\n  console.log(result)\n  // -> {pids: [5841], count: 1}\n})\n```\n<a name=\"ProcessObserve+info\"></a>\n\n### processObserve.info(pid, [cb]) ⇒ <code>Object</code>\nQuery a process associated with a specified `pid` a wider process specific data\nsuch as a its parent, children, hardware usage etc. (see list TBD)\n\n**Kind**: instance method of <code>[ProcessObserve](#ProcessObserve)</code>  \n**Returns**: <code>Object</code> - returns an object with process specific data  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| pid | <code>Number</code> | `pid` to query |\n| [cb] | <code>function</code> | optional callback. If provided sync function will be called on next tick. |\n\n**Example**  \n```js\nconst observe = require('process-observer')\nconst currenProcess = process.pid\n// sync\nobserve.info(currenProcess)\n// -> { pid: 3804, parent_pid: 3803, children_count: 1, children: [ 3805 ]}\n\n// async\nobserve.info(currenProcess, (err, result) => {\n  if (err)\n    console.log(err)\n  console.log(result)\n   // -> {pid: 3804, parent_pid: 3803, children_count: 1, children: [ 3805 ]}\n})\n```\n## License\n\nMIT\n","created":"2016-05-22T17:42:47.344Z","modified":"2016-05-23T20:07:39.083Z","lastPublisher":{"name":"eljefederodeodeljefe","email":"devraindance@gmail.com"},"owners":[{"name":"eljefederodeodeljefe","email":"devraindance@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"process-observe","_nodeVersion":"6.1.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/process-observe-0.3.3.tgz_1464034056718_0.811187437735498"},"_npmUser":{"name":"eljefederodeodeljefe","email":"devraindance@gmail.com"},"_npmVersion":"3.8.6","_rev":"1-925cc2cff1a2cffb299c0caf3b6344ad","_shasum":"849b23903ead4b63101bdde6f98edf62c2ebc016","author":{"name":"Robert Jefe Lindstaedt","email":"robert.lindstaedt@gmail.com"},"bugs":{"url":"https://github.com/eljefedelrodeodeljefe/process-observe/issues"},"directories":{},"dist-tags":{"latest":"0.3.3"},"dist":{"shasum":"849b23903ead4b63101bdde6f98edf62c2ebc016","tarball":"http://registry.npmjs.org/process-observe/-/process-observe-0.3.3.tgz"},"maintainers":[{"name":"eljefederodeodeljefe","email":"devraindance@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-05-23T20:07:39.083Z","created":"2016-05-22T17:42:47.344Z","0.1.3-beta.2":"2016-05-22T17:42:47.344Z","0.1.4-beta.3":"2016-05-22T20:50:25.419Z","0.2.0-beta.4":"2016-05-23T13:31:10.663Z","0.2.1-beta.5":"2016-05-23T13:42:44.577Z","0.2.2-beta.5":"2016-05-23T13:46:06.316Z","0.3.0":"2016-05-23T18:00:37.251Z","0.3.1":"2016-05-23T18:14:55.966Z","0.3.2":"2016-05-23T18:50:24.393Z","0.3.3":"2016-05-23T20:07:39.083Z"}}}