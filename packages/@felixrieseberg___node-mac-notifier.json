{"name":"@felixrieseberg/node-mac-notifier","version":"0.0.14","description":"Create native OS X notifications from Node.js","main":"index.js","scripts":{"install":"node-gyp rebuild","build":"node-gyp build","test":"mocha"},"repository":"https://github.com/CharlieHess/node-mac-notifier","os":["darwin"],"keywords":["notifier","notifications","electron"],"devDependencies":{"mocha":"^2.2.5","nan":"^2.3.5","node-gyp":"^3.4.0"},"dependencies":{"bindings":"^1.2.1","event-target-shim":"^1.1.1","node-uuid":"^1.4.7"},"gitHead":"f04e1a4493caef29fde42a41898182e87f151bba","gypfile":true,"homepage":"https://github.com/CharlieHess/node-mac-notifier#readme","versions":[{"number":"0.0.11","date":"2016-08-24T23:34:17.671Z"},{"number":"0.0.12","date":"2016-08-25T18:35:23.323Z"},{"number":"0.0.13","date":"2016-08-25T20:08:18.174Z"},{"number":"0.0.14","date":"2016-08-26T01:46:00.406Z"}],"readme":"# node-mac-notifier\nA native node module that lets you create OS X notifications from Node.js, without spawning a separate process.\nThis is useful for desktop applications built with [Electron](http://electron.atom.io/) (or something similar), as it adheres to the HTML5 [`Notification` API](https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification). Unlike the Electron [notification](https://github.com/electron/electron/blob/master/docs/tutorial/desktop-environment-integration.md#notifications-windows-linux-os-x) it also supports replies:\n\n![](https://s3.amazonaws.com/f.cl.ly/items/2Q3E1S0o440S043y2k1K/Image%202016-04-14%20at%202.37.47%20PM.png?v=d0388e46)\n\n## Installation\n`npm install node-mac-notifier`\n\n#### Run Tests\n`npm test`\n\n## Usage\nEnsure that this module is called from a renderer process; it will have no effect in the main process. Works with Electron >=0.37.7.\n\n```js\nNotification = require('node-mac-notifier');\nnoti = new Notification('Hello from OS X', {body: 'It Works!'});\nnoti.addEventListener('click', () => console.log('Got a click.'));\n```\n\nIn addition to the standard `click` event, these notifications also support a (non-standard) `reply` event. To enable the reply button, set `canReply` in the options argument. The user's response is included as a parameter on the event:\n```js\nnoti = new Notification('Wow, replies!', {canReply: true});\nnoti.addEventListener('reply', ({response}) => console.log(`User entered: ${response}`));\n```\n\n## API\n### `new Notification(title, options)`\n##### `title` (string) (*required*)\nThe title of the notification.\n##### `options` (Object)\nAdditional parameters to the notification.\n##### `options.id` (string)\nA string identifying the notification. Maps to `NSUserNotification.identifier`. A notification with an `id` matching a previously delivered notification will not be shown. If not provided, defaults to a RFC4122 v4 string.\n##### `options.body` (string)\nThe body text. Maps to `NSUserNotification.informativeText`.\n##### `options.subtitle` (string)\nThe subtitle text. Maps to `NSUserNotification.subtitle`.\n##### `options.icon` (string)\nA URL with image content. Maps to `NSUserNotification.contentImage`. Should be an absolute URL.\n##### `options.soundName` (string)\nThe name of a sound file to play once the notification is delivered. Maps to `NSUserNotification.soundName`. Set to `default` to use `NSUserNotificationDefaultSoundName`, or leave `undefined` for a silent notification.\n##### `options.canReply` (bool)\nIf true, this notification will have a reply action button, and can emit the `reply` event. Maps to `NSUserNotification.hasReplyButton`.\n##### `options.bundleId` (string)\nSet this to override the `NSBundle.bundleIdentifier` used for the notification. This is a brute force way for your notifications to take on the appropriate app icon.\n\n### `close()`\nDismisses the notification immediately.\n","created":"2016-08-24T23:34:17.671Z","modified":"2016-08-26T01:46:00.406Z","lastPublisher":{"name":"felixrieseberg","email":"felix@felixrieseberg.com"},"owners":[{"name":"felixrieseberg","email":"felix@felixrieseberg.com"}],"other":{"_attachments":{},"_from":".","_id":"@felixrieseberg/node-mac-notifier","_nodeVersion":"6.3.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/node-mac-notifier-0.0.14.tgz_1472175960145_0.37178493617102504"},"_npmUser":{"name":"felixrieseberg","email":"felix@felixrieseberg.com"},"_npmVersion":"3.10.3","_rev":"1-f4fcdabfbe2b2cd3b2d1b1439954f77a","_shasum":"db7faacbf984265b4b23877f54d7fad61430bef0","author":{"name":"Charlie Hess"},"bugs":{"url":"https://github.com/CharlieHess/node-mac-notifier/issues"},"directories":{},"dist-tags":{"latest":"0.0.14"},"dist":{"shasum":"db7faacbf984265b4b23877f54d7fad61430bef0","tarball":"http://registry.npmjs.org/@felixrieseberg/node-mac-notifier/-/node-mac-notifier-0.0.14.tgz"},"maintainers":[{"name":"felixrieseberg","email":"felix@felixrieseberg.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-26T01:46:00.406Z","created":"2016-08-24T23:34:17.671Z","0.0.11":"2016-08-24T23:34:17.671Z","0.0.12":"2016-08-25T18:35:23.323Z","0.0.13":"2016-08-25T20:08:18.174Z","0.0.14":"2016-08-26T01:46:00.406Z"}}}