{"name":"node-expat","version":"2.3.16","main":"./lib/node-expat","description":"NodeJS binding for fast XML parsing.","keywords":["xml","sax","expat","libexpat","parse","parsing"],"scripts":{"preversion":"npm test","lint":"standard","unit":"vows --spec ./test/**/*.js","test":"npm run unit && npm run lint","benchmark":"node ./benchmark.js","install":"node-gyp rebuild"},"dependencies":{"bindings":"^1.2.1","nan":"^2.3.5"},"devDependencies":{"benchmark":"^2.1.0","debug":"^2.2.0","iconv":"^2.2.0","libxmljs":"^0.18.0","ltx":"^2.3.0","node-xml":"^1.0.2","sax":"^1.2.1","standard":"^7.1.2","vows":"^0.8.1"},"repository":"https://github.com/astro/node-expat","homepage":"http://github.com/astro/node-expat","licenses":[{"type":"MIT"}],"license":"MIT","gypfile":true,"gitHead":"f8cdea15e7779979f6172cc1c3272de9b32c0262","versions":[{"number":"0.0.4","date":"2011-03-31T08:05:30.382Z"},{"number":"0.0.5","date":"2011-03-31T08:05:30.382Z"},{"number":"0.0.6","date":"2011-03-31T08:05:30.382Z"},{"number":"1.0.0","date":"2011-03-31T08:05:30.382Z"},{"number":"1.0.1","date":"2011-03-31T08:05:30.382Z"},{"number":"1.1.0","date":"2011-03-31T08:05:30.382Z"},{"number":"1.1.1","date":"2011-03-31T08:05:30.382Z"},{"number":"1.2.0","date":"2011-03-31T08:05:30.382Z"},{"number":"1.3.0","date":"2011-04-08T19:26:39.807Z"},{"number":"1.3.1","date":"2011-06-09T22:49:48.908Z"},{"number":"1.3.2","date":"2011-06-14T00:35:43.693Z"},{"number":"1.4.0","date":"2011-08-16T12:14:48.749Z"},{"number":"1.4.1","date":"2011-11-17T23:56:21.287Z"},{"number":"1.4.2","date":"2012-01-23T18:02:53.625Z"},{"number":"1.4.3","date":"2012-01-23T20:11:58.341Z"},{"number":"1.4.4","date":"2012-01-24T15:49:43.161Z"},{"number":"1.4.5","date":"2012-04-03T22:12:21.725Z"},{"number":"1.5.0","date":"2012-04-09T22:57:22.368Z"},{"number":"1.6.0","date":"2012-06-22T01:55:22.372Z"},{"number":"1.6.1","date":"2012-08-13T21:05:00.158Z"},{"number":"2.0.0","date":"2012-10-09T00:11:34.294Z"},{"number":"2.1.0","date":"2013-12-06T09:12:19.387Z"},{"number":"2.1.1","date":"2013-12-06T16:50:12.198Z"},{"number":"2.1.2","date":"2013-12-08T13:38:53.713Z"},{"number":"2.1.3","date":"2013-12-08T14:06:12.923Z"},{"number":"2.1.4","date":"2013-12-19T09:22:39.089Z"},{"number":"2.2.0","date":"2014-05-05T11:34:41.139Z"},{"number":"2.3.0","date":"2014-06-15T17:58:29.785Z"},{"number":"2.3.1","date":"2014-08-13T08:11:06.084Z"},{"number":"2.3.2","date":"2014-10-26T21:00:09.597Z"},{"number":"2.3.3","date":"2014-11-24T13:55:06.241Z"},{"number":"2.3.4","date":"2014-12-18T22:26:03.963Z"},{"number":"2.3.5","date":"2015-02-02T09:47:55.625Z"},{"number":"2.3.6","date":"2015-02-16T08:34:03.964Z"},{"number":"2.3.7","date":"2015-03-06T14:24:18.851Z"},{"number":"2.3.8","date":"2015-05-13T18:38:46.328Z"},{"number":"2.3.9","date":"2015-08-28T22:55:00.973Z"},{"number":"2.3.10","date":"2015-09-09T22:40:26.032Z"},{"number":"2.3.11","date":"2015-10-26T08:46:57.107Z"},{"number":"2.3.12","date":"2015-12-09T18:57:53.639Z"},{"number":"2.3.13","date":"2016-01-31T14:43:56.460Z"},{"number":"2.3.14","date":"2016-06-27T20:14:43.570Z"},{"number":"2.3.15","date":"2016-06-30T17:34:07.902Z"},{"number":"2.3.16","date":"2017-07-05T20:49:05.794Z"}],"readme":"# node-expat\n\n[![build status](https://img.shields.io/travis/astro/node-expat/master.svg?style=flat-square)](https://travis-ci.org/astro/node-expat/branches)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](http://standardjs.com/)\n\n## Motivation\n\nYou use [Node.js](https://nodejs.org) for speed? You process XML streams? Then you want the fastest XML parser: [libexpat](http://expat.sourceforge.net/)!\n\n## Install\n\n```\nnpm install node-expat\n```\n\n## Usage\n\nImportant events emitted by a parser:\n\n```javascript\n(function () {\n  \"use strict\";\n\n  var expat = require('node-expat')\n  var parser = new expat.Parser('UTF-8')\n\n  parser.on('startElement', function (name, attrs) {\n    console.log(name, attrs)\n  })\n\n  parser.on('endElement', function (name) {\n    console.log(name)\n  })\n\n  parser.on('text', function (text) {\n    console.log(text)\n  })\n\n  parser.on('error', function (error) {\n    console.error(error)\n  })\n\n  parser.write('<html><head><title>Hello World</title></head><body><p>Foobar</p></body></html>')\n\n}())\n\n```\n\n## API\n\n* `#on('startElement' function (name, attrs) {})`\n* `#on('endElement' function (name) {})`\n* `#on('text' function (text) {})`\n* `#on('processingInstruction', function (target, data) {})`\n* `#on('comment', function (s) {})`\n* `#on('xmlDecl', function (version, encoding, standalone) {})`\n* `#on('startCdata', function () {})`\n* `#on('endCdata', function () {})`\n* `#on('entityDecl', function (entityName, isParameterEntity, value, base, systemId, publicId, notationName) {})`\n* `#on('error', function (e) {})`\n* `#stop()` pauses\n* `#resume()` resumes\n\n## Error handling\n\nWe don't emit an error event because libexpat doesn't use a callback\neither. Instead, check that `parse()` returns `true`. A descriptive\nstring can be obtained via `getError()` to provide user feedback.\n\nAlternatively, use the Parser like a node Stream. `write()` will emit\nerror events.\n\n## Namespace handling\n\nA word about special parsing of *xmlns:* this is not necessary in a\nbare SAX parser like this, given that the DOM replacement you are\nusing (if any) is not relevant to the parser.\n\n## Benchmark\n\n`npm run benchmark`\n\n| module                                                                                | ops/sec | native | XML compliant | stream         |\n|---------------------------------------------------------------------------------------|--------:|:------:|:-------------:|:--------------:|\n| [sax-js](https://github.com/isaacs/sax-js)                                            |  99,412 | ☐      | ☑             | ☑              |\n| [node-xml](https://github.com/dylang/node-xml)                                        | 130,631 | ☐      | ☑             | ☑              |\n| [libxmljs](https://github.com/polotek/libxmljs)                                       | 276,136 | ☑      | ☑             | ☐              |\n| **node-expat**                                                                        | 322,769 | ☑      | ☑             | ☑              |\n\nHigher is better.\n\n## Testing\n\n```\nnpm install -g standard\nnpm test\n```\n\n## Windows\n\nIf you fail to install node-expat as a dependency of node-xmpp, please update node-xmpp as it doesn't use node-expat anymore.\n\nDependencies for `node-gyp` https://github.com/TooTallNate/node-gyp#installation\n\nSee https://github.com/astro/node-expat/issues/78 if you are getting errors about not finding `nan.h`.\n\n### expat.vcproj\n\n```\nVCBUILD : error : project file 'node-expat\\build\\deps\\libexpat\\expat.vcproj' was not found or not a valid proj\nect file. [C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\node-expat\\build\\bin\nding.sln]\n```\n\nInstall [Visual Studio C++ 2012](http://go.microsoft.com/?linkid=9816758) and run npm with the [`--msvs_version=2012` flag](http://stackoverflow.com/a/16854333/937891).\n","starsCount":11,"created":"2011-03-31T08:05:30.382Z","modified":"2017-07-05T20:49:05.794Z","lastPublisher":{"name":"astro","email":"astro@spaceboyz.net"},"owners":[{"name":"astro","email":"astro@spaceboyz.net"},{"name":"lloydwatkin","email":"lloyd@evilprofessor.co.uk"},{"name":"chris-rock","email":"chris@lollyrock.com"},{"name":"sonny","email":"sonny@fastmail.net"}],"other":{"_attachments":{},"_id":"node-expat","_nodeVersion":"8.1.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-expat-2.3.16.tgz_1499287744109_0.4599996404722333"},"_npmUser":{"name":"astro","email":"astro@spaceboyz.net"},"_npmVersion":"5.0.3","_rev":"3-78df7ebf31158d4080b96ba7b2d0e6d5","author":{"name":"Astro","email":"astro@spaceboyz.net","url":"http://spaceboyz.net/~astro/"},"bugs":{"url":"https://github.com/astro/node-expat/issues"},"contributors":[{"name":"Stephan Maka"},{"name":"Derek Hammer"},{"name":"Iein Valdez"},{"name":"Peter Körner"},{"name":"Camilo Aguilar"},{"name":"Michael Weibel"},{"name":"Alexey Zhuchkov"},{"name":"Satyam Shekhar"},{"name":"Dhruv Matani"},{"name":"Andreas Botsikas"},{"name":"Tom Hughes-Croucher"},{"name":"Nathan Rajlich"},{"name":"Julien Genestoux"},{"name":"Sonny Piers"},{"name":"Lloyd Watkin"},{"name":"AJ ONeal"},{"name":"Rod Vagg"},{"name":"Christoph Hartmann"},{"name":"Corbin Uselton"},{"name":"Julian Duque"},{"name":"Lovell Fuller"},{"name":"Antonio Bustos"}],"directories":{},"dist-tags":{"latest":"2.3.16"},"dist":{"integrity":"sha512-e3HyQI0lk5CXyYQ4RsDYGiWdY5LJxNMlNCzo4/gwqY8lhYIeTf5VwGirGDa1EPrcZROmOR37wHuFVnoHmOWnOw==","shasum":"adb22174e1aaa5305996bd5b1aa6f2c8d5c0f239","tarball":"https://registry.npmjs.org/node-expat/-/node-expat-2.3.16.tgz"},"maintainers":[{"name":"astro","email":"astro@spaceboyz.net"},{"name":"lloydwatkin","email":"lloyd@evilprofessor.co.uk"},{"name":"chris-rock","email":"chris@lollyrock.com"},{"name":"sonny","email":"sonny@fastmail.net"}],"readmeFilename":"README.md","time":{"modified":"2017-07-05T20:49:05.794Z","created":"2011-03-31T08:05:30.382Z","0.0.4":"2011-03-31T08:05:30.382Z","0.0.5":"2011-03-31T08:05:30.382Z","0.0.6":"2011-03-31T08:05:30.382Z","1.0.0":"2011-03-31T08:05:30.382Z","1.0.1":"2011-03-31T08:05:30.382Z","1.1.0":"2011-03-31T08:05:30.382Z","1.1.1":"2011-03-31T08:05:30.382Z","1.2.0":"2011-03-31T08:05:30.382Z","1.3.0":"2011-04-08T19:26:39.807Z","1.3.1":"2011-06-09T22:49:48.908Z","1.3.2":"2011-06-14T00:35:43.693Z","1.4.0":"2011-08-16T12:14:48.749Z","1.4.1":"2011-11-17T23:56:21.287Z","1.4.2":"2012-01-23T18:02:53.625Z","1.4.3":"2012-01-23T20:11:58.341Z","1.4.4":"2012-01-24T15:49:43.161Z","1.4.5":"2012-04-03T22:12:21.725Z","1.5.0":"2012-04-09T22:57:22.368Z","1.6.0":"2012-06-22T01:55:22.372Z","1.6.1":"2012-08-13T21:05:00.158Z","2.0.0":"2012-10-09T00:11:34.294Z","2.1.0":"2013-12-06T09:12:19.387Z","2.1.1":"2013-12-06T16:50:12.198Z","2.1.2":"2013-12-08T13:38:53.713Z","2.1.3":"2013-12-08T14:06:12.923Z","2.1.4":"2013-12-19T09:22:39.089Z","2.2.0":"2014-05-05T11:34:41.139Z","2.3.0":"2014-06-15T17:58:29.785Z","2.3.1":"2014-08-13T08:11:06.084Z","2.3.2":"2014-10-26T21:00:09.597Z","2.3.3":"2014-11-24T13:55:06.241Z","2.3.4":"2014-12-18T22:26:03.963Z","2.3.5":"2015-02-02T09:47:55.625Z","2.3.6":"2015-02-16T08:34:03.964Z","2.3.7":"2015-03-06T14:24:18.851Z","2.3.8":"2015-05-13T18:38:46.328Z","2.3.9":"2015-08-28T22:55:00.973Z","2.3.10":"2015-09-09T22:40:26.032Z","2.3.11":"2015-10-26T08:46:57.107Z","2.3.12":"2015-12-09T18:57:53.639Z","2.3.13":"2016-01-31T14:43:56.460Z","2.3.14":"2016-06-27T20:14:43.570Z","2.3.15":"2016-06-30T17:34:07.902Z","2.3.16":"2017-07-05T20:49:05.794Z"},"users":{"astro":true,"fgribreau":true,"louist":true,"matthiasg":true,"shanewholloway":true,"nguru":true,"lensi":true,"pfremm":true,"xxsnake28":true,"likebc":true,"tsxuehu":true}}}