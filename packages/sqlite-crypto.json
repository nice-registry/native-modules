{"name":"sqlite-crypto","version":"1.1.0","description":"Handles SQLite databases that need to be encrypted","main":"sqlite_crypto.js","scripts":{},"repository":{"type":"git","url":"git+https://ckelsey@bitbucket.org/ckelsey/sqlite-crypto.git"},"keywords":["Node","SQLite","Encryption"],"license":"ISC","homepage":"https://bitbucket.org/ckelsey/sqlite-crypto#readme","dependencies":{"q":"^*","node-gyp":"^*","node-pre-gyp":"^*","sqlite3":"^*"},"gitHead":"26eade7def259c283b4091df6f92f28bb0d52e3a","versions":[{"number":"1.0.1","date":"2015-12-29T22:38:15.077Z"},{"number":"1.0.3","date":"2015-12-30T20:38:13.688Z"},{"number":"1.0.4","date":"2015-12-30T20:42:32.299Z"},{"number":"1.0.5","date":"2015-12-30T20:46:05.214Z"},{"number":"1.0.6","date":"2015-12-31T00:07:59.866Z"},{"number":"1.0.7","date":"2015-12-31T00:12:31.107Z"},{"number":"1.0.8","date":"2016-01-04T15:18:02.868Z"},{"number":"1.0.9","date":"2016-01-04T17:17:46.627Z"},{"number":"1.0.10","date":"2016-01-04T19:08:06.583Z"},{"number":"1.0.11","date":"2016-01-04T19:11:10.723Z"},{"number":"1.0.12","date":"2016-01-04T19:13:43.703Z"},{"number":"1.0.13","date":"2016-01-04T19:18:42.457Z"},{"number":"1.0.14","date":"2016-01-04T19:23:01.405Z"},{"number":"1.0.15","date":"2016-01-06T16:30:28.658Z"},{"number":"1.1.0","date":"2016-01-06T17:08:38.712Z"}],"readme":"## SQLite Crypto\n\nUsing `node-sqlite3`, handles SQLite databases that need to be encrypted. It comes with SQLite so there's no need to install an external library.\n\n# Install\n`npm install sqlite-crypto`\n\n# Usage\n```javascript\nvar crypts = require('sqlite-crypto');\n\n// Initialize it.\nvar db = crypts.init({\n    file: 'Path to your .db file relative to root', // Default '/db.db'\n    password: 'supersecretpassword', // Default '6yhbVFT6AlSkDjFhG'\n    algorithm: 'aes-256-ctr',\n    encrypt_offset: 700, //Default 700. The time in milliseconds to wait before re-encrypting the database file. Helps avoid unnecessary decrypt/encrypt in rapid succession\n});\n\n//Run a query and get a promises. Promise returns errors, response.\ndb.run({\n  sql: \"SOME cray SQLs\",\n  method: \"sqlite3 methods(like all, get, etc). Default is run\"\n}).then(function(error, response){\n  console.log(errors);\n  console.log(respnse);  \n});\n```\n\n# More information\nSee the node-sqlite3 [API documentation](https://github.com/mapbox/node-sqlite3/wiki) in the wiki.\nWritten by [Mediafly Inc](https://www.mediafly.com/).\n","created":"2015-12-29T22:38:15.077Z","modified":"2016-01-06T17:08:38.712Z","lastPublisher":{"name":"ckelsey","email":"chris@ckcreates.com"},"owners":[{"name":"ckelsey","email":"chris@ckcreates.com"},{"name":"mediafly_labs","email":"mediaflydevelopers@mediafly.com"}],"other":{"_attachments":{},"_from":".","_id":"sqlite-crypto","_nodeVersion":"5.3.0","_npmUser":{"name":"ckelsey","email":"chris@ckcreates.com"},"_npmVersion":"3.3.12","_rev":"1-c31f79a692de3876bdb5c9ddc3ab67f2","_shasum":"296e617f72e9cb9b11bf71f09ae2d8ac2a977681","author":{"name":"Mediafly Inc., Chris Kelsey","email":"ckelsey@mediafly.com"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"296e617f72e9cb9b11bf71f09ae2d8ac2a977681","tarball":"http://registry.npmjs.org/sqlite-crypto/-/sqlite-crypto-1.1.0.tgz"},"maintainers":[{"name":"ckelsey","email":"chris@ckcreates.com"},{"name":"mediafly_labs","email":"mediaflydevelopers@mediafly.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-06T17:08:38.712Z","created":"2015-12-29T22:38:15.077Z","1.0.1":"2015-12-29T22:38:15.077Z","1.0.3":"2015-12-30T20:38:13.688Z","1.0.4":"2015-12-30T20:42:32.299Z","1.0.5":"2015-12-30T20:46:05.214Z","1.0.6":"2015-12-31T00:07:59.866Z","1.0.7":"2015-12-31T00:12:31.107Z","1.0.8":"2016-01-04T15:18:02.868Z","1.0.9":"2016-01-04T17:17:46.627Z","1.0.10":"2016-01-04T19:08:06.583Z","1.0.11":"2016-01-04T19:11:10.723Z","1.0.12":"2016-01-04T19:13:43.703Z","1.0.13":"2016-01-04T19:18:42.457Z","1.0.14":"2016-01-04T19:23:01.405Z","1.0.15":"2016-01-06T16:30:28.658Z","1.1.0":"2016-01-06T17:08:38.712Z"}}}