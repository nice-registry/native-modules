{"name":"winctl","version":"1.0.2","description":"> Windows window manipulation for node.js","main":"index.js","scripts":{"configure":"node-gyp configure","build":"node-gyp build","install":"node-gyp rebuild"},"license":"ISC","devDependencies":{"nan":"^2.2.0","node-gyp":"^3.2.1"},"dependencies":{"bindings":"^1.2.1"},"os":["win32"],"gypfile":true,"repository":"https://github.com/thraaawn/winctl","keywords":["windows","window","autohotkey","desktop"],"homepage":"https://github.com/thraaawn/winctl","gitHead":"8d960be224b8e0c5aa8ad7c09be04b39c68b4291","versions":[{"number":"1.0.0","date":"2016-02-27T14:28:59.601Z"},{"number":"1.0.1","date":"2016-03-01T19:38:09.671Z"},{"number":"1.0.2","date":"2016-03-10T19:52:17.794Z"}],"readme":"> Windows window manipulation for node.js\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/5nihgth8fmlc8xpf?svg=true)](https://ci.appveyor.com/project/thraaawn/winctl)\r\n\r\nwinctl wraps a few functions of the windows api to allow iterating over currently opened windows and performing a few limited operations on them. This is not a production ready module! There is no real documentation either yet. Sorry for that.\r\n\r\nThe example has to suffice for now.\r\n\r\n## Contents\r\n\r\n- [Requirements](#requirements)\r\n- [Building](#building)\r\n- [Examples](#examples)\r\n- [License](#license)\r\n\r\n## Requirements\r\n\r\nThis module is currently only compatible with Windows. Please ensure you have the [required dependencies](https://github.com/nodejs/node-gyp#installation) as well as Visual Studio installed.\r\n\r\n## Building\r\n\r\nnode-gyp is required to build xinput.js.\r\n\r\nInstall node-gyp using npm:\r\n\r\n```\r\nnpm install -g node-gyp\r\n```\r\n\r\nThen configure and build:\r\n\r\n```\r\nnode-gyp configure\r\nnode-gyp build\r\n```\r\n\r\n## Example\r\n\r\n```JavaScript\r\nvar winctl = require('../');\r\n\r\nvar win = winctl.GetActiveWindow();\r\n\r\n// Output some information about the currently active window\r\nconsole.log(\"Active Window Hwnd:\", win.getHwnd());\r\nconsole.log(\"Active Window Title:\", win.getTitle());\r\nconsole.log(\"Dimensions:\", win.dimensions());\r\n/* ->\r\nActive Window Hwnd: 26282110\r\nActive Window Title: Bash cpp-modules/winctl\r\nDimensions: { left: 708, top: 112, right: 2025, bottom: 1132 }\r\n*/\r\n\r\n// Manipulate the currently active window a bit\r\n// Move active window to 0,0 and resize it to 800x600\r\nwin.move(0, 0, 800, 600);\r\n\r\n// Move active window to the right by 30px and increase its width by 60px\r\nwin.moveRelative(30, 0, 60, 0);\r\n\r\n// Minimize the active window\r\nwin.showWindow(winctl.WindowStates.MINIMIZE);\r\n\r\nconsole.log();\r\n\r\n// Find a windows \"File Explorer\" window by ClassName\r\nconsole.log(\"Title of window with class 'CabinetWClass':\", winctl.GetWindowByClassName(\"CabinetWClass\").getTitle());\r\n\r\n// Find a window by exact title\r\nconsole.log(\"HWND of window with exact title 'File Explorer':\", winctl.GetWindowByTitleExact(\"File Explorer\").getHwnd());\r\n\r\n// Find first window containing the string 'alc' and bring it to the foreground\r\nwinctl.FindByTitle(\"alc\").then(window => {\r\n\tconsole.log(\"Title of window with title 'alc':\", window.getTitle());\r\n\t// --> Title of window with title 'alc': Calculator\r\n\r\n\t// Activate the window\r\n\twindow.setForegroundWindow();\r\n});\r\n\r\n// Iterate over all windows with a custom filter -> show all visible windows\r\nwinctl.FindWindows(win => win.isVisible() && win.getTitle()).then(windows => {\r\n\tconsole.log(\"Visible windows:\");\r\n\twindows.sort((a,b) => a.getTitle().localeCompare(b.getTitle())).forEach(window => console.log(\" - %s [pid=%d, hwnd=%d, parent=%d]\", window.getTitle(), window.getPid(), window.getHwnd(), window.getParent()));\r\n});\r\n/* -->\r\nVisible windows:\r\n - Bash cpp-modules/winctl [pid=27196, hwnd=26282110, parent=NaN]\r\n - Bash cpp-modules/winctl [pid=30696, hwnd=10357510, parent=NaN]\r\n - Calculator [pid=6948, hwnd=5311194, parent=NaN]\r\n - File Explorer [pid=4860, hwnd=5115324, parent=NaN]\r\n - src [pid=4860, hwnd=219155192, parent=NaN]\r\n*/\r\n\r\n\r\n// Log when a new window opens or the active window changes\r\nwinctl.Events.addListener(\"active-window\", function(now, prev) {\r\n\tconsole.log(\"Changed active window to: %s [prev=%s]\", now.getTitle(), prev.getTitle());\r\n});\r\n\r\nwinctl.Events.addListener(\"open-window\", function(win) {\r\n\tconsole.log(\"Opened new window: %s [%d]\", win.getTitle(), win.getHwnd());\r\n});\r\n\r\n// Stop listening after 5s\r\nsetTimeout(() => {\r\n\twinctl.Events.removeAllListeners(\"active-window\");\r\n\twinctl.Events.removeAllListeners(\"open-window\");\r\n\tconsole.log(\"---done---\");\r\n}, 5000);\r\n```\r\n\r\n## License\r\n\r\nMIT","starsCount":1,"created":"2016-02-27T14:28:59.601Z","modified":"2017-04-07T04:53:37.458Z","lastPublisher":{"name":"davenonymous","email":"david.hilberath@gmail.com"},"owners":[{"name":"davenonymous","email":"david.hilberath@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"winctl","_nodeVersion":"5.1.0","_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/winctl-1.0.2.tgz_1457639535530_0.21166757168248296"},"_npmUser":{"name":"davenonymous","email":"david.hilberath@gmail.com"},"_npmVersion":"3.3.12","_rev":"2-d26ff16f7bc4a541352a96c3a5187ec9","_shasum":"2f7b8dec5bba381ca7e5febcbfdfa40e3255bc95","author":"","bugs":{"url":"https://github.com/thraaawn/winctl/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"2f7b8dec5bba381ca7e5febcbfdfa40e3255bc95","tarball":"http://registry.npmjs.org/winctl/-/winctl-1.0.2.tgz"},"maintainers":[{"name":"davenonymous","email":"david.hilberath@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-07T04:53:37.458Z","created":"2016-02-27T14:28:59.601Z","1.0.0":"2016-02-27T14:28:59.601Z","1.0.1":"2016-03-01T19:38:09.671Z","1.0.2":"2016-03-10T19:52:17.794Z"},"users":{"evan-king":true}}}