{"name":"blake2js","version":"1.0.0","description":"Node bindings for the Blake2 hashing library","license":"MIT","main":"index.js","gypfile":true,"scripts":{"test":"node ./test/index.js","vtest":"VERBOSE=1 node ./test/index.js","coverage":"istanbul cover ./test/index.js","install":"node-gyp rebuild"},"homepage":"https://github.com/zenekron/blake2js#readme","repository":"https://github.com/zenekron/blake2js","dependencies":{"bindings":"^1.2.1","debug":"^2.2.0","nan":"^2.4.0","readable-stream":"^2.1.4"},"devDependencies":{"benchmark":"^2.1.1","coveralls":"^2.11.11","eslint":"^2.13.1","eslint-config-airbnb":"^9.0.1","eslint-plugin-import":"^1.11.0","eslint-plugin-jsx-a11y":"^1.5.5","eslint-plugin-react":"^5.2.2","faucet":"0.0.1","istanbul":"^0.4.4","microtime":"^2.1.1","node-gyp":"^3.4.0","tap-spec":"^4.1.1","tape":"^4.6.0","tape-catch":"^1.0.6"},"gitHead":"311ab133d7e45cd34c85c4f8f590bf0df46d9d27","versions":[{"number":"1.0.0","date":"2016-07-27T16:53:01.329Z"}],"readme":"# Blake2-JS\n> Straightforward bindings for the [Blake2][] hashing library.\n\n[![License](https://img.shields.io/npm/l/blake2js.svg)][license]\n[![Travis-CI](https://img.shields.io/travis/zenekron/blake2js.svg)][travis]\n[![Coveralls](https://img.shields.io/coveralls/zenekron/blake2js.svg)][coveralls]\n[![npm](https://img.shields.io/npm/v/blake2js.svg)][npm]\n\n[![Package](https://nodei.co/npm/blake2js.png?downloads=true&downloadRank=true&stars=true)][package]\n\n# About Blake2\n> BLAKE2 is a cryptographic hash function faster than MD5, SHA-1, SHA-2, and SHA-3, yet is at least as secure as the latest standard SHA-3. - [official website](blake2)\n\nThis modules relies on the **official C implementation** of the library and requires a _c++11 capable compiler_. It is **compatible with node _0.10.x_ and greater** (I've not tried with earlier versions but there shouldn't be major problems).\n\n## Installation\n```bash\n$ npm install --save-dev blake2js\n```\n\n## Usage\n```javascript\nvar blake2 = require('blake2js'); // or let/const\nimport blake2 from 'blake2js';  // in ES6+ syntax\n```\n\n### Method: `hash`\n`hash(algorithm, data, options, encoding)` [&lt;Buffer&gt;] | [&lt;String&gt;]\n- `algorithm` [&lt;String&gt;]  \n  Algorithm to use, can either be _\"blake2s\"_, _\"blake2sp\"_, _\"blake2b\"_ or _\"blake2bp\"_.\n- `data` [&lt;Object&gt;] | [&lt;Buffer&gt;] | [&lt;String&gt;]  \n  The data can be passed as an object whose _\"raw\"_ property contains a string/Buffer to be hashed and an _\"encoding\"_ property which indicates the encoding of the _raw_ field (ignored if buffer).\n  Otherwise you can directly pass a Buffer or a string (utf-8 encoding is assumed).\n- `options` [&lt;Object&gt;]  \n  Hash options (see below).\n- `encoding`  \n  This determines the output format for the hash; if none is specified a Buffer is returned.\n\n## Method: `createHash`\n`createHash(algorithm, options)` [&lt;Hash&gt;]\n- `algorithm` [&lt;String&gt;]  \n  Blake2 algorithm (see above for valid values).\n- `options` [&lt;Object&gt;]\n  - `outlen` [&lt;Number&gt;]  \n    Output's length in bytes. Must be a positive number smaller or equal to the maximum outbut bytes (32 for _blake2s(p)_ and 64 for _blake2b(p)_).\n  - `key` [&lt;Buffer&gt;] | [&lt;String&gt;]  \n    If specified this will produced a keyed hash using the specified key.\n  - `encoding` [&lt;String&gt;]  \n    This is the **key's encoding**, if not specified _utf-8_ is assumed.\n\n## Class: `Hash`\n`constructor(options)`\n- `options` [&lt;Object&gt;]  \n  Hash options (see above).\n\n`update(data[, encoding])` [&lt;Hash&gt;]\n- `data` [&lt;Buffer&gt;] | [&lt;String&gt;]  \n  Data to update the hash with.\n- `encoding` [&lt;String&gt;]\n  If `data` is a string, the encoding will be used to decode it. If none is specified then _utf-8_ is assumed.\n- returns: the instance itself (useful for **chaining**).\n\n`digest(encoding)` [&lt;Buffer&gt;] | [&lt;String&gt;]  \n- Completes the hash and returns the result. By default returns a Buffer, if an argument is passed it will be used as encoding to stringify it. (`digest(encoding) === digest().toString(encoding)`)\n\nAn important thing is that **Hash instances can be used as transform streams**, exactly as documented on [node's crypto api](https://nodejs.org/api/crypto.html#crypto_class_hash).\n\n\n\n[&lt;Hash&gt;]: #class-hash\n[&lt;Buffer&gt;]: https://nodejs.org/api/buffer.html#buffer_class_buffer\n[&lt;Number&gt;]: https://developer.mozilla.org/en/docs/Web/JavaScript/Data_structures#Number_type\n[&lt;Object&gt;]: https://developer.mozilla.org/en/docs/Web/JavaScript/Data_structures#Objects\n[&lt;String&gt;]: https://developer.mozilla.org/en/docs/Web/JavaScript/Data_structures#String_type\n\n[blake2]: https://blake2.net/\n[travis]: https://travis-ci.org/zenekron/blake2js\n[coveralls]: https://coveralls.io/github/zenekron/blake2js\n[license]: /LICENSE\n[npm]: https://www.npmjs.com/\n[package]: https://www.npmjs.com/package/blake2js\n","created":"2016-07-27T16:53:01.329Z","modified":"2016-07-27T16:53:01.329Z","lastPublisher":{"name":"zenekron","email":"zenekron@gmail.com"},"owners":[{"name":"zenekron","email":"zenekron@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"blake2js","_nodeVersion":"6.3.1","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/blake2js-1.0.0.tgz_1469638378656_0.7073008499573916"},"_npmUser":{"name":"zenekron","email":"zenekron@gmail.com"},"_npmVersion":"3.10.3","_rev":"1-4ef4cd25ebddbef3fb3bb75bd221b6fd","_shasum":"b6890c394ddb9405d06d9a7ad3cf656711dcad89","author":{"name":"zenekron","email":"zenekron@gmail.com","url":"https://zenekron.github.io/"},"bugs":{"url":"https://github.com/zenekron/blake2js/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"b6890c394ddb9405d06d9a7ad3cf656711dcad89","tarball":"http://registry.npmjs.org/blake2js/-/blake2js-1.0.0.tgz"},"maintainers":[{"name":"zenekron","email":"zenekron@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-07-27T16:53:01.329Z","created":"2016-07-27T16:53:01.329Z","1.0.0":"2016-07-27T16:53:01.329Z"}}}