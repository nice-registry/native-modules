{"name":"nodeos-mount","description":"Async mount / umount system devices","main":"./mount","os":["linux","darwin","!win32"],"keywords":["mount","linux","device","async"],"version":"0.3.2","homepage":"https://github.com/NodeOS/nodeos-mount","repository":"https://github.com/NodeOS/nodeos-mount","engines":{"node":">= 4"},"scripts":{"test":"grunt test","install":"node-gyp rebuild"},"license":"MIT","gypfile":true,"dependencies":{"async":"^2.5.0","nan":"^2.6.2"},"devDependencies":{"mocha":"~3.5.0","chai":"~4.1.1","grunt":"~1.0.1","grunt-mocha-test":"~0.13.2","grunt-contrib-watch":"~1.0.0","grunt-node-gyp":"~4.0.0","q":"~1.5.0"},"gitHead":"2693fc9cb8ef2bbdb226e8b4668da9447fa52783","versions":[{"number":"0.1.1","date":"2015-01-04T23:48:41.204Z"},{"number":"0.1.2-0","date":"2015-01-05T01:31:02.398Z"},{"number":"0.1.2","date":"2015-01-05T01:43:26.735Z"},{"number":"0.1.3","date":"2015-01-05T02:01:51.411Z"},{"number":"0.1.4","date":"2015-01-05T02:05:36.174Z"},{"number":"0.1.5","date":"2015-01-05T02:28:39.179Z"},{"number":"0.1.6-0","date":"2015-01-05T10:20:50.759Z"},{"number":"0.1.6-1","date":"2015-01-05T10:40:47.706Z"},{"number":"0.1.6-2","date":"2015-01-05T10:49:29.405Z"},{"number":"0.1.6","date":"2015-01-05T20:02:42.601Z"},{"number":"0.1.7","date":"2015-01-06T21:51:57.912Z"},{"number":"0.1.8","date":"2015-01-06T21:58:48.733Z"},{"number":"0.1.9","date":"2015-01-06T22:23:51.596Z"},{"number":"0.1.10","date":"2015-01-06T22:27:17.954Z"},{"number":"0.1.11","date":"2015-01-06T22:36:55.358Z"},{"number":"0.1.12","date":"2015-01-06T23:12:14.386Z"},{"number":"0.1.13","date":"2015-03-07T19:29:40.317Z"},{"number":"0.1.14","date":"2015-09-21T07:00:46.210Z"},{"number":"0.1.15","date":"2015-09-24T23:12:16.098Z"},{"number":"0.2.0","date":"2016-03-01T13:13:49.153Z"},{"number":"0.3.0","date":"2016-09-04T20:08:38.599Z"},{"number":"0.3.1","date":"2016-09-08T16:02:37.033Z"},{"number":"0.3.2","date":"2017-08-19T09:44:30.508Z"}],"readme":"[![Build Status](https://travis-ci.org/NodeOS/nodeos-mount.svg?branch=master)](https://travis-ci.org/NodeOS/nodeos-mount)\n[![bitHound Score](https://www.bithound.io/NodeOS/nodeos-mount/badges/score.svg)](https://www.bithound.io/NodeOS/nodeos-mount)\n\n# node-mount\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/NodeOS/nodeos-mount.svg)](https://greenkeeper.io/)\n\nMount/umount devices from node.js\n\nReally works on linux, may work on OS X, and will never work on windows.\n\n##Examples\n**Mount Tmpfs:**\n```javascript\nvar mount = require(\"mount\");\nmount.mount('tmpDir', 'tmpfs', function(err) {\n\tif(err){\n    return;\n  }\n\n  // Tmpfs mounted successfully\n});\n```\n\n**Mount DVD:**\n```javascript\nvar mount = require(\"mount\");\nmount.mount('myDir', 'iso9660', {devFile: '/dev/sr0'}, function(err) {\n  if(err){\n    return;\n  }\n\n  //\n});\n```\n\n**Mount ReadOnly+Remount (easy)**\n```javascript\nvar mount = require(\"mount\");\nmount.mount('tmpdir', 'tmpfs', ['remount', 'readonly'], function(err) {\n  if(err){\n    return;\n  }\n\n  //\n});\n```\n\n**Mount ReadOnly+Remount (flags)**\n```javascript\nvar mount = require(\"mount\");\nmount.mount('tmpdir', 'tmpfs', mount.MS_REMOUNT | mount.MS_RDONLY,\nfunction(err) {\n  if(err){\n      return;\n  }\n\n  //\n});\n```\n\n**Umount after successful mount:**\n```javascript\nvar mount = requrie(\"mount\");\nmount.umount('myDir', function(err) {\n  if(err){\n    console.log(\"Umount went wrong: \" + err);\n    return;\n  }\n\n\t//\n});\n```\n\n##Installation\nThis package is not featured in NPM (yet), so you have to add this dependency\nline to your package.json file:\n\n**Part of package.json:**\n```json\n{\n  \"name\" : \"myproject\",\n  \"version\" : \"1.0\",\n  ...\n  ...\n  \"dependencies\" : {\n    \"mount\" : \"git+ssh://git@github.com:hertzg/node-mount.git\"\n  }\n}\n```\n## API\nThis module provides functionality to mount and unmount devices to and from\nspecific targets. Module exports asynchronous and synchronous variants.\n\nMost of the explanations here are from `mount(2)` and `umount(2)`\n\n* http://linux.die.net/man/2/umount\n* http://linux.die.net/man/2/mount\n\n**WARNING: Using synchronous methods may block the process for along time. (ex:\n  Mounting scratched CD/DVD/BD, Network shares.. etc..)**\n\n### mount.mount(source, target, fsType, [options], [dataStr], callback)\n\nAttaches the file system specified by `source` (which is often a device name,\nbut can also be a directory name or a dummy) to the directory specified by\n`target`.\n\n**Appropriate privilege is required to mount file systems.**\n\n* `target` - `{String}` - Directory to mount the device to.\n* `fsType` - `{String}` - Filesystem identificator (one of /proc/filesystems).\n* `options` - `{Array}|{Number}` - Number describing mount flags or an Array\n\tcontaining String options described below:\n  - `bind` - Perform a bind mount, making a file or a directory subtree visible\n\t\tat another point within a file system. Bind mounts may cross file system\n\t\tboundaries and span chroot(2) jails. The `fstype` and `dataStr` arguments\n\t\tare ignored.\n  - `readonly` - Mount file system read-only.\n  - `remount` - Remount an existing mount. This allows you to change the\n\t\t`options` and `dataStr` of an existing mount without having to unmount and\n\t\tremount the file system. `target` should be the same value specified in the\n\t\tinitial `mount()` call; `source` and `fsType` are ignored.\n  - `noexec` - Do not allow programs to be executed from this file system.\n* `dataStr` - The `data` argument is interpreted by the different file systems.\n\tTypically it is a string of comma-separated options or an options bag\n\tunderstood by this file system. `devFile` option can be used to define the\n\tDevice-File being mounted (located in /dev).\n* `callback` - Function called after the mount operation finishes. Receives only\n\tone argument `err`.\n  * `err` - Is `null` if mount succeeded or `Error` object similar to ones\n\t\tgenerated by `fs` module in case of failure.\n\nValues for the `fstype` argument supported by the kernel are listed in\n`/proc/filesystems` (e.g., \"minix\", \"ext2\", \"ext3\", \"jfs\", \"xfs\", \"reiserfs\",\n\"msdos\", \"proc\", \"nfs\", \"iso9660\"). It can be `auto`, too.\n\n\n### mount.umount(target, callback)\nRemoves the attachment of the (topmost) file system mounted on `target`.\n\n**Appropriate privilege is required to unmount file systems.**\n\n* `target` - `{String}` - Directory to unmount.\n* `callback` - Function called after the mount operation finishes. Receives only\n\tone argument `err`.\n    * `err` -  `null` if umount succeeded or `Error` object similar to ones\n\t\t\tgenerated by `fs` module in case of failure.\n\nReturns `undefined`\n\n### mount.mountSync(source, target, fsType, [options], [dataStr])\nSynchronous variant of `mount.mount()`\n\nReturns: `true` if mount succeeded or **throws** `Error` object similar to ones\ngenerated by `fs` module in case of failure.\n\n### mount.umountSync(target)\nSynchronous variant of `mount.umount()`\n\nReturns: `true` if umount succeeded or **throws** `Error` object similar to ones\ngenerated by `fs` module in case of failure.\n\n### mount.unmount(target, callback)\nThis function is **deprecated**; please use `mount.umount()` instead.\n\nAlias of `mount.umount()`\n\n### mount.unmountSync(target)\nThis function is **deprecated**; please use `mount.umountSync()` instead.\n\nAlias of `mount.umountSync()`\n\n### mount.MS_*\nConstants for easy `mount` `flags` bitmask manipulation.\n\n## TODO:\n- umount2 - force force unmounting\n\n## Credits\n- Directly forked from magicpat`s [repository](https://github.com/magicpat/node-mount)\n- magicpat forked from Stackdot`s [repository](https://github.com/stackdot/node-mount)\n- Stackdot forked this from Maciej Małecki`s [repository](https://github.com/mmalecki/node-mount)\n","created":"2015-01-04T23:48:41.204Z","modified":"2017-08-19T09:44:30.508Z","lastPublisher":{"name":"piranna","email":"piranna@gmail.com"},"owners":[{"name":"nodeos-bot","email":"pirann.a@gmail.com"},{"name":"piranna","email":"piranna@gmail.com"}],"other":{"_attachments":{},"_id":"nodeos-mount","_nodeVersion":"8.4.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/nodeos-mount-0.3.2.tgz_1503135869527_0.4334274777211249"},"_npmUser":{"name":"piranna","email":"piranna@gmail.com"},"_npmVersion":"5.3.0","_rev":"14-9041aab08354281f83b4a2024260f732","author":{"name":"George Kotchlamazashvili","email":"georgedot@gmail.com"},"bugs":{"url":"https://github.com/NodeOS/nodeos-mount/issues"},"contributors":[{"name":"Justas Brazauskas","email":"brazauskasjustas@gmail.com"},{"name":"Patrick Stapfer","email":"p.stapfer@deadlock.at","url":"http://www.deadlock.at"},{"name":"Jesús Leganés Combarro 'piranna'","email":"piranna@gmail.com","url":"http://pirannafs.blogspot.com"}],"directories":{},"dist-tags":{"latest":"0.3.2"},"dist":{"integrity":"sha512-mIlRqoySx+u1rAB5zo7DczIhTpgSlzKzmRn1RJvzZ6g3jBoOdg0KF5pJNkjWEh6IP3zQKlpVESoonexLfPKiDQ==","shasum":"19685e40636b2f4f656ac59355765d46a9a85352","tarball":"https://registry.npmjs.org/nodeos-mount/-/nodeos-mount-0.3.2.tgz"},"maintainers":[{"name":"nodeos-bot","email":"pirann.a@gmail.com"},{"name":"piranna","email":"piranna@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-08-19T09:44:30.508Z","created":"2015-01-04T23:48:41.204Z","0.1.1":"2015-01-04T23:48:41.204Z","0.1.2-0":"2015-01-05T01:31:02.398Z","0.1.2":"2015-01-05T01:43:26.735Z","0.1.3":"2015-01-05T02:01:51.411Z","0.1.4":"2015-01-05T02:05:36.174Z","0.1.5":"2015-01-05T02:28:39.179Z","0.1.6-0":"2015-01-05T10:20:50.759Z","0.1.6-1":"2015-01-05T10:40:47.706Z","0.1.6-2":"2015-01-05T10:49:29.405Z","0.1.6":"2015-01-05T20:02:42.601Z","0.1.7":"2015-01-06T21:51:57.912Z","0.1.8":"2015-01-06T21:58:48.733Z","0.1.9":"2015-01-06T22:23:51.596Z","0.1.10":"2015-01-06T22:27:17.954Z","0.1.11":"2015-01-06T22:36:55.358Z","0.1.12":"2015-01-06T23:12:14.386Z","0.1.13":"2015-03-07T19:29:40.317Z","0.1.14":"2015-09-21T07:00:46.210Z","0.1.15":"2015-09-24T23:12:16.098Z","0.2.0":"2016-03-01T13:13:49.153Z","0.3.0":"2016-09-04T20:08:38.599Z","0.3.1":"2016-09-08T16:02:37.033Z","0.3.2":"2017-08-19T09:44:30.508Z"}}}