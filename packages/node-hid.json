{"name":"node-hid","description":"USB HID device access library","version":"0.5.7","repository":"https://github.com/node-hid/node-hid","scripts":{"test":"node src/test-ci.js","prepublish":"git submodule update --init","install":"prebuild-install || node-gyp rebuild","prebuild":"prebuild --all --verbose","prebuild-upload":"prebuild --all --strip --verbose","rebuild":"prebuild --compile","cleanbuild":"rimraf hidapi build node_modules"},"bin":{"hid-showdevices":"./src/show-devices.js"},"main":"./nodehid.js","engines":{"node":">=4.0.0"},"license":"(MIT OR X11)","dependencies":{"bindings":"^1.3.0","nan":"^2.6.2","prebuild-install":"^2.2.2"},"devDependencies":{"prebuild":"^6.2.1","rimraf":"^2.5.3"},"gypfile":true,"gitHead":"a404da5fff43b1cdd83eb365c4bc784d19b1437a","homepage":"https://github.com/node-hid/node-hid#readme","versions":[{"number":"0.0.13","date":"2012-04-09T12:07:22.317Z"},{"number":"0.0.14","date":"2012-04-09T14:20:46.815Z"},{"number":"0.0.15","date":"2012-04-09T14:41:16.099Z"},{"number":"0.1.0","date":"2012-08-20T08:54:53.522Z"},{"number":"0.1.1","date":"2012-08-21T19:43:44.704Z"},{"number":"0.2.0","date":"2013-01-16T08:41:22.953Z"},{"number":"0.2.1","date":"2013-01-17T21:15:56.712Z"},{"number":"0.2.2","date":"2013-01-17T21:21:52.909Z"},{"number":"0.2.3","date":"2013-03-17T19:52:59.524Z"},{"number":"0.3.1","date":"2013-11-14T21:46:53.064Z"},{"number":"0.3.2","date":"2014-10-22T14:06:20.427Z"},{"number":"0.4.0","date":"2015-05-26T22:46:31.406Z"},{"number":"0.4.1","date":"2015-10-07T06:37:17.829Z"},{"number":"0.5.0","date":"2015-10-07T07:51:19.617Z"},{"number":"0.5.1","date":"2015-10-15T04:16:31.555Z"},{"number":"0.5.2","date":"2016-11-09T00:18:05.213Z"},{"number":"0.5.4","date":"2017-01-16T05:07:17.622Z"},{"number":"0.5.5","date":"2017-08-16T02:16:57.632Z"},{"number":"0.5.6","date":"2017-08-16T17:23:05.398Z"},{"number":"0.5.7","date":"2017-08-16T17:57:58.465Z"}],"readme":"# node-hid - Access USB HID devices from Node.js #\n\n[![npm](https://img.shields.io/npm/dm/node-hid.svg?maxAge=2592000)](http://npmjs.com/package/node-hid)\n[![Build Status](https://travis-ci.org/node-hid/node-hid.svg?branch=master)](https://travis-ci.org/node-hid/node-hid)\n[![Build status](https://ci.appveyor.com/api/projects/status/sqgrud8yufx12dbt?svg=true)](https://ci.appveyor.com/project/todbot/node-hid/branch/master)\n\n  * [Platform Support](#platform-support)\n  * [Installation](#installation)\n     * [Installation Special Cases](#installation-special-cases)\n  * [Examples](#examples)\n  * [Usage](#usage)\n     * [List all HID devices connected](#list-all-hid-devices-connected)\n     * [Opening a device](#opening-a-device)\n     * [Reading from a device](#reading-from-a-device)\n     * [Writing to a device](#writing-to-a-device)\n  * [Complete API](#complete-api)\n     * [devices = HID.devices()](#devices--hiddevices)\n     * [device = new HID.HID(path)](#device--new-hidhidpath)\n     * [device = new HID.HID(vid,pid)](#device--new-hidhidvidpid)\n     * [device.on('data', function(data) {} )](#deviceondata-functiondata--)\n     * [device.on('error, function(error) {} )](#deviceonerror-functionerror--)\n     * [device.write(data)](#devicewritedata)\n     * [device.close()](#deviceclose)\n     * [device.pause()](#devicepause)\n     * [device.resume()](#deviceresume)\n     * [device.read(callback)](#devicereadcallback)\n     * [device.readSync()](#devicereadsync)\n     * [device.readTimeout(time_out)](#devicereadtimeouttime_out)\n     * [device.sendFeatureReport(data)](#devicesendfeaturereportdata)\n     * [device.getFeatureReport(report_id, report_length)](#devicegetfeaturereportreport_id-report_length)\n  * [Notes for Specific Devices](#notes-for-specific-devices)\n  * [Linux-specific Notes](#linux-specific-notes)\n     * [usage and <code>usagePage</code> device info fields](#usage-and-usagepage-device-info-fields)\n     * [hidraw support](#hidraw-support)\n     * [udev device permissions](#udev-device-permissions)\n  * [Compiling from source](#compiling-from-source)\n   * [To build node-hid from source for your project:](#to-build-node-hid-from-source-for-your-project)\n   * [To build node-hid for development:](#to-build-node-hid-for-development)\n  * [Using node-hid in Electron projects](#using-node-hid-in-electron-projects)\n  * [Using node-hid in NW.js projects](#using-node-hid-in-nwjs-projects)\n  * [Support](#support)\n\n## Platform Support\n`node-hid` supports Node.js v4 and upwards. For versions 0.10 and 0.12,\nyou will need to build from source. The platforms, architectures and node versions `node-hid` supports are the following;\n\n| Platform / Arch | Node v4.x | Node v6.x | Node v7.x |\n|       ---       | --- | --- | --- |\n| Windows / x86   |  ☑  |  ☑  |  ☑  |\n| Windows / x64   |  ☑  |  ☑  |  ☑  |\n| Mac OSX / x64   |  ☑  |  ☑  |  ☑  |\n| Linux / x64     |  ☑  |  ☑  |  ☑  |\n| Linux / ia32    |  ☐  |  ☐  |  ☐  |\n| Linux / ARM v6¹ |  ☐  |  ☐  |  ☐  |\n| Linux / ARM v7¹ |  ☐  |  ☐  |  ☐  |\n| Linux / ARM v8¹ |  ☐  |  ☐  |  ☐  |\n| Linux / MIPSel¹ |  ☐  |  ☐  |  ☐  |\n| Linux / PPC64¹  |  ☐  |  ☐  |  ☐  |\n\n¹ ia32, ARM, MIPSel and PPC64 platforms are known to work but are not currently part of our test or build matrix.  ARM v4 and v5 was dropped from Node.js after Node v0.10.\n\n## Installation\n\nFor most \"standard\" use cases (node v4.x on mac, linux, windows on a x86 or x64 processor), `node-hid` will install nice and easy with a standard:\n\n```\nnpm install node-hid\n```\n\n### Installation Special Cases\n\nWe are using [prebuild](https://github.com/mafintosh/prebuild) to compile and post binaries of the library for most common use cases (linux, mac, windows on standard processor platforms). If you are on a special case, `node-hid` will work, but it will compile the binary when you install.\n\nIf `node-hid` doesn't have a pre-built binary for your system\n(e.g. Linux on Raspberry Pi),\n`node-gyp` is used to compile `node-hid` locally.  It will need the pre-requisites\nlisted in [Compling from source](#compiling-from-source) below.\n\n\n\n## Examples\n\nIn the `src/` directory, various JavaScript programs can be found\nthat talk to specific devices in some way.  Some interesting ones:\n- [`show-devices.js`](./src/show-devices.js) - display all HID devices in the system\n- [`test-ps3-rumbleled.js`](./src/test-ps3-rumbleled.js) - Read PS3 joystick and control its LED & rumblers\n- [`test-powermate.js`](./src/test-powermate.js) - Read Griffin PowerMate knob and change its LED\n- [`test-blink1.js`](./src/test-blink1.js) - Fade colors on blink(1) RGB LED\n- [`test-bigredbutton.js`](./src/test-bigredbutton.js) - Read Dreamcheeky Big Red Button\n\nTo try them out, call them like `node src/showdevices.js` from the node-hid directory.\n\n## Usage\n\n### List all HID devices connected\n\n```js\nvar HID = require('node-hid');\nvar devices = HID.devices();\n```\n\n`devices` will contain an array of objects, one for each HID device\navailable.  Of particular interest are the `vendorId` and\n`productId`, as they uniquely identify a device, and the\n`path`, which is needed to open a particular device.\n\nSample output:\n\n```js\nHID.devices();\n[ { vendorId: 1452,\n    productId: 595,\n    path: 'USB_05ac_0253_0x100a148e0',\n    serialNumber: '',\n    manufacturer: 'Apple Inc.',\n    product: 'Apple Internal Keyboard / Trackpad',\n    release: 280,\n    interface: -1 },\n  { vendorId: 1452,\n    productId: 595,\n    path: 'USB_05ac_0253_0x100a14e20',\n    serialNumber: '',\n    manufacturer: 'Apple Inc.',\n    product: 'Apple Internal Keyboard / Trackpad',\n    release: 280,\n    interface: -1 },\n<and more>\n```\n\n### Opening a device\n\nBefore a device can be read from or written to, it must be opened.\nThe `path` can be determined by a prior HID.devices() call.\nUse either the `path` from the list returned by a prior call to `HID.devices()`:\n\n```js\nvar device = new HID.HID(path);\n```\n\nor open the first device matching a VID/PID pair:\n\n```js\nvar device = new HID.HID(vid,pid);\n```\n\nThe `device` variable will contain a handle to the device.\nIf an error occurs opening the device, an exception will be thrown.\n\n### Reading from a device\n\nA `node-hid` device is an EventEmitter.\nReading from a device is performed by registering a \"data\" event handler:\n\n```js\ndevice.on(\"data\", function(data) {});\n```\n\nYou can also listen for errors like this:\n\n```js\ndevice.on(\"error\", function(err) {});\n```\nNotes:\n- All reading is asynchronous\n- The `data` event receives INPUT reports. To receive Feature reports,\n  see the `readFeatureReport()` method below.\n- To remove an event handler, close the device with `device.close()`\n\n\n### Writing to a device\n\nWriting to a device is performed using the write call in a device\nhandle.  All writing is synchronous.\n\n```\ndevice.write([0x00, 0x01, 0x01, 0x05, 0xff, 0xff]);\n```\nNotes:\n- The `write()` method sends OUTPUT reports. To send Feature reports,\nsee the `sendFeatureReport()` method below.\n- Some devices use reportIds for OUTPUT reports.  If that is the case,\nthe first byte of the array to `write()` should be the reportId.\n- BUG: if the first byte of a `write()` is 0x00, you may need to prepend an extra 0x00 due to a bug in hidapi (see issue #187)\n\n\n## Complete API\n\n### `devices = HID.devices()`\n\n- Return array listing all connected HID devices\n\n### `device = new HID.HID(path)`\n\n- Open a HID device at the specifed platform-speific path\n\n### `device = new HID.HID(vid,pid)`\n\n- Open first HID device with speciic VendorId and ProductId\n\n### `device.on('data', function(data) {} )`\n\n- `data` - Buffer - the data read from the device\n\n### `device.on('error, function(error) {} )`\n\n- `error` - The error Object emitted\n\n### `device.write(data)`\n\n- `data` - the data to be synchronously written to the device\n\n### `device.close()`\n\nCloses the device. Subsequent reads will raise an error.\n\n### `device.pause()`\n\nPauses reading and the emission of `data` events.\n\n### `device.resume()`\n\nThis method will cause the HID device to resume emmitting `data` events.\nIf no listeners are registered for the `data` event, data will be lost.\n\nWhen a `data` event is registered for this HID device, this method will\nbe automatically called.\n\n### `device.read(callback)`\n\nLow-level function call to initiate an asynchronous read from the device.\n`callback` is of the form `callback(err, data)`\n\n### `device.readSync()`\n\nReturn an array of numbers data. If an error occurs, an exception will be thrown.\n\n### `device.readTimeout(time_out)`\n\n- `time_out` - timeout in milliseconds\nReturn an array of numbers data. If an error occurs, an exception will be thrown.\n\n### `device.sendFeatureReport(data)`\n- `data` - data of HID feature report, with 0th byte being report_id (`[report_id,...]`)\n\n### `device.getFeatureReport(report_id, report_length)`\n- `report_id` - HID feature report id to get\n- `report_length` - length of report\n\n\n## Notes for Specific Devices\n\n- Xbox 360 Controller on Windows 10 -- does not work\n\n## Linux-specific Notes\n\n### `usage` and `usagePage` device info fields\n  These are not available on Linux, only Mac and Windows.\n  For reason why, and to ask for its addition, see:\n  https://github.com/signal11/hidapi/pull/6\n\n### hidraw support\n  To install node-hid with the `hidraw` driver instead of the default libusb one,\n  install the \"libudev-dev\" package and rebuild the library with:\n  ```\n  npm install node-hid --driver=hidraw\n  ```\n\n### udev device permissions\nMost Linux distros use `udev` to manage access to physical devices,\nand USB HID devices are normally owned by the `root` user.\nTo allow non-root access, you must create a udev rule for the device,\nbased on the devices vendorId and productId.\n\nThis rule is a file, placed in `/etc/udev/rules.d`, with the lines:\n```\nSUBSYSTEM==\"input\", GROUP=\"input\", MODE=\"0666\"\nSUBSYSTEM==\"usb\", ATTRS{idVendor}==\"27b8\", ATTRS{idProduct}==\"01ed\", MODE:=\"666\", GROUP=\"plugdev\"\n```\n(the above is for vendorId = 27b8, productId = 01ed)\n\nThen the udev service is reloaded with: `sudo udevadm control --reload-rules`\nFor an example, see the\n[blink1 udev rules](https://github.com/todbot/blink1/blob/master/linux/51-blink1.rules).\n\n\n## Compiling from source\n\nTo compile & develop locally or if `prebuild` cannot download a pre-built\nbinary for you, you will need the following tools:\n\n* All OSes:\n    * `node-gyp` installed globally: `npm install -g node-gyp`\n\n* Linux (kernel 2.6+) : install examples shown for Ubuntu\n    * Compilation tools: `apt install build-essential git`\n    * gcc-4.8+: `apt install gcc-4.8 g++-4.8 && export CXX=g++-4.8`\n    * libusb-1.0-0 w/headers:`sudo apt install libusb-1.0-0 libusb-1.0-0-dev`\n    * libudev-dev: (Fedora only) `yum install libusbx-devel`\n* Mac OS X 10.8+\n    * [Xcode](https://itunes.apple.com/us/app/xcode/id497799835?mt=12)\n* Windows XP, 7, 8, 10\n    * Visual C++ compiler and Python 2.7\n        * either:\n            * `npm install --global windows-build-tools`\n            * add `%USERPROFILE%\\.windows-build-tools\\python27` to `PATH`,\n           like PowerShell: `$env:Path += \";$env:USERPROFILE\\.windows-build-tools\\python27\"`\n        * or:\n          * [Python 2.7](https://www.python.org/downloads/windows/)\n          * [Visual Studio Express 2013 for Desktop](https://www.visualstudio.com/downloads/download-visual-studio-vs#d-2013-express)\n\n\n### To build `node-hid` from source for your project:\n\n```\nnpm install node-hid --build-from-source\n```\n\n### To build `node-hid` for development:\n\n* check out a copy of this repo\n* change into its directory\n* update the submodules\n* build the node package\n\nFor example:\n\n```\ngit clone https://github.com/node-hid/node-hid.git\ncd node-hid                                        # must change into node-hid directory\nnpm install --build-from-source                    # rebuilds the module with C code\nnode ./src/show-devices.js\n```\n\nYou will likely see some warnings from the C compiler as it compiles\n[hidapi](https://github.com/signal11/hidapi) (the underlying C library `node-hid` uses).  \nThis is expected.\n\n\n## Using `node-hid` in Electron projects\nIn your electron project, add `electron-rebuild` and `electron-prebuilt` to your `devDependencies`.\nThen in your package.json `scripts` add:\n\n```\n  \"postinstall\": \"electron-rebuild --force\"\n```\n\nIf you want a specific version of electron, do something like:\n\n```\nelectron-rebuild -v 0.36.5 --force -m . -w node-hid\n```\n\n## Using `node-hid` in NW.js projects\n(TBD)\n\n## Support\n\nPlease use the [node-hid github issues page](https://github.com/node-hid/node-hid/issues)\nfor support questions and issues.\n","starsCount":15,"created":"2012-04-09T12:07:18.929Z","modified":"2017-08-16T17:57:58.465Z","lastPublisher":{"name":"todbot","email":"todbotdotcom@gmail.com"},"owners":[{"email":"todbotdotcom@gmail.com","name":"todbot"},{"email":"natevw@yahoo.com","name":"natevw"},{"email":"hans.huebner@gmail.com","name":"hans"},{"email":"miner.blake@gmail.com","name":"bminer"},{"email":"jornandretangen@gmail.com","name":"gorillatron"}],"other":{"_attachments":{},"_id":"node-hid","_nodeVersion":"8.3.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-hid-0.5.7.tgz_1502906278242_0.32468531536869705"},"_npmUser":{"name":"todbot","email":"todbotdotcom@gmail.com"},"_npmVersion":"5.3.0","_rev":"12-51287351f7191b5e44edff47b42c26ce","author":{"name":"Hans Hübner","email":"hans.huebner@gmail.com","url":"https://github.com/hanshuebner"},"bugs":{"url":"https://github.com/node-hid/node-hid/issues"},"contributors":[{"name":"Blake Miner","email":"miner.blake@gmail.com"},{"name":"Tod Kurt","email":"todbotdotcom@gmail.com","url":"https://github.com/todbot"}],"directories":{},"dist-tags":{"latest":"0.5.7"},"dist":{"integrity":"sha512-dwwpOetL2+MGYgivbO22ML+45ieCGbueWv1rYxRgBoEc2QMp6UF6ZucEkYts1IA3YPWJNkmpGh6dqQ85n19szw==","shasum":"5c87c33e4bcb9db64decf21ba3c7b9d014eac123","tarball":"https://registry.npmjs.org/node-hid/-/node-hid-0.5.7.tgz"},"maintainers":[{"email":"todbotdotcom@gmail.com","name":"todbot"},{"email":"natevw@yahoo.com","name":"natevw"},{"email":"hans.huebner@gmail.com","name":"hans"},{"email":"miner.blake@gmail.com","name":"bminer"},{"email":"jornandretangen@gmail.com","name":"gorillatron"}],"readmeFilename":"README.md","time":{"modified":"2017-08-16T17:57:58.465Z","created":"2012-04-09T12:07:18.929Z","0.0.13":"2012-04-09T12:07:22.317Z","0.0.14":"2012-04-09T14:20:46.815Z","0.0.15":"2012-04-09T14:41:16.099Z","0.1.0":"2012-08-20T08:54:53.522Z","0.1.1":"2012-08-21T19:43:44.704Z","0.2.0":"2013-01-16T08:41:22.953Z","0.2.1":"2013-01-17T21:15:56.712Z","0.2.2":"2013-01-17T21:21:52.909Z","0.2.3":"2013-03-17T19:52:59.524Z","0.3.1":"2013-11-14T21:46:53.064Z","0.3.2":"2014-10-22T14:06:20.427Z","0.4.0":"2015-05-26T22:46:31.406Z","0.4.1":"2015-10-07T06:37:17.829Z","0.5.0":"2015-10-07T07:51:19.617Z","0.5.1":"2015-10-15T04:16:31.555Z","0.5.2":"2016-11-09T00:18:05.213Z","0.5.4":"2017-01-16T05:07:17.622Z","0.5.5":"2017-08-16T02:16:57.632Z","0.5.6":"2017-08-16T17:23:05.398Z","0.5.7":"2017-08-16T17:57:58.465Z"},"users":{"sandeepmistry":true,"dazld":true,"gauss02":true,"franklin":true,"otaviolms":true,"temasm":true,"subso":true,"todbot":true,"thelmos":true,"mschm":true,"fly19890211":true,"ischiavon":true,"steakeye":true,"shanewholloway":true,"heartnett":true}}}