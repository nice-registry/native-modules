{"name":"x.509","version":"0.1.4","description":"Simple X509 certificate parser.","main":"index.js","repository":"https://github.com/yorkie/node-x509","scripts":{"test":"node test/test","install":"node-gyp rebuild"},"license":"MIT","dependencies":{"nan":"^1.3.0"},"gypfile":true,"gitHead":"80fdfbb187c5afe958f8f31716a0ca9152d338ab","homepage":"https://github.com/yorkie/node-x509","versions":[{"number":"0.1.0","date":"2014-06-20T06:16:17.316Z"},{"number":"0.1.1","date":"2014-06-20T06:18:44.766Z"},{"number":"0.1.2","date":"2014-09-14T12:53:32.510Z"},{"number":"0.1.4","date":"2014-09-14T13:43:02.317Z"}],"readme":"node-x509\n=========\n\nSimple X509 certificate parser.\n\n## Installation\n\nFrom NPM *(recommended)*: `npm install x.509`\n\nBuilding and testing from source:\n```\nsudo npm install -g node-gyp\nnpm install\nnpm test\n```\n\n## Usage\nReading from a file:\n```js\nvar x509 = require('x509');\n\nvar issuer = x509.getIssuer(__dirname + '/certs/your.crt');\n```\n\nReading from a string:\n```js\nvar fs = require('fs'),\n    x509 = require('x509');\n\nvar issuer = x509.getIssuer(fs.readFileSync('./certs/your.crt').toString());\n```\n\n## Methods\n**Notes:**\n- `cert` may be a filename or a raw base64 encoded PEM string in any of these methods.\n\n\n#### x509.getAltNames(`cert`)\nParse certificate with `x509.parseCert` and return the alternate names.\n\n```js\nvar x509 = require('x509');\n\nvar altNames = x509.getAltNames(__dirname + '/certs/nodejitsu.com.crt');\n/*\naltNames = [ '*.nodejitsu.com', 'nodejitsu.com' ]\n*/\n```\n\n#### x509.getIssuer(`cert`)\nParse certificate with `x509.parseCert` and return the issuer.\n\n```js\nvar x509 = require('x509');\n\nvar issuer = x509.getIssuer(__dirname + '/certs/nodejitsu.com.crt');\n/*\nissuer = { countryName: 'GB',\n  stateOrProvinceName: 'Greater Manchester',\n  localityName: 'Salford',\n  organizationName: 'COMODO CA Limited',\n  commonName: 'COMODO High-Assurance Secure Server CA' }\n*/\n```\n\n#### x509.getSubject(`cert`)\nParse certificate with `x509.parseCert` and return the subject.\n\n```js\nvar x509 = require('x509');\n\nvar subject = x509.getSubject(__dirname + '/certs/nodejitsu.com.crt');\n/*\nsubject = { countryName: 'US',\n  postalCode: '10010',\n  stateOrProvinceName: 'NY',\n  localityName: 'New York',\n  streetAddress: '902 Broadway, 4th Floor',\n  organizationName: 'Nodejitsu',\n  organizationalUnitName: 'PremiumSSL Wildcard',\n  commonName: '*.nodejitsu.com' }\n*/\n```\n\n#### x509.parseCert(`cert`)\nParse subject, issuer, valid before and after date, and alternate names from certificate.\n\n```js\nvar x509 = require('x509');\n\nvar cert = x509.parseCert(__dirname + '/certs/nodejitsu.com.crt');\n/*\ncert = { subject: \n   { countryName: 'US',\n     postalCode: '10010',\n     stateOrProvinceName: 'NY',\n     localityName: 'New York',\n     streetAddress: '902 Broadway, 4th Floor',\n     organizationName: 'Nodejitsu',\n     organizationalUnitName: 'PremiumSSL Wildcard',\n     commonName: '*.nodejitsu.com' },\n  issuer: \n   { countryName: 'GB',\n     stateOrProvinceName: 'Greater Manchester',\n     localityName: 'Salford',\n     organizationName: 'COMODO CA Limited',\n     commonName: 'COMODO High-Assurance Secure Server CA' },\n  notBefore: Sun Oct 28 2012 20:00:00 GMT-0400 (EDT),\n  notAfter: Wed Nov 26 2014 18:59:59 GMT-0500 (EST),\n  altNames: [ '*.nodejitsu.com', 'nodejitsu.com' ],\n  signatureAlgorithm: 'sha1WithRSAEncryption',\n  fingerPrint: 'E4:7E:24:8E:86:D2:BE:55:C0:4D:41:A1:C2:0E:06:96:56:B9:8E:EC',\n  publicKey: {\n    algorithm: 'rsaEncryption',\n    e: '65537',\n    n: '.......' } }\n*/\n```\n\n## Examples\nChecking the date to make sure the certificate is active:\n```js\nvar x509 = require('x509'),\n    cert = x509.parseCert('yourcert.crt'),\n    date = new Date();\n\nif (cert.notBefore > date) {\n  // Certificate isn't active yet.\n}\nif (cert.notAfter < date) {\n  // Certificate has expired.\n}\n```\n\n## License\n\nMIT","created":"2014-06-20T06:16:17.316Z","modified":"2014-09-14T13:43:02.317Z","lastPublisher":{"name":"yorkie","email":"yorkiefixer@gmail.com"},"owners":[{"name":"yorkie","email":"yorkiefixer@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"x.509","_npmUser":{"name":"yorkie","email":"yorkiefixer@gmail.com"},"_npmVersion":"1.4.21","_rev":"1-c8aa48c1cd85cca263ef76e1f23792e9","_shasum":"c3d90e99768422b0584c384c16d69c6d6d831012","author":{"name":"Colton Baker"},"bugs":{"url":"https://github.com/yorkie/node-x509/issues"},"directories":{},"dist-tags":{"latest":"0.1.4"},"dist":{"shasum":"c3d90e99768422b0584c384c16d69c6d6d831012","tarball":"http://registry.npmjs.org/x.509/-/x.509-0.1.4.tgz"},"maintainers":[{"name":"yorkie","email":"yorkiefixer@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-09-14T13:43:02.317Z","created":"2014-06-20T06:16:17.316Z","0.1.0":"2014-06-20T06:16:17.316Z","0.1.1":"2014-06-20T06:18:44.766Z","0.1.2":"2014-09-14T12:53:32.510Z","0.1.4":"2014-09-14T13:43:02.317Z"}}}