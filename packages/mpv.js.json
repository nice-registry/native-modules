{"name":"mpv.js","version":"0.2.0","description":"mpv pepper plugin","main":"index.js","scripts":{"install":"prebuild-install -t 1.0.0 || node-gyp rebuild","test":"eslint .","example":"electron example","use-system-ffmpeg":"gcc -shared -lavformat -o node_modules/electron/dist/libffmpeg.so","prebuild-win":"rd /s /q prebuilds & prebuild -t 1.0.0 -a ia32 && prebuild -t 1.0.0 -a x64","prebuild-posix":"rm -rf prebuilds && prebuild -t 1.0.0 -a x64 --strip","collect-prebuilds":"npm run prebuild-posix && cd prebuilds && cp ${MPVJS_WIN_PREBUILDS}/* . && cp ${MPVJS_MAC_PREBUILDS}/* . && perl-rename \"s/v\\d+\\.\\d+\\.\\d+/v${npm_package_version}/\" *"},"repository":"https://github.com/Kagami/mpv.js","keywords":["mpv","pepper","ppapi","electron","nw.js","video","player"],"license":"CC0-1.0","homepage":"https://github.com/Kagami/mpv.js#readme","dependencies":{"prebuild-install":"^2.1.1"},"peerDependencies":{"react":"^15.3.0"},"devDependencies":{"babel-standalone":"^6.23.1","electron":"1.4.15","electron-debug":"^1.1.0","eslint":"^3.17.0","eslint-plugin-react":"^6.10.0","prebuild":"^6.1.0","react":"^15.4.2","react-dom":"^15.4.2"},"gitHead":"8b1cd79787d2dc254a2b6b7c0bdf57f887cc8f7d","versions":[{"number":"0.0.1","date":"2017-03-04T01:29:28.578Z"},{"number":"0.1.0","date":"2017-03-10T15:10:55.414Z"},{"number":"0.1.1","date":"2017-03-10T15:23:43.658Z"},{"number":"0.2.0","date":"2017-03-10T15:51:29.543Z"}],"readme":"<h1 align=\"center\">\n  <a href=\"https://mpv.io/\">\n    <img src=\"https://i.imgur.com/qQFg0aI.png\" alt=\"mpv\" width=\"200\">\n  </a>\n  <br>mpv.js<br><br>\n</h1>\n\n<h4 align=\"center\">\n  All format embeddable player for Electron/NW.js applications.\n  <br>Powered by marvelous <a href=\"https://mpv.io/\">mpv</a>.\n</h4>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/Kagami/mpv.js\">\n    <img src=\"https://img.shields.io/travis/Kagami/mpv.js.svg\" alt=\"Travis\">\n  </a>\n  <a href=\"https://npmjs.org/package/mpv.js\">\n    <img src=\"https://img.shields.io/npm/v/mpv.js.svg\" alt=\"NPM\">\n  </a>\n</p>\n\n## Get libmpv\n\nIn order to use mpv.js you need to install mpv library first.\n\n* Windows: download [mpv-dev](https://mpv.srsfckn.biz/mpv-dev-latest.7z), unpack, put corresponding `mpv-1.dll` to `C:\\Windows\\system32`\n* macOS: `brew install mpv`\n* Linux: `apt-get install libmpv1`\n\n## Example\n\n![](https://i.imgur.com/tLFkATs.png)\n\n[Simple Electron application](example) yet capable of handling pretty much any available video thanks to mpv. Run:\n\n```bash\ngit clone https://github.com/Kagami/mpv.js.git && cd mpv.js\nnpm install\n# On Linux: npm run use-system-ffmpeg\nnpm run example\n```\n\n## Usage\n\n### Add npm package\n\n```bash\nnpm install mpv.js --save\n```\n\nPackage includes prebuilt binaries for all major platforms so no need to setup compilers.\n\n### Load plugin in main process (Electron example)\n\n```javascript\nconst path = require(\"path\");\nconst {app} = require(\"electron\");\nconst {getPluginEntry} = require(\"mpv.js\");\n\n// Absolute path to the plugin directory.\nconst pluginDir = path.join(path.dirname(require.resolve(\"mpv.js\")), \"build\", \"Release\");\n// See pitfalls section for details.\nif (process.platform !== \"linux\") {process.chdir(pluginDir);}\napp.commandLine.appendSwitch(\"ignore-gpu-blacklist\");\napp.commandLine.appendSwitch(\"register-pepper-plugins\", getPluginEntry(pluginDir));\n```\n\n### Use MPV component (React example)\n\n```javascript\nconst React = require(\"react\");\nconst {ReactMPV} = require(\"mpv.js\");\n\nclass Player extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.mpv = null;\n    this.state = {pause: true, \"time-pos\": 0};\n  }\n  handleMPVReady(mpv) {\n    this.mpv = mpv;\n    this.mpv.observe(\"pause\");\n    this.mpv.observe(\"time-pos\");\n    this.mpv.command(\"loadfile\", \"/path/to/video.mkv\");\n  }\n  handlePropertyChange(name, value) {\n    this.setState({[name]: value});\n  }\n  togglePause() {\n    this.mpv.property(\"pause\", !this.state.pause);\n  }\n  render() {\n    return (\n      <ReactMPV\n        className=\"player\"\n        onReady={this.handleMPVReady.bind(this)}\n        onPropertyChange={this.handlePropertyChange.bind(this)}\n        onMouseDown={this.togglePause.bind(this)}\n      />\n    );\n  }\n}\n```\n\nCurrently only React component is provided.\n\n### See also\n\n* [mpv properties documentation](https://mpv.io/manual/master/#property-list)\n* [mpv commands documentation](https://mpv.io/manual/master/#list-of-input-commands)\n* [ReactMPV source](index.js) with JSDoc API comments\n* [example player source](example/renderer.js) for a more advanced usage\n\n## Shipping\n\nBasically all you need to ship is `mpvjs.node` and mpv library. Make sure they both and also Electron/NW.js distribution have the same bitness!\n\n### Windows\n\nYou may use [lachs0r builds](https://mpv.srsfckn.biz/mpv-dev-20170212.7z). Copy `mpv-1.dll` to the directory with `mpvjs.node` and you are done.\n\n### macOS\n\n[Homebrew](https://brew.sh/) can compile `libmpv.1.dylib` and all its dependencies. To find dylibs that need to be packaged and fix global paths and you may use [collect-dylib-deps](scripts/collect-dylib-deps.sh) script.\n\n### Linux\n\n* Either ask your users to install `libmpv1` with package manager (depend on it if you have e.g. PPA); see also pitfalls section\n* Or compile static `libmpv.so` with e.g. [mpv-build](https://github.com/mpv-player/mpv-build)\n\n## Pitfalls\n\n### Path to plugin can't contain non-ASCII symbols\n\nThis is unfortunate Chromium's [pepper_plugin_list.cc](https://chromium.googlesource.com/chromium/src/+/59.0.3036.3/content/common/pepper_plugin_list.cc#84) restriction. To workaround this relative path might be used.\n\nOn Windows and Mac it can be done by changing working directory to the path where `mpvjs.node` is stored. Unfortunately you can't change CWD of renderer process on Linux inside main process because of zygote architecture so another fix is just `cd` to the plugin directory in your application's run wrapper script.\n\n`getPluginEntry` helper will give you plugin entry string with that fix applied.\n\n### libmpv is being linked with Electron's libffmpeg on Linux\n\nOn Linux plugins loaded with `register-pepper-plugins` switch inherit symbols from `electron` binary so it can lead to unfortunate effect: libmpv will use Electron's libraries which is not supported.\n\nTo workaround this you need to either replace `libffmpeg.so` with empty wrapper linked to `libav*`:\n\n```bash\ngcc -shared -lavformat -o node_modules/electron/dist/libffmpeg.so\n```\n\n**NOTE:** This doesn't work for Electron >= 1.4.15 due to [#268](https://github.com/electron/libchromiumcontent/issues/268).\n\nOr use libmpv with statically linked `libav*`.\n\n## Build\n\nTo build `mpvjs.node` by yourself you need to setup dev environment.\n\n### Step 1: setup node-gyp\n\nSee [installation](https://github.com/nodejs/node-gyp#installation) section.\n\n* Windows: Visual Studio 2013 is required\n\n### Step 2: setup NaCl SDK\n\nSee [download](https://developer.chrome.com/native-client/sdk/download) page.\n\n* Windows: unpack `nacl_sdk.zip` to `C:\\`\n* macOS & Linux: add `export NACL_SDK_ROOT=/path/to/pepper_49` to `~/.bash_profile`\n\n### Step 2.1: compile 64-bit NaCl host binaries on Windows\n\n1. Open `C:\\nacl_sdk\\pepper_49\\tools\\host_vc.mk` and replace `32_host` with `64_host`\n2. Open cmd, run `\"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" amd64`\n3. Run `cd C:\\nacl_sdk\\pepper_49\\src` and `make TOOLCHAIN=win`\n\n### Step 3: setup mpv development files\n\n* Windows: download [mpv-dev](https://mpv.srsfckn.biz/mpv-dev-latest.7z), unpack to `C:\\mpv-dev`, rename `include` to `mpv`\n* macOS: `brew install mpv`\n* Linux: `apt-get install libmpv-dev`\n\n### Step 4: build plugin\n\n* Run `node-gyp rebuild` in project directory\n* Run `node-gyp rebuild --arch=ia32` to build 32-bit version of plugin on 64-bit Windows\n\n## Applications using mpv.js\n\n* [boram](https://github.com/Kagami/boram)\n\nFeel free to PR your own.\n\n## License\n\nmpv.js is licensed under [CC0](COPYING) itself, however mpv.js + libmpv build is meant to be distributed as GPLv2+ due to mpv [being GPL](https://github.com/mpv-player/mpv/blob/master/LICENSE) and GPL dynamic linking restrictions.\n\nIt shouldn't affect entire Electron/NW.js app though because Chromium runs plugins inside separate process and GPL FAQ [doesn't restrict that](https://www.gnu.org/licenses/gpl-faq.html#NFUseGPLPlugins). (This is not a legal advice.)\n\nExample video is part of Tears of Steel movie (CC) Blender Foundation | mango.blender.org.\n\nLogo is by @SteveJobzniak.\n","created":"2017-03-04T01:29:28.578Z","modified":"2017-03-10T15:51:29.543Z","lastPublisher":{"name":"kagami","email":"kagami@genshiken.org"},"owners":[{"name":"kagami","email":"kagami@genshiken.org"}],"other":{"_attachments":{},"_from":".","_id":"mpv.js","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/mpv.js-0.2.0.tgz_1489161087586_0.9391510419081897"},"_npmUser":{"name":"kagami","email":"kagami@genshiken.org"},"_npmVersion":"4.1.2","_rev":"4-f8ba2f1c9eac5db9606f1f13d33ac841","_shasum":"9353ec13902538008c81f48ba55f8fd014b7fd26","author":{"name":"Kagami Hiiragi"},"bugs":{"url":"https://github.com/Kagami/mpv.js/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"9353ec13902538008c81f48ba55f8fd014b7fd26","tarball":"https://registry.npmjs.org/mpv.js/-/mpv.js-0.2.0.tgz"},"maintainers":[{"name":"kagami","email":"kagami@genshiken.org"}],"readmeFilename":"README.md","time":{"modified":"2017-03-10T15:51:29.543Z","created":"2017-03-04T01:29:28.578Z","0.0.1":"2017-03-04T01:29:28.578Z","0.1.0":"2017-03-10T15:10:55.414Z","0.1.1":"2017-03-10T15:23:43.658Z","0.2.0":"2017-03-10T15:51:29.543Z"}}}