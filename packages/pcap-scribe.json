{"name":"pcap-scribe","version":"1.2.2","description":"pcap writer using libpcap","main":"pcap_dump.js","scripts":{"test":"test","install":"node-gyp rebuild"},"repository":"https://github.com/harrydevnull/pcap-scribe","keywords":["nodejs","pcap","libpcap","node","addon"],"license":"ISC","homepage":"https://github.com/harrydevnull/pcap-scribe#readme","dependencies":{"nan":"^2.4.0"},"devDependencies":{"grunt":"^1.0.1","grunt-cli":"^1.2.0","grunt-contrib-jshint":"^1.0.0","grunt-coveralls":"^1.0.1","grunt-mocha-istanbul":"^5.0.2","grunt-mocha-test":"^0.13.2","istanbul":"^0.4.5","mocha":"^3.1.0","mocha-sinon":"^1.1.6","rewire":"^2.5.2","should":"^11.1.0","sinon":"^1.17.6"},"gitHead":"80cd58e727ac2d4423635b26cfd83a7cdd6ba742","gypfile":true,"versions":[{"number":"1.0.0","date":"2016-10-05T16:51:13.790Z"},{"number":"1.0.1","date":"2016-10-05T17:49:18.981Z"},{"number":"1.0.2","date":"2016-10-05T17:50:35.394Z"},{"number":"1.1.0","date":"2016-10-06T19:07:19.504Z"},{"number":"1.1.1","date":"2016-10-06T19:17:13.635Z"},{"number":"1.2.0","date":"2016-10-07T18:43:14.502Z"},{"number":"1.2.1","date":"2016-10-07T19:58:50.222Z"},{"number":"1.2.2","date":"2016-10-11T17:10:28.176Z"}],"readme":"\nCapturing packets live into file using nodejs and libpcap\n\npcap-scribe\n================\n\n\n[![Build Status](https://travis-ci.org/harrydevnull/pcap-scribe.svg?branch=master)](https://travis-ci.org/harrydevnull/pcap-scribe)\n[![Coverage Status](https://coveralls.io/repos/github/harrydevnull/pcap-scribe/badge.svg?branch=master)](https://coveralls.io/github/harrydevnull/pcap-scribe?branch=master)\n\n## Installation\n\nYou will need `libpcap` installed.  Most OSX machines seem to have it.  All major Linux distributions have it available\neither by default or with a package like `libpcap-dev`.\n\nThe easiest way to get `pcap-scribe` and its tools is with `npm`:\n\n    npm install pcap-scribe\n\nIf you want to hack on the source code, you can get it from github.  Clone the repo like this:\n\n    git clone https://github.com/harrydevnull/pcap-scribe\n\nTo compile the native code bindings, do this:\n\n    cd pcap-scribe\n    npm install \n\nAssuming it built without errors, you should be able to run the examples and then write your own packet\ncapture programs.\n\n### Starting a capture session\n\nTo start a capture session, call `pcap.PcapDumpSession` with an interface name and a pcap filter string:\n\n    var pcap = require(\"pcap-scribe\"); \n        pcap_dump = new pcap.PcapDumpSession(interface, filter,bufferSize,pcap file name ,false,Number of packets to be captured);\n        \n        pcap_dump.on('pcap_write_complete_async',function(message){\n                console.log(\"done.....\",message);\n        });\n\n        pcap_dump.on('pcap_write_error',function(message){\n                console.log(\"pcap_write_error.....\",message);\n        });\n\n        pcap_dump.startAsyncCapture();\n\n        //eg: pcap_dump = new pcap.PcapDumpSession('en0', \"ip proto \\\\tcp\",10*1024*1024,\"tmp95.pcap\",false,5);\n\n\n`interface` is the name of the interface on which to capture packets.  If passed an empty string, `libpcap`\nwill try to pick a \"default\" interface, which is often just the first one in some list and not what you want.\n\n`filter` is a pcap filter expression, see `pcap-filter(7)` for more information.  An empty string will capture\nall packets visible on the interface.\n\nNote that `pcap-scribe` always opens the interface in promiscuous mode, which generally requires running as root.\n\n`PcapDumpSession` is an `EventEmitter` that emits a `packet` event.  The only argument to the callback will be a\n`Buffer` object with the raw bytes returned by `libpcap`.\nIt emits two more events `pcap_write_complete_async` when the write to file is complete\nand `pcap_write_error` in case there is an error.\n\n\n\n","created":"2016-10-05T16:51:13.790Z","modified":"2016-10-11T17:10:28.176Z","lastPublisher":{"name":"harrydevnull","email":"harrydevnull@gmail.com"},"owners":[{"name":"harrydevnull","email":"harrydevnull@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"pcap-scribe","_nodeVersion":"4.4.7","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/pcap-scribe-1.2.2.tgz_1476205826487_0.4475419039372355"},"_npmUser":{"name":"harrydevnull","email":"harrydevnull@gmail.com"},"_npmVersion":"2.15.8","_rev":"1-7ae5af3db62ebdcef4f78f03c420f88e","_shasum":"7ab6c793ec022aba0e7bcd3a3f18357f65c59268","author":{"name":"harrydevnull"},"bugs":{"url":"https://github.com/harrydevnull/pcap-scribe/issues"},"directories":{},"dist-tags":{"latest":"1.2.2"},"dist":{"shasum":"7ab6c793ec022aba0e7bcd3a3f18357f65c59268","tarball":"http://registry.npmjs.org/pcap-scribe/-/pcap-scribe-1.2.2.tgz"},"maintainers":[{"name":"harrydevnull","email":"harrydevnull@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-11T17:10:28.176Z","created":"2016-10-05T16:51:13.790Z","1.0.0":"2016-10-05T16:51:13.790Z","1.0.1":"2016-10-05T17:49:18.981Z","1.0.2":"2016-10-05T17:50:35.394Z","1.1.0":"2016-10-06T19:07:19.504Z","1.1.1":"2016-10-06T19:17:13.635Z","1.2.0":"2016-10-07T18:43:14.502Z","1.2.1":"2016-10-07T19:58:50.222Z","1.2.2":"2016-10-11T17:10:28.176Z"}}}