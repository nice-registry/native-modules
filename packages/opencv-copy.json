{"name":"opencv-copy","description":"Node Bindings to OpenCV","dependencies":{"buffers":"0.1.1","nan":"^1.7.0","node-pre-gyp":"^0.6.4"},"version":"3.0.6","devDependencies":{"tape":"^3.0.0","aws-sdk":"~2.1.20","glob":"^5.0.3","request":"^2.44.0"},"license":"MIT","scripts":{"build":"node-gyp build","test":"node test/unit.js","install":"node-pre-gyp install --fallback-to-build"},"keywords":["opencv","computer","vision","quadrocopter"],"main":"./lib/opencv","repository":"https://github.com/oneminute/node-opencv","engines":{"node":">=0.10"},"binary":{"module_name":"opencv","module_path":"./build/{module_name}/v{version}/{configuration}/{node_abi}-{platform}-{arch}/","remote_path":"./{module_name}/v{version}/{configuration}/","package_name":"{node_abi}-{platform}-{arch}.tar.gz","host":"https://node-opencv.s3.amazonaws.com"},"gitHead":"e65202575a59ac81176140eaae591197b9c69d40","homepage":"https://github.com/oneminute/node-opencv","bundleDependencies":["node-pre-gyp"],"versions":[{"number":"3.0.1","date":"2015-04-03T07:55:19.408Z"},{"number":"3.0.2","date":"2015-04-03T09:19:10.139Z"},{"number":"3.0.3","date":"2015-04-03T09:24:10.015Z"},{"number":"3.0.4","date":"2015-04-03T09:30:13.290Z"},{"number":"3.0.5","date":"2015-04-03T09:36:52.105Z"},{"number":"3.0.6","date":"2015-04-03T12:57:03.878Z"}],"readme":"# node-opencv \n\n[![Build Status](https://secure.travis-ci.org/peterbraden/node-opencv.png)](http://travis-ci.org/peterbraden/node-opencv)\n\n\n[OpenCV](http://opencv.willowgarage.com/wiki/) bindings for Node.js. OpenCV is\nthe defacto computer vision library - by interfacing with it natively in node,\nwe get powerful real time vision in js.\n\nPeople are using node-opencv to fly control quadrocoptors, detect faces from\nwebcam images and annotate video streams. If you're using it for something\ncool, I'd love to hear about it!\n\n## Install\n\nYou'll need OpenCV 2.3.1 or newer installed before installing node-opencv.\n\nThen:\n\n```bash\n$ npm install opencv\n```\n\n## Examples\nRun the examples from the parent directory.\n\n### Face Detection\n\n```javascript\ncv.readImage(\"./examples/files/mona.png\", function(err, im){\n  im.detectObject(cv.FACE_CASCADE, {}, function(err, faces){\n    for (var i=0;i<faces.length; i++){\n      var x = faces[i]\n      im.ellipse(x.x + x.width/2, x.y + x.height/2, x.width/2, x.height/2);\n    }\n    im.save('./out.jpg');\n  });\n})\n```\n\n\n## API Documentation\n\n### Matrix\n\nThe [matrix](http://opencv.jp/opencv-2svn_org/cpp/core_basic_structures.html#mat) is the most useful\nbase datastructure in OpenCV. Things like images are just matrices of pixels.\n\n#### Creation\n\n```javascript\nnew Matrix(rows, cols)\n```\n\nOr if you're thinking of a Matrix as an image:\n\n```javascript\nnew Matrix(height, width)\n```\n\nOr you can use opencv to read in image files. Supported formats are in the OpenCV docs, but jpgs etc are supported.\n\n```javascript\ncv.readImage(filename, function(err, mat){\n  ...\n})\n\ncv.readImage(buffer, function(err, mat){\n  ...\n})\n```\n\nIf you need to pipe data into an image, you can use an ImageDataStream:\n\n```javascript\nvar s = new cv.ImageDataStream()\n\ns.on('load', function(matrix){\n  ...\n})\n\nfs.createReadStream('./examples/files/mona.png').pipe(s);\n```\n\nIf however, you have a series of images, and you wish to stream them into a\nstream of Matrices, you can use an ImageStream. Thus:\n\n```javascript\nvar s = new cv.ImageStream()\n\ns.on('data', function(matrix){\n   ...\n})\n\nardrone.createPngStream().pipe(s);\n```\n\nNote: Each 'data' event into the ImageStream should be a complete image buffer.\n\n\n\n#### Accessing Data\n\n```javascript\nvar mat = new cv.Matrix.Eye(4,4); // Create identity matrix\n\nmat.get(0,0) // 1\n\nmat.row(0)  // [1,0,0,0]\nmat.col(4)  // [0,0,0,1]\n```\n\n##### Save\n\n```javascript\nmat.save('./pic.jpg')\n```\n\nor:\n\n```javascript\nvar buff = mat.toBuffer()\n```\n\n#### Image Processing\n\n```javascript\nim.convertGrayscale()\nim.canny(5, 300)\nim.houghLinesP()\n```\n\n\n#### Simple Drawing\n\n```javascript\nim.ellipse(x, y)\nim.line([x1,y1], [x2, y2])\n```\n\n#### Object Detection\n\nThere is a shortcut method for \n[Viola-Jones Haar Cascade](http://www.cognotics.com/opencv/servo_2007_series/part_2/sidebar.html) object \ndetection. This can be used for face detection etc.\n\n```javascript\nmat.detectObject(haar_cascade_xml, opts, function(err, matches){})\n```\n\nFor convenience in face recognition, cv.FACE_CASCADE is a cascade that can be used for frontal face recognition.\n\nAlso:\n\n```javascript\nmat.goodFeaturesToTrack\n```\n\n#### Contours\n\n```javascript\nmat.findCountours\nmat.drawContour\nmat.drawAllContours\n```\n\n### Using Contours\n\n`findContours` returns a `Contours` collection object, not a native array. This object provides\nfunctions for accessing, computing with, and altering the contours contained in it.\nSee [relevant source code](src/Contours.cc) and [examples](examples/)\n\n```javascript\nvar contours = im.findContours;\n\n// Count of contours in the Contours object\ncontours.size();\n\n// Count of corners(verticies) of contour `index`\ncontours.cornerCount(index);\n\n// Access vertex data of contours\nfor(var c = 0; c < contours.size(); ++c) {\n  console.log(\"Contour \" + c);\n  for(var i = 0; i < contours.cornerCount(c); ++i) {\n    var point = contours.point(c, i);\n    console.log(\"(\" + point.x + \",\" + point.y + \")\");\n  }\n}\n\n// Computations of contour `index`\ncontours.area(index);\ncontours.arcLength(index, isClosed);\ncontours.boundingRect(index);\ncontours.minAreaRect(index);\ncontours.isConvex(index);\n\n// Destructively alter contour `index`\ncontours.approxPolyDP(index, epsilon, isClosed);\ncontours.convexHull(index, clockwise);\n```\n\n## MIT License\nThe library is distributed under the MIT License - if for some reason that\ndoesn't work for you please get in touch.\n\n","created":"2015-04-03T07:55:19.408Z","modified":"2015-04-03T12:57:03.878Z","lastPublisher":{"name":"oneminute","email":"oneminute3b@gmail.com"},"owners":[{"name":"oneminute","email":"oneminute3b@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"opencv-copy","_nodeVersion":"0.10.31","_npmUser":{"name":"oneminute","email":"oneminute3b@gmail.com"},"_npmVersion":"2.7.3","_rev":"1-c20090135717ac62ffdb071b8a28e85c","_shasum":"33aa2c09942acbc2085db3660b2856e62fbae1d8","author":{"name":"Peter Braden","email":"peterbraden@peterbraden.co.uk"},"bugs":{"url":"https://github.com/oneminute/node-opencv/issues"},"directories":{},"dist-tags":{"latest":"3.0.6"},"dist":{"shasum":"33aa2c09942acbc2085db3660b2856e62fbae1d8","tarball":"http://registry.npmjs.org/opencv-copy/-/opencv-copy-3.0.6.tgz"},"maintainers":[{"name":"oneminute","email":"oneminute3b@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-04-03T12:57:03.878Z","created":"2015-04-03T07:55:19.408Z","3.0.1":"2015-04-03T07:55:19.408Z","3.0.2":"2015-04-03T09:19:10.139Z","3.0.3":"2015-04-03T09:24:10.015Z","3.0.4":"2015-04-03T09:30:13.290Z","3.0.5":"2015-04-03T09:36:52.105Z","3.0.6":"2015-04-03T12:57:03.878Z"}}}