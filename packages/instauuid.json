{"name":"instauuid","version":"1.0.4","description":"Instagram-style UUID Generator for Node","main":"index.js","scripts":{"test":"mocha test","install":"node-gyp rebuild"},"repository":"https://github.com/therne/instauuid","license":"MIT","gypfile":true,"dependencies":{"long":"^2.2.3","nan":"^2.0.9"},"homepage":"https://github.com/therne/instauuid","devDependencies":{"mocha":"^2.3.4","should":"^8.2.0"},"gitHead":"3a0e826a3dee12b2f1e4885f32be1ba57c54e4b5","versions":[{"number":"1.0.0","date":"2015-02-05T17:07:05.412Z"},{"number":"1.0.1","date":"2015-02-06T17:24:14.800Z"},{"number":"1.0.2","date":"2015-02-14T17:47:14.803Z"},{"number":"1.0.3","date":"2016-02-28T18:46:48.977Z"},{"number":"1.0.4","date":"2016-02-28T19:11:57.298Z"}],"readme":"# InstaUUID\n\n[![NPM Version][npm-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n\nSee [Instagram Engineering Blog - Sharding IDs at Instagram](http://instagram-engineering.tumblr.com/post/10853187575/sharding-ids-at-instagram)\n\nInstagram-Style Compact UUID generator for Node.js.\n\nGenerates 8-byte UUID that consists of:\n- 41 bits for time in milliseconds (we can use it until 2084/09/06 lunch time comes)\n- 13 bits for additional information - Instagram used it to store the logical shard ID\n- 10 bits that represent an auto-incrementing sequence.\n - *Note that you need to implement your own counter per machine - In default, we fill<br>this space with random values.*\n\nBenefits of this library:\n- **Qualified** - Because this library implements Instagram UUID Spec. and instagram rocks.\n- **Compact Size** - The raw hash is only 8bytes, and Base64 hash is only 11 bytes!\n- **URL-Safe** - The default Base64 encoding does not contain URL-non-safe characters.\n\n## Installation\n```\n$ npm install --save instauuid\n```\n\n\n## Examples\n\n```js\nvar instauuid = require('instauuid');\n\ninstauuid(); // Default: Base64 - ex) \"paZhL98FBXs\"\ninstauuid('hex'); // Hex String - ex) \"a5afe16d768b4cdf\"\ninstauuid('decimal'); // Decimal String - ex) \"11939009410687035132\"\n\n// Using InstaUUID with MySQL\n// See \"Integrating with your database\" Section.\nvar sql = 'INSERT INTO users (id, name) VALUES (??, ??)';\nsql = mysql.format(instauuid('decimal'), 'John Doe');\n\n// You can add some information to prevent hash conflicts. (recommended for big systems)\ninstauuid({ type: 'hex', additional: shardId, countNumber: 1022 });\n```\n\n## Integrating with your database\n\n### MySQL\n\nFirst, You need to set your primary key datatype to UNSIGNED BIGINT.\n```sql\nCREATE TABLE foo (\n   id   BIGINT UNSIGNED NOT NULL UNIQUE PRIMARY KEY,\n   ....\n);\n```\n\n#####[node-mysql](https://github.com/felixge/node-mysql/) Driver\n- Set 'supportBigNumbers', 'bigNumberStrings' options to true when connecting. \n - *This option makes you to read BIGINT as String, because UUID is too big that<br>JavaScript Number type cannot support. Number can handle up to 2^53 but we're using 2^64 range (Unsigned Int64)*\n- I recommend to use [Long](https://github.com/dcodeIO/Long.js) or [bignumber.js](https://github.com/MikeMcl/bignumber.js/) Library when handling BIGINT data.\n- Use 'decimal' type when generating UUID. (See above example)\n\n### Redis\nRedis stores Integer as String, so you don't need to worry about anything.\n\n### MongoDB\nJust use MongoDB ObjectId.\n\n\n## Documentation\n### instauuid(options)\nGenerates and returns UUID.\n\n* `options` (object || string): Generating options. (or return type)\n\nOption      | Description                                                  | Range | Default\n-------     | ------------------------------------------------------------ | ---- | ------\ntype        | Return type of generated ID. See below for more details. | - | 'base64'\nadditional  | Additional Unique Information (ex: Logical Shard ID) | 0 ~ 8191 | *(current time as Î¼s)*\ncountNumber | Auto-incrementing sequence - to prevent conflicting  | 0 ~ 1023 | *(Random)*\n\n##### Return types\nName     | Description            | Type     |\n---------| ---                    | ---      |\nbase64   | Base64 Hash (Note that this is not pure Base64. *We uses URL-Safe Base64URL*) | *String* |\ndecimal  | Decimal **String**     | *String* |\nnumber   | *(Same as above)*        | -        |\nhex      | Hex String             | *String* |\nhash     | *(Same as above)*        | -        |\nlong     | [Long](https://github.com/dcodeIO/Long.js) object | *Long* |\nbuffer   | [Buffer](http://nodejs.org/api/buffer.html) object | *Buffer*|\nbuffer_be| Big-Endian encoded buffer | *Buffer* |\nraw      | Raw ASCII Bytes - Don't recommend. | *String* |\n\n#### License: MIT\n#### Author: [Hyojun Kim](http://github.com/retail3210)\n\n[npm-image]: https://img.shields.io/npm/v/instauuid.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/instauuid\n[node-version-image]: https://img.shields.io/badge/node.js-%3E%3D_0.6-brightgreen.svg?style=flat-square\n[node-version-url]: http://nodejs.org/download/\n[downloads-image]: http://img.shields.io/npm/dm/instauuid.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/instauuid\n\n","starsCount":1,"created":"2015-02-05T17:07:05.412Z","modified":"2016-02-28T19:11:57.298Z","lastPublisher":{"name":"vista","email":"retail3210@gmail.com"},"owners":[{"name":"vista","email":"retail3210@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"instauuid","_nodeVersion":"5.6.0","_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/instauuid-1.0.4.tgz_1456686716285_0.8909979409072548"},"_npmUser":{"name":"vista","email":"retail3210@gmail.com"},"_npmVersion":"3.6.0","_rev":"1-50694459127170ed84b48a18beaf8591","_shasum":"6cbbd38d97d898f3630d72f8b09bb5c70c512644","author":{"name":"therne"},"bugs":{"url":"https://github.com/therne/instauuid/issues"},"directories":{},"dist-tags":{"latest":"1.0.4"},"dist":{"shasum":"6cbbd38d97d898f3630d72f8b09bb5c70c512644","tarball":"http://registry.npmjs.org/instauuid/-/instauuid-1.0.4.tgz"},"maintainers":[{"name":"vista","email":"retail3210@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-02-28T19:11:57.298Z","created":"2015-02-05T17:07:05.412Z","1.0.0":"2015-02-05T17:07:05.412Z","1.0.1":"2015-02-06T17:24:14.800Z","1.0.2":"2015-02-14T17:47:14.803Z","1.0.3":"2016-02-28T18:46:48.977Z","1.0.4":"2016-02-28T19:11:57.298Z"},"users":{"boto":true}}}