{"name":"clr","version":"0.0.18","engines":{"node":">=0.12 <8"},"description":"Node.js binding for .NET Framework API","repository":"https://github.com/AtsushiSuzuki/node-clr","main":"lib/clr.js","scripts":{"test":"mocha","install":"node-gyp rebuild"},"dependencies":{"bindings":"^1.2.1","nan":"^2.4.0","underscore":"^1.8.3"},"devDependencies":{"mocha":"*"},"keywords":[".NET","CLR","Common Language Runtime","API Bridge"],"license":"(ISC OR WTFPL)","gypfile":true,"gitHead":"f672715f3764b1145625285e348aaa9cd951c37f","homepage":"https://github.com/AtsushiSuzuki/node-clr#readme","versions":[{"number":"0.0.1","date":"2013-07-01T00:02:56.808Z"},{"number":"0.0.2","date":"2013-07-01T12:05:40.112Z"},{"number":"0.0.3","date":"2013-07-03T14:53:52.133Z"},{"number":"0.0.4","date":"2013-07-07T16:05:11.495Z"},{"number":"0.0.5","date":"2013-07-07T16:56:49.177Z"},{"number":"0.0.6","date":"2013-07-08T15:28:34.390Z"},{"number":"0.0.7","date":"2013-07-10T12:11:46.147Z"},{"number":"0.0.8","date":"2013-07-12T17:11:34.642Z"},{"number":"0.0.9","date":"2013-07-13T11:08:27.351Z"},{"number":"0.0.10","date":"2013-07-20T19:31:30.809Z"},{"number":"0.0.11","date":"2014-04-29T09:49:20.969Z"},{"number":"0.0.12","date":"2014-04-30T02:50:43.955Z"},{"number":"0.0.13","date":"2015-03-31T15:46:56.991Z"},{"number":"0.0.13-2","date":"2015-03-31T15:56:18.414Z"},{"number":"0.0.14","date":"2015-09-12T03:30:38.427Z"},{"number":"0.0.15","date":"2016-08-06T04:37:18.888Z"},{"number":"0.0.16","date":"2017-02-23T15:02:09.156Z"},{"number":"0.0.17","date":"2017-04-29T01:51:41.265Z"},{"number":"0.0.18","date":"2017-06-19T12:17:39.428Z"}],"readme":"# node-clr : .NET Framework API Binding for Node.js\n\n## Usage:\n\t# npm install clr\n\t# node\n\t\n\t> require('clr').init();\n\t> System.Console.WriteLine('Hello, {0}!', 'world');\n\t'Hello, world!'\n\n\t> var now = new System.DateTime(2013, 7, 1);\n\t> now.ToString();\n\t'2013/07/01 0:00:00'\n\n\t> require('clr').init({ assemblies: [ 'System.Windows.Forms' ] });\n\t> with (System.Windows.Forms) {\n\t>   var f = new Form();\n\t>   \n\t>   var p = new FlowLayoutPanel();\n\t>   f.Controls.Add(p);\n\t>   \n\t>   var t = new TextBox();\n\t>   t.Text = 'world';\n\t>   p.Controls.Add(t);\n\t>   \n\t>   var b = new Button();\n\t>   b.Text = 'Greet';\n\t>   b.Click.add(function (thiz, ea) {\n\t>     console.log('clicked');\n\t>     MessageBox.Show('Hello, ' + t.Text + '!');\n\t>   });\n\t>   p.Controls.Add(b);\n\t> \n\t>   Application.Run(f);\n\t> }\n\t(running WinForm application)\n\n\n## Prerequisites:\n\nThis library is built and tested on following environment:\n\n- Node.js v6.3.1\n- .NET Framework 4.5\n- Visual Studio 2015\n- [Node.js native module build environment](https://github.com/TooTallNate/node-gyp)\n\n\n## clr.init([options])\n\nInitialize CLR rutime with given options. Returns global `namespace`.\n\n- `options` {Object}\n\t- `assemblies` {Array} - An array of assembly name (partial name, full name or absolute path to .dll/.exe).\n\t  Defaults to `['mscorlib', 'System', 'System.Core']`.\n\t- `global` {boolean} - if `true`, CLR global namespace objects are injected into javascript global object.\n\t  Defaults to `true`.\n\n\n## CLR namespaces\n\n- {Object}\n\nCLR namespace objects contain nested namespaces or types.\n\n\n## CLR types\n\n- {Function}\n\nCLR type functions work as constructor for corresponding CLR types.\nThe constructor returns wrapped CLR object.\n\n\tvar now = new System.DateTime(2013, 7, 1);\n\nThe code above invokes CLR constructor [`DateTime (Int32, Int32, Int32)`](http://msdn.microsoft.com/ja-jp/library/xcfzdy4x.aspx)\nand returns {Object} that wraps `DateTime` instance.\n\n\nCLR type also contains static members.\n\n\tvar now = System.DateTime.Now;\n\nThe code above invokes CLR static property getter [`DateTime.Now`](http://msdn.microsoft.com/ja-jp/library/system.datetime.now.aspx).\n\n\n### type.of([type])\n\nBind generic parameters to type and returns bound CLR type.\n\n\tvar list = new (System.Collections.Generic.List.of(System.Int32))();\n\n\n## CLR objects\n\n- {Object}\n\nJavascript object that wraps CLR instance, which contains instance members.\n\n\tvar now = System.DateTime.Now;\n\tnow.ToString();\n\t\n\t> '2013/07/01 0:00:00'\n\n\n## CLR methods\n\n- {Function}\n\nCLR methods can be invoked as Javascript function. Arguments and return value are marshalled as conventions below.\n\n\tSystem.Console.WriteLine('Hello, {0}!', 'world');\n\t\n\t> 'Hello, world!'\n\n## CLR properties/fields\n\n- {Getter/Setter}\n\nCLR properties/fields are exposed as object's getter or setter function.\n\n\tvar now = System.DateTime.Now;\n\n\n## CLR indexed properties\n\n### obj.get([index])\n\nGet object's default indexed property\n\n\tvar a = \n\n### obj.set([index], value)\n\n\n## CLR events\n\n- {Object}\n\nCLR events can be hooked by `add` and `remove` function.\n\n\n### event.add(handler)\n\nAdd javascript event handler to specified event.\n\n- `handler` {Function}\n\n\n### event.remove(handler)\n\nRemove javascript event handler from event.\n\n** This isn't working right now **\n\n- `handler` {Function}\n\n\n## Marshaling:\n\nV8 => CLR:\n\n- `null` or `undefined` => `null`\n- `boolean` => `System.Boolean`\n- `nubmer` => Any numeric type or `System.Double`\n- `string` => `System.String` or `System.Char` or Enums\n- `Function` => Any delegate type or `System.Func<System.Object[], System.Object>`\n- `Array` => Any type of array or `System.Object[]`\n- `Buffer` => `System.Byte[]`\n- `object` => `System.Dynamic.ExpandoObject`\n\nCLR => V8:\n\n- `null` => `null`\n- `System.Boolean` => `boolean`\n- Any numberic type excepts System.Decimal => `number`\n- `System.String` or `System.Char` => `string`\n- Any other types => CLR wrapped object\n\n\n## Threading:\n\nYou can use .NET threads. All Javascript callback functions are invoked in main event loop.\n\n\tvar t = new System.Threading.Thread(function () {\n\t  console.log('Hello, world!');\n\t});\n\tt.Start();\n\t\n\t> 'Hello, world!' // will be invoked asynchronously, but in main thread\n\n\n## TODO:\n- Unit test\n- Better marshaling\n  - `Object` => class with `DataContractAttribute`\n  - handle cyclic reference\n- New Event api, resembles to EventEmitter\n- Prototype chain which reflects CLR inheritance\n- Generic method\n- cast\n- valueOf (explicit conversion from wrapped CLR object to javascript types)\n- Async invocation\n- Compiler API\n- Enum equality\n","starsCount":1,"created":"2013-07-01T00:02:53.245Z","modified":"2017-06-19T12:17:39.428Z","lastPublisher":{"name":"atsushi_suzuki","email":"possibly.maybe.probably@gmail.com"},"owners":[{"name":"atsushi_suzuki","email":"possibly.maybe.probably@gmail.com"}],"other":{"_attachments":{},"_id":"clr","_nodeVersion":"8.1.2","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/clr-0.0.18.tgz_1497874659167_0.5605575880035758"},"_npmUser":{"name":"atsushi_suzuki","email":"possibly.maybe.probably@gmail.com"},"_npmVersion":"5.0.3","_rev":"5-361aa4ef63c3df96061d0ad472a3a88d","author":{"name":"Atsushi Suzuki","email":"possibly.maybe.probably@gmail.com"},"bugs":{"url":"https://github.com/AtsushiSuzuki/node-clr/issues"},"directories":{},"dist-tags":{"latest":"0.0.18"},"dist":{"integrity":"sha512-8gNTchRnL6KJQM4vCmoOduJMeatpWLPn2V8dmO6MIFrHlWqiCnuRRx1k4zsR314Eb51khDR3tkUlhq7LajTH1g==","shasum":"21e3838d66d5c856318855c34bc45b6bad400817","tarball":"https://registry.npmjs.org/clr/-/clr-0.0.18.tgz"},"maintainers":[{"name":"atsushi_suzuki","email":"possibly.maybe.probably@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2017-06-19T12:17:39.428Z","created":"2013-07-01T00:02:53.245Z","0.0.1":"2013-07-01T00:02:56.808Z","0.0.2":"2013-07-01T12:05:40.112Z","0.0.3":"2013-07-03T14:53:52.133Z","0.0.4":"2013-07-07T16:05:11.495Z","0.0.5":"2013-07-07T16:56:49.177Z","0.0.6":"2013-07-08T15:28:34.390Z","0.0.7":"2013-07-10T12:11:46.147Z","0.0.8":"2013-07-12T17:11:34.642Z","0.0.9":"2013-07-13T11:08:27.351Z","0.0.10":"2013-07-20T19:31:30.809Z","0.0.11":"2014-04-29T09:49:20.969Z","0.0.12":"2014-04-30T02:50:43.955Z","0.0.13":"2015-03-31T15:46:56.991Z","0.0.13-2":"2015-03-31T15:56:18.414Z","0.0.14":"2015-09-12T03:30:38.427Z","0.0.15":"2016-08-06T04:37:18.888Z","0.0.16":"2017-02-23T15:02:09.156Z","0.0.17":"2017-04-29T01:51:41.265Z","0.0.18":"2017-06-19T12:17:39.428Z"},"users":{"jochemstoel":true}}}