{"name":"ttyutil","version":"0.1.2","description":"cross-platform terminal utilities","main":"index.js","scripts":{"test":"mocha tests/run","start":"node build && node-gyp rebuild","install":"node-gyp rebuild"},"repository":"https://github.com/clidejs/ttyutil","keywords":["terminal","console","utility","cross-platform","clide"],"gyp-file":true,"license":"MIT","homepage":"https://github.com/clidejs/ttyutil","dependencies":{"nan":"1.7.0"},"devDependencies":{"chai":"2.1.2","mocha":"2.2.1","node-is":"0.5.2"},"gypfile":true,"gitHead":"800f91a8205bb8e92dc685fe8ef35728e5605278","versions":[{"number":"0.0.1","date":"2015-02-26T21:02:20.402Z"},{"number":"0.0.2","date":"2015-02-26T22:15:16.469Z"},{"number":"0.1.0","date":"2015-03-12T13:30:10.915Z"},{"number":"0.1.1","date":"2015-03-22T11:17:47.180Z"},{"number":"0.1.2","date":"2015-03-23T07:40:54.764Z"}],"readme":"# clidejs/ttyutil [![NPM](https://img.shields.io/npm/v/ttyutil.svg)](https://npmjs.com/package/ttyutil) [![AppVeyor](https://img.shields.io/appveyor/ci/bbuecherl/ttyutil.svg)](https://ci.appveyor.com/project/bbuecherl/ttyutil) [![Build Status](https://img.shields.io/travis/clidejs/ttyutil.svg)](https://travis-ci.org/clidejs/ttyutil) [![GitHub issues](https://img.shields.io/github/issues/clidejs/ttyutil.svg)](https://github.com/clidejs/ttyutil/issues) [![Gitter](https://img.shields.io/badge/gitter-chat-blue.svg)](https://gitter.im/clidejs/ttyutil)\n\n[![NPM](https://nodei.co/npm/ttyutil.png?downloads=true&downloadRank=true)](https://nodei.co/npm/ttyutil/)\n[![NPM](https://nodei.co/npm-dl/ttyutil.png?months=6&height=3)](https://nodei.co/npm/ttyutil/)\n\n## About\n\nA terminal utility module for node.js serving a cross-platform console api.\nWorks with Node.js v0.8 and above.\n\n## [Changelog](https://github.com/clidejs/ttyutil/tree/master/CHANGELOG.md)\n\n## Note\n\nThis project is still under development and thus the API may change, please\nreport any bugs [here](https://github.com/clidejs/ttyutil/issues), and feel free\nto make feature requests.\n\n## Installation\n\nSince this is a native c++ node.js addon, you will need these tools to build the\npackages (see [node-gyp](https://github.com/TooTallNate/node-gyp#installation)):\n\n - python (v2.7+, but not 3.x)\n - on unix:\n    - make\n    - c++ compiler (e.g. gcc)\n - on mac:\n    - xcode command line tools\n - on windows:\n    - Visual Studio 2010 or 2013\n\nSimply add **ttyutil** to the dependencies of your project:\n\n``` bash\nnpm install --save ttyutil\n```\n\nAnd require it anywhere in your codebase:\n\n``` js\nvar TTYUtil = require(\"ttyutil\");\n```\n\n## Usage\n\n### `TTYUtil`\n\nThe `TTYUtil` exposes the `TTYUtil` constructor (`var ttyu = new TTYUtil()`).\nThis creates the `ttyu` object which is used to interact with the terminal.\n\n#### `ttyu.on(event, listener)`\n\nAdds an event `listener` callback for the `event`(see TTYUtil.EVENT).\n\n#### `ttyu.removeListener(event, listener)`\n\nRemove the event `listener` callback from the `event` (see TTYUtil.EVENT).\n\n#### `ttyu.off(event, listener)`\n\nShortcut for `ttyu.removeListener(event, listener)`.\n\n#### `ttyu.start()`\n\nStart emitting input events (mouse, key and resize events) to the listeners\nattached by `tty.on(event, listener)`.\n\n#### `ttyu.stop()`\n\nStops emitting input events.\n\n#### `ttyu.running`\n\nBoolean flag indicating if input events are emitted (`true` when `ttyu.start()`\nwas executed). *read-only*\n\n#### `ttyu.width`\n\nInteger amount of horizontal character space in the terminal. *read-only*\n\n#### `ttyu.height`\n\nInteger amount of vertical character space in the terminal. *read-only*\n\n#### `ttyu.mode`\n\nInteger identifier for current terminal mode (can be one of TTYUtil.MODE).\n*read-only*\n\n#### `ttyu.colors`\n\nInteger amount of colors available in the terminal (16-256). *read-only*\n\n#### `ttyu.x`\n\nCurrent x-position of the terminal cursor.\n\n#### `ttyu.y`\n\nCurrent y-position of the terminal cursor.\n\n#### `ttyu.goto(x, y)`\n\nFunction to set the current cursor position to (`x`, `y`).\n\n#### `ttyu.write(chunk, fg, bg)`\n\nFunction to write a string `chunk` at the current cursor position (`ttyu.x`,\n`ttyu.y`) with the foreground color `fg` and the background color `bg` to the\nterminal buffer. `fg` and `bg` can be terminal color codes, hexadecimal strings\n(e.g. `\"#FF0000\"`) or rgb strings (e.g. `\"rgb(255,0,0)\"`).\n\n#### `ttyu.prepare(chunk, fg, bg)`\n\nFunction to prepare a string `chunk` with the foreground color `fg` and\nbackground color `bg`. Works like `ttyu.write(chunk, fg, bg)`, but returns the\nformatted string without printing it to the terminal.\n\n#### `ttyu.beep()`\n\nFunction to create a warning sound or visual warning effect.\n\n#### `ttyu.clear(x, y, width, height)`\n\nFunction to clear a part of the terminal buffer. `x` and `y` describe the\ntop-left corner of the rectangle and `width` and `height` define the size of the\nrectangle to clear. When called without arguments, this function will clear the\ncomplete (visible) terminal buffer.\n\n#### `ttyu.color(str)`\n\nFunction to get the terminal color code from `str`, a hexadecimal string\n(e.g. `\"#FF0000\"`) or rgb string (e.g. `\"rgb(255,0,0)\"`).\n\n### `TTYUtil.EVENT`\n\nThis object wraps all input events as constants:\n\n- `TTYUtil.EVENT.ERROR` {`String`}: `error` identifier for error events\n- `TTYUtil.EVENT.SIGNAL` {`String`}: `signal` identifier for process signal\nevents\n- `TTYUtil.EVENT.KEY` {`String`}: `key` identifier for key events\n- `TTYUtil.EVENT.RESIZE` {`String`}: `resize` identifier for resize events\n- `TTYUtil.EVENT.MOUSEDOWN` {`String`}: `mousedown` identifier for mousedown\nevents (mouse button pressed)\n- `TTYUtil.EVENT.MOUSEUP` {`String`}: `mouseup` identifier for mouse up events\n(mouse button released)\n- `TTYUtil.EVENT.MOUSEMOVE` {`String`}: `mousemove` identifier for mouse move\nevents\n- `TTYUtil.EVENT.MOUSEWHEEL` {`String`}: `mousewheel` identifier for mouse\nwheel events (vertical scroll events)\n- `TTYUtil.EVENT.MOUSEHWHEEL` {`String`}: `mousehwheel` identifier for the\nmouse hwheel events (horizontal scroll events)\n\n### `TTYUtil.MODE`\n\nThis object wraps all terminal modes as constants:\n\n- `TTYUtil.MODE.CMD` {`Integer`}: `0` identifier for the windows cmd.exe\n- `TTYUtil.MODE.VT102` {`Integer`}: `1` identifier for VT102 compilant terminals\n(e.g. iTerm2 for OSX or xTerm for X11)\n- `TTYUtil.MODE.VT100` {`Integer`}: `2` identifier for VT100 compilant terminals\n(e.g. Terminal.app for OSX)\n\n### `TTYUtil.MOUSE`\n\nThis object wraps all mouse buttons identifier as constants:\n\n- `TTYUtil.MOUSE.LEFT` {`Integer`}: `1` left-most mouse button\n- `TTYUtil.MOUSE.LEFT2` {`Integer`}: `4` second left-most mouse button\n- `TTYUtil.MOUSE.LEFT3` {`Integer`}: `8` thrid left-most mouse button\n- `TTYUtil.MOUSE.LEFT4` {`Integer`}: `16` fourth left-most mouse button\n- `TTYUtil.MOUSE.RIGHT` {`Integer`}: `2` right-most mouse button\n\n### `TTYUtil.CTRL`\n\nThis object wraps all control key identifier as constants:\n\n- `TTYUtil.CTRL.NULL` {`Integer`}: `0` no control key is active\n- `TTYUtil.CTRL.ALT` {`Integer`}: `1` the alt key is pressed\n- `TTYUtil.CTRL.CTRL` {`Integer`}: `2` the ctrl key is pressed\n- `TTYUtil.CTRL.SHIFT` {`Integer`}: `4` the shift key is pressed\n- `TTYUtil.CTRL.ENHANCED` {`Integer`}: `8` the enhanced key is pressed\n- `TTYUtil.CTRL.CMD` {`Integer`}: `16` the cmd key is pressed (OSX)\n- `TTYUtil.CTRL.NUMLOCK` {`Integer`}: `32` numlock is activated\n- `TTYUtil.CTRL.SCROLLLOCK` {`Integer`}: `64` scrolllock is activated\n- `TTYUtil.CTRL.CAPSLOCK` {`Integer`}: `128` capslock is activated\n\n### `TTYUtil.SIGNAL`\n\nThis object contains a list of all signals that can be catched by ttyutil:\n\n- `TTYUtil.SIGNAL.SIGINT` {`String`}: `SIGINT` interrupt event (e.g. CTRL+C)\n- `TTYUtil.SIGNAL.SIGTERM` {`String`}: `SIGTERM` termination event\n- `TTYUtil.SIGNAL.SIGPIPE` {`String`}: `SIGPIPE` pipe error event\n- `TTYUtil.SIGNAL.SIGHUP` {`String`}: `SIGHUP` terminal close event\n\n### `TTYUtil.WHICH`\n\nThis object wraps all key codes as constants.\n*(see /const.js for the complete list)*\n\n## Test\n\nrun the tests using `npm test`. check out /tests for test cases.\n\n## Example\n\nsee the /examples folder\n\n## License: MIT\n\nCopyright (c) 2015 [Bernhard BÃ¼cherl](https://github.com/bbuecherl)\n\n--------------------------------------------------------------------------------\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","created":"2015-02-26T21:02:20.402Z","modified":"2015-03-23T07:40:54.764Z","lastPublisher":{"name":"bbuecherl","email":"bernhard.buecherl@gmail.com"},"owners":[{"name":"bbuecherl","email":"bernhard.buecherl@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"ttyutil","_nodeVersion":"0.12.0","_npmUser":{"name":"bbuecherl","email":"bernhard.buecherl@gmail.com"},"_npmVersion":"2.7.1","_rev":"1-6d7e85def58628291f648e3f12cf4c0c","_shasum":"39fae3fe3649ffe903f1aa139a44868ca5704635","author":{"name":"Bernhard BÃ¼cherl","email":"bernhard.buecherl@gmail.com"},"bugs":{"url":"https://github.com/clidejs/ttyutil/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"39fae3fe3649ffe903f1aa139a44868ca5704635","tarball":"http://registry.npmjs.org/ttyutil/-/ttyutil-0.1.2.tgz"},"maintainers":[{"name":"bbuecherl","email":"bernhard.buecherl@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-03-23T07:40:54.764Z","created":"2015-02-26T21:02:20.402Z","0.0.1":"2015-02-26T21:02:20.402Z","0.0.2":"2015-02-26T22:15:16.469Z","0.1.0":"2015-03-12T13:30:10.915Z","0.1.1":"2015-03-22T11:17:47.180Z","0.1.2":"2015-03-23T07:40:54.764Z"}}}