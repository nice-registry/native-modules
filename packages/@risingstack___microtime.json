{"name":"@risingstack/microtime","version":"2.1.9","description":"Get the current time in microseconds","homepage":"https://github.com/RisingStack/node-microtime","repository":"https://github.com/RisingStack/node-microtime","main":"./index","license":"MIT","engines":{"node":">= 0.8.0"},"scripts":{"preinstall":"node -e 'process.exit(0)'","install":"node-pre-gyp install --fallback-to-build","rebuild":"node-pre-gyp rebuild","test":"node test.js","format":"clang-format -i src/microtime.cc","lint":"standard && clang-format -output-replacements-xml src/microtime.cc | (! grep -q '<replacement ')"},"dependencies":{"nan":"^2.5.1","@risingstack/node-pre-gyp":"^0.6.35"},"devDependencies":{"aws-sdk":"^2.0.0","clang-format":"^1.0.38","standard":"^7.0.1"},"binary":{"module_name":"microtime","module_path":"./build/@risingstack/{module_name}/v{version}/{node_abi}-{platform}-{arch}/","remote_path":"repo/v1/@risingstack/{module_name}/dist/v{version}/","package_name":"{node_abi}-{platform}-{arch}.tar.gz","host":"https://oss.risingstack.com/"},"gitHead":"7041580b3b0cb88054716a75376871c20c64c7a9","versions":[{"number":"2.1.3","date":"2017-03-29T11:20:20.187Z"},{"number":"2.1.4","date":"2017-03-29T14:33:02.335Z"},{"number":"2.1.5","date":"2017-03-30T13:17:47.122Z"},{"number":"2.1.6","date":"2017-03-30T13:59:57.442Z"},{"number":"2.1.8","date":"2017-06-19T08:23:26.682Z"},{"number":"2.1.9","date":"2017-08-04T10:44:51.193Z"}],"readme":"# node-microtime\n\n[![Travis Build](https://img.shields.io/travis/https://img.shields.io/travis/RisingStack/node-microtime.svg?label=linux,%20os%20x)](https://travis-ci.org/wadey/node-microtime)\n[![AppVeyor Build](https://img.shields.io/appveyor/ci/WadeSimmons/node-microtime/master.svg?label=windows)](https://ci.appveyor.com/project/WadeSimmons/node-microtime)\n[![npm](https://img.shields.io/npm/dm/@risingstack/microtime.svg)](https://www.npmjs.com/package/@risingstack/microtime)\n[![npm](https://img.shields.io/npm/v/@risingstack/microtime.svg)](https://www.npmjs.com/package/@risingstack/microtime)\n\nDate.now() will only give you accuracy in milliseconds. This module calls\n`gettimeofday(2)` to get the time in microseconds and provides it in a few\ndifferent formats. The same warning from that function applies:\n_The resolution of the system clock is hardware dependent, and the time may\nbe updated continuously or in ``ticks.''_\n\n# Installation\n\n    npm install @risingstack/microtime\n\n# Usage\n\n### microtime.now()\n\nGet the current time in microseconds as an integer. Since JavaScript can only\nrepresent integer values accurately up to `Math.pow(2, 53)`, this value will\nbe accurate up to _Tue, 05 Jun 2255 23:47:34 GMT_.\n\n### microtime.nowDouble()\n\nGet the current time in seconds as a floating point number with microsecond\naccuracy (similar to `time.time()` in Python and `Time.now.to_f` in Ruby).\n\n### microtime.nowStruct()\n\nGet the current time and return as a list with seconds and microseconds (matching the return value of `gettimeofday(2)`).\n\n# Example\n\n    > var microtime = require('microtime')\n    > microtime.now()\n    1297448895297028\n    > microtime.nowDouble()\n    1297448897.600976\n    > microtime.nowStruct()\n    [ 1297448902, 753875 ]\n\n## Estimating clock resolution\n\nStarting with version 0.1.3, there is a test script that tries to guess the clock resolution. You can run it with `npm test microtime`. Example output:\n\n    microtime.now() = 1298960083489806\n    microtime.nowDouble() = 1298960083.511521\n    microtime.nowStruct() = [ 1298960083, 511587 ]\n\n    Guessing clock resolution...\n    Clock resolution observed: 1us\n\n## Warning for Cygwin users\n\nIt appears that Cygwin only implements `gettimeofday(2)` with [millisecond accuracy](http://old.nabble.com/gettimeofday---millisecond-accuracy-p21085475.html).\n","created":"2017-03-29T11:20:20.187Z","modified":"2017-08-11T10:23:28.429Z","lastPublisher":{"name":"gergelyke","email":"mail@nemethgergely.com"},"owners":[{"email":"miklos.bertalan@risingstack.com","name":"solkimicreb"},{"email":"tamas.hodi89@gmail.com","name":"tamas.hodi"},{"email":"david.szakallas@gmail.com","name":"midiparse"},{"email":"abelerdesz@gmail.com","name":"abelerdesz"},{"email":"p.czibik@gmail.com","name":"peteyycz"},{"email":"kevin.purnelle@gmail.com","name":"aodev"},{"email":"peter@risingstack.com","name":"hekike"},{"email":"andras.toth93@gmail.com","name":"tothandras"},{"email":"mail@nemethgergely.com","name":"gergelyke"},{"email":"info@risingstack.com","name":"risingnpm"}],"other":{"_attachments":{},"_from":".","_id":"@risingstack/microtime","_nodeVersion":"6.11.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/microtime-2.1.9.tgz_1501843490294_0.6248968963045627"},"_npmUser":{"name":"gergelyke","email":"mail@nemethgergely.com"},"_npmVersion":"3.10.10","_rev":"13-44db95cda20a9f7f3f2fc0e8c63efb91","_shasum":"16450279fec474adabebcb1a571cb9fccdc977f1","author":{"name":"Wade Simmons","email":"wade@wades.im","url":"http://wades.im/mons"},"bugs":{"url":"https://github.com/RisingStack/node-microtime/issues"},"contributors":[{"name":"David Szakallas","email":"david.szakallas@risingstack.com"}],"directories":{},"dist-tags":{"latest":"2.1.9"},"dist":{"shasum":"16450279fec474adabebcb1a571cb9fccdc977f1","tarball":"https://registry.npmjs.org/@risingstack/microtime/-/microtime-2.1.9.tgz"},"maintainers":[{"email":"miklos.bertalan@risingstack.com","name":"solkimicreb"},{"email":"tamas.hodi89@gmail.com","name":"tamas.hodi"},{"email":"david.szakallas@gmail.com","name":"midiparse"},{"email":"abelerdesz@gmail.com","name":"abelerdesz"},{"email":"p.czibik@gmail.com","name":"peteyycz"},{"email":"kevin.purnelle@gmail.com","name":"aodev"},{"email":"peter@risingstack.com","name":"hekike"},{"email":"andras.toth93@gmail.com","name":"tothandras"},{"email":"mail@nemethgergely.com","name":"gergelyke"},{"email":"info@risingstack.com","name":"risingnpm"}],"readmeFilename":"README.md","time":{"modified":"2017-08-11T10:23:28.429Z","created":"2017-03-29T11:20:20.187Z","2.1.3":"2017-03-29T11:20:20.187Z","2.1.4":"2017-03-29T14:33:02.335Z","2.1.5":"2017-03-30T13:17:47.122Z","2.1.6":"2017-03-30T13:59:57.442Z","2.1.8":"2017-06-19T08:23:26.682Z","2.1.9":"2017-08-04T10:44:51.193Z"}}}