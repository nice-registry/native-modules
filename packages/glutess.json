{"name":"glutess","description":"gluTessXXX bindings for node.js","version":"0.2.5","keywords":["glu","glutess","opengl"],"homepage":"https://github.com/timknip/glutess","repository":"https://github.com/timknip/glutess","main":"./index.js","dependencies":{"nan":"^2.1.0","bindings":"^1.2.1"},"license":"MIT","engines":{"node":">=0.8.0"},"scripts":{"install":"node-gyp rebuild"},"gypfile":true,"gitHead":"6eb58a9230e52f64df67e9f72a1d1e2f9578c6da","versions":[{"number":"0.1.0","date":"2016-01-04T16:43:52.483Z"},{"number":"0.2.0","date":"2016-01-04T16:51:03.389Z"},{"number":"0.2.1","date":"2016-01-04T17:00:02.909Z"},{"number":"0.2.2","date":"2016-01-04T17:17:56.751Z"},{"number":"0.2.3","date":"2016-01-04T17:32:05.470Z"},{"number":"0.2.4","date":"2016-01-04T18:34:00.430Z"},{"number":"0.2.5","date":"2016-01-17T17:07:01.506Z"}],"readme":"# GluTess\r\n\r\ngluTessXXX bindings for node.js\r\n\r\nTessellation is subdividing concave polygons or polygons with intersecting edges\r\ninto convex polygons. Since OpenGL accepts only convex polygons for rendering,\r\nthese non-convex polygons must be tessellated before rendering.\r\n\r\n![alt tag](http://content.screencast.com/users/TimKnip/folders/Jing/media/c8d3e7e5-f4cd-42b6-92c0-7477309373c4/2016-01-04_1815.png \"GluTess\")\r\n\r\n## Requirements\r\n\r\n1.  node >= 0.8.0\r\n2.  npm >= 1.4.1\r\n\r\n## Install\r\n\r\n```\r\nnpm install glutess\r\n```\r\nor\r\n```\r\ngit clone git@github.com:timknip/glutess.git\r\ncd glutess\r\nnpm install\r\n```\r\n\r\n## Usage\r\n\r\n```\r\nvar glutess = require('glutess');\r\n\r\n// Create a tesselator with vertexSize = 3\r\nvar gluTess = new glutess.GluTess(3);\r\n\r\n// Push a value from 'n' back in array\r\nvar pushPrev = function (v,n) {\r\n  v.push(v[v.length - n]);\r\n}\r\n\r\nvar vertexType = 0;\r\nvar vertexNumber = 0;\r\nvar vertices = [];\r\n\r\n// setup callbacks\r\ngluTess.callback(glutess.BEGIN, function(t) {\r\n  vertexType=t;\r\n  vertexNumber = 0;\r\n});\r\ngluTess.callback(glutess.VERTEX, function(a) {\r\n  if(vertexNumber > 2) {\r\n    if(vertexType === glutess.TRIANGLE_STRIP) {\r\n      if((vertexNumber-3) % 2) {\r\n        pushPrev(vertices, 3);\r\n        pushPrev(vertices, 2);\r\n      } else {\r\n        pushPrev(vertices, 1);\r\n        pushPrev(vertices, 3);\r\n      }\r\n    } else if (vertexType === glutess.TRIANGLE_FAN) {\r\n      pushPrev(verts, 3);\r\n      pushPrev(verts, 2);\r\n    }\r\n  }\r\n  vertices.push(a);\r\n  vertexNumber += 1;\r\n});\r\ngluTess.callback(glutess.END, function(c) {console.log('end')});\r\ngluTess.callback(glutess.ERROR, function() {console.log('error');});\r\ngluTess.callback(glutess.EDGE_FLAG, function() {console.log('edge_flag');});\r\ngluTess.callback(glutess.COMBINE, function(c,v,w,n) {\r\n  var r = new Array(n);\r\n  for(var i=0; i < n; ++i)\r\n    r[i] = v[0][i]*w[0] + v[1][i]*w[1] + v[2][i]*w[2] + v[3][i]*w[3];\r\n  return r;\r\n});\r\n\r\ngluTess.property(glutess.WINDING_RULE, glutess.WINDING_NEGATIVE);\r\n\r\n// a clockwise polygon\r\nvar polyA = [\r\n  [0,0,0],\r\n  [0,10,0],\r\n  [10,10,0],\r\n  [10,0,0]\r\n];\r\n\r\n// a counter clockwise polygon\r\nvar polyB = [\r\n  [5,5,0],\r\n  [15,5,0],\r\n  [15,15,0],\r\n  [5,15,0]\r\n];\r\n\r\nvar i;\r\n\r\ngluTess.beginPolygon();\r\ngluTess.beginContour();\r\nfor (i = 0; i < polyA.length; ++i) {\r\n  gluTess.vertex(polyA[i]);\r\n}\r\ngluTess.endContour();\r\ngluTess.beginContour();\r\nfor (i = 0; i < polyB.length; ++i) {\r\n  gluTess.vertex(polyB[i]);\r\n}\r\ngluTess.endContour();\r\ngluTess.endPolygon();\r\n\r\n// print triangles\r\nfor (i = 0; i < vertices.length; i += 3) {\r\n  console.log(vertices[i]);\r\n  console.log(vertices[i+1]);\r\n  console.log(vertices[i+2]);\r\n  console.log('--------');\r\n}\r\n\r\n```\r\n","created":"2016-01-04T16:43:52.483Z","modified":"2016-01-17T17:07:01.506Z","lastPublisher":{"name":"floorplanner","email":"gertjan@floorplanner.com"},"owners":[{"name":"floorplanner","email":"gertjan@floorplanner.com"}],"other":{"_attachments":{},"_from":".","_id":"glutess","_nodeVersion":"5.3.0","_npmUser":{"name":"floorplanner","email":"gertjan@floorplanner.com"},"_npmVersion":"3.3.12","_rev":"1-05dac2e204bd15200ca630f9344bf199","_shasum":"d9ce672f491e6f82dc0dfd657b16c70e6708c534","author":{"name":"Tim Knip","email":"tim@floorplanner.com"},"bugs":{"url":"https://github.com/timknip/glutess/issues"},"contributors":[{"name":"Sam Littlewood"},{"name":"Tim Knip","email":"tim@floorplanner.com"}],"directories":{},"dist-tags":{"latest":"0.2.5"},"dist":{"shasum":"d9ce672f491e6f82dc0dfd657b16c70e6708c534","tarball":"http://registry.npmjs.org/glutess/-/glutess-0.2.5.tgz"},"maintainers":[{"name":"floorplanner","email":"gertjan@floorplanner.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-17T17:07:01.506Z","created":"2016-01-04T16:43:52.483Z","0.1.0":"2016-01-04T16:43:52.483Z","0.2.0":"2016-01-04T16:51:03.389Z","0.2.1":"2016-01-04T17:00:02.909Z","0.2.2":"2016-01-04T17:17:56.751Z","0.2.3":"2016-01-04T17:32:05.470Z","0.2.4":"2016-01-04T18:34:00.430Z","0.2.5":"2016-01-17T17:07:01.506Z"}}}