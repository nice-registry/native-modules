{"name":"@sourcegraph/oniguruma","main":"./dist/src/oniguruma.js","description":"oniguruma regular expression library","version":"6.2.1-dev-9","licenses":[{"type":"TBD"}],"repository":"https://github.com/atom/node-oniguruma","homepage":"http://atom.github.io/node-oniguruma","keywords":["regex","regexp","re","regular expression","async"],"devDependencies":{"@types/mocha":"^2.2.41","@types/node":"^7.0.18","async":"~0.9.0","jasmine-focused":"~1.0.7","mocha":"^3.3.0","ts-node":"^3.0.4","tslint":"^5.2.0","typescript":"^2.3.2"},"dependencies":{"autogypi":"^0.2.2","nan":"^2.0.9","nbind":"^0.3.12","node-gyp":"^3.6.1"},"scripts":{"autogypi":"autogypi","node-gyp":"node-gyp","emcc-path":"emcc-path","copyasm":"copyasm","ndts":"ndts","build:native":"autogypi -r build && node-gyp -C build/native configure build && copyasm build/native dist/native && ndts build/native > src/lib.d.ts","build:asmjs":"autogypi -r build && node-gyp -C build/asmjs configure build --asmjs=1 && copyasm build/asmjs dist/asmjs && ndts build/asmjs > src/lib.d.ts && echo HACK to make this file strict-valid && sed -i 's/_a=_typeModule/var _a;_a=_typeModule/' dist/asmjs/nbind.js","install":"echo NOT BUILDING NATIVE AND ALWAYS USING ASMJS BUILD npm run build:native","prepublish":"npm run build:asmjs","lint":"tslint --format verbose \"src/**/*.ts\"","test":"tsc -p ./ && mocha --compilers ts:ts-node/register --recursive test/**/*.ts","compile":"tsc -p ./","watch":"tsc -w -p ./","watch:test":"yarn run test -- -w","benchmark":"ts-node benchmark/benchmark.ts"},"gitHead":"2a35a142747912273f51f59e07195320422616d0","versions":[{"number":"6.2.1","date":"2017-05-09T02:16:23.532Z"},{"number":"6.2.1-dev-0","date":"2017-05-09T21:04:31.374Z"},{"number":"6.2.1-dev-1","date":"2017-05-10T07:24:49.119Z"},{"number":"6.2.1-dev-2","date":"2017-05-10T07:30:29.107Z"},{"number":"6.2.1-dev-3","date":"2017-05-10T07:36:45.788Z"},{"number":"6.2.1-dev-4","date":"2017-05-12T06:24:48.361Z"},{"number":"6.2.1-dev-5","date":"2017-07-01T05:28:24.283Z"},{"number":"6.2.1-dev-6","date":"2017-07-01T05:29:24.830Z"},{"number":"6.2.1-dev-7","date":"2017-07-04T02:53:32.942Z"},{"number":"6.2.1-dev-8","date":"2017-07-04T03:10:45.841Z"},{"number":"6.2.1-dev-9","date":"2017-07-04T03:37:53.723Z"}],"readme":"# Oniguruma Node module\n[![macOS Build Status](https://travis-ci.org/atom/node-oniguruma.svg?branch=master)](https://travis-ci.org/atom/node-oniguruma)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/s9twhi451ef2butr/branch/master?svg=true)](https://ci.appveyor.com/project/Atom/node-oniguruma/branch/master)\n[![Dependency Status](https://david-dm.org/atom/node-oniguruma.svg)](https://david-dm.org/atom/node-oniguruma)\n\nNative Node bindings to the Oniguruma regular expressions library.\n\nRead all about Oniguruma regular expressions [here](http://oniguruma.rubyforge.org/oniguruma/files/Syntax_txt.html).\n\nVersion 2.0 of this library added an asynchronous API, the old synchronous\nmethods have been renamed to have a `Sync` suffix.\n\n## Installing\n\n```sh\nnpm install oniguruma\n```\n\n## Building\n  * Clone the repository\n  * Run `npm install`\n  * Run `grunt` to compile the CoffeeScript and native code\n  * Run `npm test` to run the specs\n\n## Using\n\n```coffeescript\n{OnigRegExp, OnigScanner} = require 'oniguruma'\n```\n\n### OnigScanner(patterns)\n\nCreate a new scanner with the given patterns.\n\n`patterns` - An array of string patterns.\n\n### OnigScanner::findNextMatch(string, startPosition, callback)\n\nFind the next match from a given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start at, defaults to `0`.\n\n`callback` - The `(error, match)` function to call when done, `match` will\nnull when there is no match.\n\n#### Example\n\n```coffeescript\nscanner = new OnigScanner(['c', 'a(b)?'])\nscanner.findNextMatch 'abc', (error, match) ->\n  console.log match\n  {\n    index: 1,  # Index of the best pattern match\n    captureIndices: [\n      {index: 0, start: 0, end: 2, length: 2},  # Entire match\n      {index: 1, start: 1, end: 2, length: 1}   # Match of first capture group\n    ]\n  }\n```\n\n### OnigScanner::findNextMatchSync(string, startPosition)\n\nSynchronously find the next match from a given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start at, defaults to `0`.\n\nReturns an object containing details about the match or `null` if no match.\n\n#### Example\n\n```coffeescript\nscanner = new OnigScanner(['c', 'a(b)?'])\nmatch = scanner.findNextMatchSync('abc')\nconsole.log match\n{\n  index: 1,  # Index of the best pattern match\n  captureIndices: [\n    {index: 0, start: 0, end: 2, length: 2},  # Entire match\n    {index: 1, start: 1, end: 2, length: 1}   # Match of first capture group\n  ]\n}\n```\n\n### OnigRegExp(pattern)\n\nCreate a new regex with the given pattern.\n\n`pattern` - A string pattern.\n\n### OnigRegExp::search(string, startPosition, callback)\n\nSearch the string for a match starting at the given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start the search at, defaults to `0`.\n\n`callback` - The `(error, match)` function to call when done, `match` will be\nnull if no matches were found. `match` will be an array of objects for each\nmatched group on a successful search.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nregex.search '!abcdef', (error, match) ->\n  console.log match\n  [\n    {index: 0, start: 1, end: 4, match: 'abc', length: 3}, # Entire match\n    {index: 1, start: 2, end: 3, match: 'b', length: 1}    # Match of first capture group\n  ]\n```\n\n### OnigRegExp::searchSync(string, startPosition)\n\nSynchronously search the string for a match starting at the given position.\n\n`string` - The string to search.\n\n`startPosition` - The optional position to start the search at, defaults to `0`.\n\nReturns an array of objects for each matched group or `null` if no match was\nfound.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nmatch = regex.searchSync('!abcdef')\nconsole.log match\n[\n  {index: 0, start: 1, end: 4, match: 'abc', length: 3}, # Entire match\n  {index: 1, start: 2, end: 3, match: 'b', length: 1}    # Match of first capture group\n]\n```\n\n### OnigRegExp::test(string, callback)\n\nTest if this regular expression matches the given string.\n\n`string` - The string to test against.\n\n`callback` - The `(error, matches)` function to call when done, `matches` will\nbe `true` if at least one match is found, `false` otherwise.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nregex.test 'abcdef', (error, matches) ->\n  console.log matches # true\n```\n\n### OnigRegExp::testSync(string)\n\nSynchronously test if this regular expression matches the given string.\n\n`string` - The string to test against.\n\nReturns `true` if at least one match, `false` otherwise.\n\n#### Example\n\n```coffeescript\nregex = new OnigRegExp('a([b-d])c')\nmatches = regex.testSync('abcdef')\nconsole.log matches # true\n```\n","created":"2017-05-09T02:16:23.532Z","modified":"2017-08-10T03:20:40.585Z","lastPublisher":{"name":"sqs","email":"sqs@sourcegraph.com"},"owners":[{"email":"stephen.gutekanst@gmail.com","name":"slimsag"},{"email":"lindaxie93@gmail.com","name":"lindax"},{"email":"felix.b@outlook.com","name":"felixfbecker"},{"email":"john.rothfels@gmail.com","name":"rothfels"},{"email":"nickdsnyder@gmail.com","name":"nicksnyder"},{"email":"beyang@sourcegraph.com","name":"beyang"},{"email":"sqs@sourcegraph.com","name":"sqs"}],"other":{"_attachments":{},"_from":".","_id":"@sourcegraph/oniguruma","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/oniguruma-6.2.1-dev-9.tgz_1499139473535_0.12854390195570886"},"_npmUser":{"name":"sqs","email":"sqs@sourcegraph.com"},"_npmVersion":"4.6.1","_rev":"13-72c98f340fce0ddfb425b2fbc31139f5","_shasum":"b0e1d5fcbab43099080a66c134b12a02ba90c280","bugs":{"url":"https://github.com/atom/node-oniguruma/issues"},"directories":{},"dist-tags":{"latest":"6.2.1-dev-9"},"dist":{"shasum":"b0e1d5fcbab43099080a66c134b12a02ba90c280","tarball":"https://registry.npmjs.org/@sourcegraph/oniguruma/-/oniguruma-6.2.1-dev-9.tgz"},"maintainers":[{"email":"stephen.gutekanst@gmail.com","name":"slimsag"},{"email":"lindaxie93@gmail.com","name":"lindax"},{"email":"felix.b@outlook.com","name":"felixfbecker"},{"email":"john.rothfels@gmail.com","name":"rothfels"},{"email":"nickdsnyder@gmail.com","name":"nicksnyder"},{"email":"beyang@sourcegraph.com","name":"beyang"},{"email":"sqs@sourcegraph.com","name":"sqs"}],"readmeFilename":"README.md","time":{"modified":"2017-08-10T03:20:40.585Z","created":"2017-05-09T02:16:23.532Z","6.2.1":"2017-05-09T02:16:23.532Z","6.2.1-dev-0":"2017-05-09T21:04:31.374Z","6.2.1-dev-1":"2017-05-10T07:24:49.119Z","6.2.1-dev-2":"2017-05-10T07:30:29.107Z","6.2.1-dev-3":"2017-05-10T07:36:45.788Z","6.2.1-dev-4":"2017-05-12T06:24:48.361Z","6.2.1-dev-5":"2017-07-01T05:28:24.283Z","6.2.1-dev-6":"2017-07-01T05:29:24.830Z","6.2.1-dev-7":"2017-07-04T02:53:32.942Z","6.2.1-dev-8":"2017-07-04T03:10:45.841Z","6.2.1-dev-9":"2017-07-04T03:37:53.723Z"}}}