{"name":"netadon","version":"0.1.2","description":"Optimised UDP networking addon","main":"index.js","scripts":{"install":"node-gyp rebuild","test":"tape test/*.js"},"repository":"https://github.com/Streampunk/netadon","dependencies":{"bindings":"^1.2.1","nan":"^2.5.1"},"gypfile":true,"devDependencies":{"tape":"^4.6.3"},"license":"Apache-2.0","homepage":"https://github.com/Streampunk/netadon#readme","gitHead":"773e2205d4a7355a887395ad412130504ba3031c","versions":[{"number":"0.0.1","date":"2016-05-16T09:20:14.524Z"},{"number":"0.0.2","date":"2016-06-05T19:25:41.776Z"},{"number":"0.0.3","date":"2016-07-12T11:00:49.518Z"},{"number":"0.0.4","date":"2016-09-06T15:50:55.437Z"},{"number":"0.0.5","date":"2016-10-03T09:49:41.080Z"},{"number":"0.0.6","date":"2017-02-07T11:16:11.692Z"},{"number":"0.1.0","date":"2017-02-20T10:09:58.936Z"},{"number":"0.1.2","date":"2017-05-22T17:27:27.224Z"}],"readme":"# Netadon\r\n\r\nNetadon is a [Node.js](http://nodejs.org/) [addon](http://nodejs.org/api/addons.html) using Javascript and C++ to implement optimised UDP networking.\r\nCurrently only Windows hosts, UDP and IPv4 are supported.\r\n\r\n## Installation\r\n\r\nInstall [Node.js](http://nodejs.org/) for your platform. This software has been developed against the long term stable (LTS) release.\r\n\r\nNetadon is designed to be `require`d to use from your own application to provide UDP networking.\r\n\r\n    npm install --save netadon\r\n\r\nNode.js addons use [libuv](http://libuv.org/) which by default supports up to 4 async threads in a threadpool for activities such as file I/O. These same threads are used by netadon and if you wish to use a number of the functions in one Node.js process then you will need to set the environment variable UV_THREADPOOL_SIZE to a suitable number before the first use of the libuv threadpool.\r\n\r\n## Using netadon\r\n\r\nTo use netadon in your own application, `require` the module then create ports as required.\r\nThe functions are intended to follow the interface of the Node.js dgram module where possible.  There are some differences but it should be straightforward to test with either implementation.\r\nThe options argument in socket create has added optional fields:\r\n- receiveArray - When this is set to true, the message event will return an array containing multiple buffers that have been received.\r\n- packetSize - The number of bytes in a send packet\r\n- recvMinPackets - The memory to pre-allocate for receiving packets from the network\r\n- sendMinPackets - The memory to pre-allocate for queuing packets to be sent to the network\r\n\r\n```javascript\r\nvar netadon = require('netadon');\r\nvar udpPort = netadon.createSocket({type:'udp4', reuseAddr:false, receiveArray:false, packetSize:1500, recvMinPackets:16384, sendMinPackets:16384);\r\n\r\nudpPort.on('error', (err) => {\r\n  console.log(`server error: ${err}`);\r\n  udpPort.close();\r\n});\r\n\r\nudpPort.on('message', (data, rinfo) => {\r\n  console.log(`server data: ${data.length} from ${rinfo.address}:${rinfo.port}`);\r\n});\r\n\r\nudpPort.on('listening', () => {\r\n  var address = udpPort.address;\r\n  console.log(`server listening ${address.address}:${address.port}`);\r\n});\r\n\r\nudpPort.bind(port, addr);\r\nudpPort.send(buf, 0, buf.length, port, addr);\r\nudpPort.close();\r\n```\r\n## Status, support and further development\r\n\r\nCurrently only Windows hosts, UDP and IPv4 are supported.\r\n\r\nContributions can be made via pull requests and will be considered by the author on their merits. Enhancement requests and bug reports should be raised as github issues. For support, please contact [Streampunk Media](http://www.streampunk.media/).\r\n\r\n## License\r\n\r\nThis software is released under the Apache 2.0 license. Copyright 2017 Streampunk Media Ltd.\r\n","created":"2016-05-16T09:20:14.524Z","modified":"2017-05-22T17:27:27.224Z","lastPublisher":{"name":"streampunk","email":"furnace@streampunk.media"},"owners":[{"name":"streampunk","email":"furnace@streampunk.media"}],"other":{"_attachments":{},"_from":".","_id":"netadon","_nodeVersion":"6.9.5","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/netadon-0.1.2.tgz_1495474036520_0.5893722749315202"},"_npmUser":{"name":"streampunk","email":"furnace@streampunk.media"},"_npmVersion":"3.10.10","_rev":"4-d50ad6331e1ed51ebe542b3b8e478b8c","_shasum":"0f24d079df1ecb8625c1f4f818f73063263d4087","author":{"name":"Streampunk Media Ltd"},"bugs":{"url":"https://github.com/Streampunk/netadon/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"0f24d079df1ecb8625c1f4f818f73063263d4087","tarball":"https://registry.npmjs.org/netadon/-/netadon-0.1.2.tgz"},"maintainers":[{"name":"streampunk","email":"furnace@streampunk.media"}],"readmeFilename":"README.md","time":{"modified":"2017-05-22T17:27:27.224Z","created":"2016-05-16T09:20:14.524Z","0.0.1":"2016-05-16T09:20:14.524Z","0.0.2":"2016-06-05T19:25:41.776Z","0.0.3":"2016-07-12T11:00:49.518Z","0.0.4":"2016-09-06T15:50:55.437Z","0.0.5":"2016-10-03T09:49:41.080Z","0.0.6":"2017-02-07T11:16:11.692Z","0.1.0":"2017-02-20T10:09:58.936Z","0.1.2":"2017-05-22T17:27:27.224Z"}}}