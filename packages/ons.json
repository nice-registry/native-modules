{"name":"ons","version":"4.1.0","description":"SDK of Node.js for Aliyun ONS (Aliyun Open Notification Service).","main":"index.js","scripts":{"test":"_mocha test/1_message.js test/3_thicken.js test/4_orig_log.js test/5_order_message.js","install":"node-gyp rebuild"},"repository":"https://github.com/XadillaX/aliyun-ons","files":["src/third_party/lib/linux/libonsclient4cpp.a","src/third_party/lib/windows/msvcp140.dll","src/third_party/lib/windows/ONSClient4CPP.dll","src/third_party/lib/windows/ONSClient4CPP.lib","src/third_party/lib/windows/ONSClient4CPP.pdb","example","lib","src","binding.gyp","index.js","package.json","README.md","README-zh_cn.md"],"keywords":["ons","aliyun","aliyun open notification service"],"license":"MIT","homepage":"https://github.com/XadillaX/aliyun-ons#readme","dependencies":{"blueimp-md5":"^2.7.0","eventemitter2":"^4.1.0","fs-extra":"^2.1.2","lei-stream":"^1.3.0","nan":"^2.6.2","node-watch":"^0.5.2","scarlet-task":"^1.0.0","spidex":"^2.2.1","uuid":"^3.0.1"},"devDependencies":{"mocha":"^3.3.0","should":"^11.2.1"},"gypfile":true,"gitHead":"bc2a1e7a1de0713cadb7d5c4f0658b12aca86699","versions":[{"number":"1.0.0","date":"2015-12-19T16:30:59.413Z"},{"number":"1.0.1","date":"2015-12-19T16:35:25.201Z"},{"number":"1.0.2","date":"2015-12-19T17:00:10.497Z"},{"number":"1.1.0","date":"2016-01-25T12:20:52.309Z"},{"number":"1.1.1","date":"2016-01-27T10:57:07.848Z"},{"number":"1.1.2","date":"2016-01-28T03:20:19.193Z"},{"number":"1.2.0","date":"2016-01-29T15:13:59.177Z"},{"number":"1.3.0","date":"2016-04-16T08:07:22.464Z"},{"number":"1.3.1","date":"2016-05-07T14:09:17.903Z"},{"number":"1.3.2","date":"2016-06-07T14:44:59.660Z"},{"number":"1.4.0","date":"2016-06-08T09:43:13.364Z"},{"number":"1.4.1","date":"2016-06-16T06:18:36.018Z"},{"number":"1.5.0","date":"2016-07-07T09:08:07.213Z"},{"number":"2.0.0-rc.1","date":"2016-07-19T17:24:26.978Z"},{"number":"2.0.0-rc.2","date":"2016-07-20T04:55:32.965Z"},{"number":"2.0.0-rc.3","date":"2016-07-21T03:26:11.907Z"},{"number":"2.0.0","date":"2016-07-22T03:51:42.778Z"},{"number":"2.1.0","date":"2016-07-26T08:26:24.648Z"},{"number":"2.2.0","date":"2016-07-28T07:02:21.112Z"},{"number":"2.2.1","date":"2016-07-28T09:24:26.631Z"},{"number":"2.2.2","date":"2016-07-29T02:01:26.109Z"},{"number":"2.2.3","date":"2016-09-09T06:43:22.478Z"},{"number":"2.2.4","date":"2016-09-10T09:07:25.760Z"},{"number":"2.3.0","date":"2016-09-10T09:54:30.708Z"},{"number":"2.3.1-rc.1","date":"2016-09-10T11:25:52.993Z"},{"number":"2.3.1","date":"2016-09-11T10:13:42.532Z"},{"number":"2.3.2","date":"2016-11-16T01:58:46.443Z"},{"number":"2.3.3","date":"2016-11-21T10:02:11.108Z"},{"number":"2.3.4","date":"2016-11-21T10:07:38.691Z"},{"number":"2.3.5","date":"2016-11-21T10:20:26.011Z"},{"number":"3.0.0","date":"2016-12-21T13:22:28.596Z"},{"number":"3.0.1","date":"2016-12-21T16:40:34.494Z"},{"number":"3.0.2","date":"2016-12-31T06:20:25.869Z"},{"number":"3.0.4","date":"2017-04-25T08:43:35.087Z"},{"number":"4.0.0","date":"2017-05-24T10:59:43.695Z"},{"number":"4.0.1","date":"2017-05-25T02:48:39.887Z"},{"number":"4.0.2","date":"2017-05-25T02:55:02.161Z"},{"number":"4.0.3","date":"2017-05-25T05:33:13.098Z"},{"number":"4.1.0","date":"2017-05-25T05:40:51.405Z"}],"readme":"# Aliyun ONS SDK for Node.js\n\n[![Version](http://img.shields.io/npm/v/ons.svg)](https://www.npmjs.com/package/ons)\n[![Downloads](http://img.shields.io/npm/dm/ons.svg)](https://www.npmjs.com/package/ons)\n[![License](https://img.shields.io/npm/l/ons.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![AppVeypr](https://ci.appveyor.com/api/projects/status/9qdfjl7ig6s9d72s/branch/master?svg=true)](https://ci.appveyor.com/project/XadillaX/aliyun-ons)\n[![TravisCI](https://travis-ci.org/XadillaX/aliyun-ons.svg)](https://travis-ci.org/XadillaX/aliyun-ons)\n[![Dependency](https://david-dm.org/XadillaX/aliyun-ons.svg)](https://david-dm.org/XadillaX/aliyun-ons)\n\nSDK of Node.js for Aliyun ONS.\n\n> **ONS** (Open Notification Service) is a message queue service of [aliyun](http://www.aliyun.com/product/ons/) based on MetaQ (RocketMQ).\n>\n> Maybe you want [中文文档](README-zh_cn.md)?\n\n## Installation\n\n```sh\n$ npm install --save ons\n```\n\n> **NOTE:** Because of Aliyun ONS C++ SDK's closed source, it only provides Linux and Windows library file (libonsclient4cpp.a, ONSClientCPP.lib). So you can only install this package under Linux and Windows 64x so far.\n>\n> **Current 4.x version of ons supports OSX via incomplete HTTP protocol. Not recommended for stable use.**\n\n## Usage\n\nYou should turn on ONS first and then get an `access key` and a `secret key`. In next step you should create a consumer id or a producer id, and a topic.\n\nYou can do steps above by refering to [help desk](https://help.aliyun.com/product/8315024_ons.html) and [aliyun console](http://ons.console.aliyun.com/).\n\n### Examples\n\nHere's some examples for [consumer](example/consumer.js) and [producer](example/producer.js).\n\n### Consumer\n\nYou can create a consumer by code following:\n\n```javascript\nvar Consumer = require(\"ons\").Consumer;\nvar consumer = new Consumer(CUSTOMER_ID, TOPIC, TAGS, ACCESS_KEY, SECRET_KEY, OPTIONS);\n```\n\n> `OPTIONS` is optional and any parameters in `OPTIONS` are optional too.\n>\n> eg.\n>\n> ```javascript\n> {\n>     namesrvAddr: \"112.124.141.191:80\",\n>     onsAddr: \"http://onsaddr-internet.aliyun.com:80/rocketmq/nsaddr4client-internet\",\n>\n>     threadNum: 3\n> }\n> ```\n>\n> + **namesrvAddr:** the ONS server address\n> + **onsAddr:** an address to fetch ONS server address\n> + **threadNum:** worker thread count\n> + **order:** `true` if you want it be `OrderConsumer`\n> + **httpDomain:** OSX only, refer to https://help.aliyun.com/document_detail/29574.html\n>\n> > OSX only supports `threadNum` and `httpDomain` options. And `TAGS` parameter in constructor will be useless under\n> > OSX.\n\nNext step you should set one or more message receive function to that consumer.\n\n```javascript\nconsumer.on(\"message\", function(msg, ack) {\n    // DO SOMETHING\n    // \n    // this function will be emitted while receiving a message\n    //\n    // after finishing this, call `ack.done(true)` or `ack.done(false)` to tell\n    // ONS whether you're successful.\n    //\n    // `ack.done()` equals to `ack.done(true)`\n});\n```\n\nAfter creating a consumer and set listener, you should initialize for it and then listen.\n\n```javascript\nconsumer.init(function(err) {\n    if(err) return console.log(err);\n    consumer.listen();\n});\n```\n\nThat's easy! And what's more, you can stop it when you want.\n\n```javascript\nconsumer.stop(function() {\n    // closed\n});\n```\n\n> **CAUTION:** You should `ack` all received messages (whether `done(true)` or `done(false)`) before you call `consumer.stop()`, or you won't get callback function called in `stop` and consumer won't be stopped.\n>\n> **What's more, you'd better to stop consumer before your program exited. e.g.**\n>\n> ```javascript\n> process.on(\"SIGINT\", function() {\n>     consumer.stop(function() {\n>         process.exit(0);\n>     });\n> });\n> ```\n>\n> You should write down your exit code in your own scene.\n\n### Producer\n\nYou can create a producer by code following:\n\n```javascript\nvar Producer = require(\"ons\").Producer;\nvar producer = new Producer(PRODUCER_ID, ACCESS_KEY, SECRET_KEY, OPTIONS);\n```\n\n> `OPTIONS` is optional and any parameters in `OPTIONS` are optional too. e.g.\n>\n> ```javascript\n> {\n>     namesrvAddr: \"112.124.141.191:80\",\n>     onsAddr: \"http://onsaddr-internet.aliyun.com:80/rocketmq/nsaddr4client-internet\",\n>\n>     sendTimeout: 1000\n> }\n> ```\n>\n> + **namesrvAddr:** the ONS server address\n> + **onsAddr:** an address to fetch ONS server address\n> + **sendTimeout:** timeout for sending a message\n> + **order:** `true` if you want it be `OrderProducer`\n> + **httpDomain:** OSX only, refer to https://help.aliyun.com/document_detail/29574.html\n>\n> > OSX only supports `order` and `httpDomain` options.\n\nAfter creating a producer, you should start it.\n\n```javascript\nproducer.start(function(err) {\n    if(err) return console.log(err);\n    console.log(\"Started!\");\n});\n```\n\nNow you can send message(s)!\n\n```javascript\nproducer.send([KEY,] TOPIC, TAGS, CONTENT, [SHARDING_KEY,] [DELAY,] function(err, messageId) {\n    console.log(arguments);\n});\n\n// or key / shardingKey / delay (ms) / callback are optional parameter\n\nproducer.send(TOPIC, TAGS, CONTENT, function(err, messageId) {\n    console.log(arguments);\n});\n```\n\n> **NOTICE 1:** `SHARDING_KEY` is only for `OrderProducer`, each message in same `SHARDING_KEY` will send one by one in\n> order and `OrderConsumer` will receive messages in same `SHARDING_KEY` one by one in order.\n>\n> **NOTICE 2:** `callback` is optional when it's not `OrderProducer`. If no `callback` passed, message will be sent in\n> `oneway` method.\n\nThat's easy! And what's more, you can stop it when you want.\n\n```javascript\nproducer.stop(function() {\n    // closed\n});\n```\n\n> **CAUTION:** you'd better to stop producer before your program exited. e.g.\n>\n> ```javascript\n> process.on(\"SIGINT\", function() {\n>     producer.stop(function() {\n>         process.exit(0);\n>     });\n> });\n> ```\n>\n> You should write down your exit code in your own scene.\n\n### Original Logs\n\n> **This feature is available under Linux so far.**\n\nBy default C++ ONS SDK will generate a log file. So we create a tail stream to watch it.\n\n```javascript\nconst logger = require(\"ons\").logger;\nlogger.on(\"data\", function(data) {\n    console.log(\"[ORIG LOG]\", data);\n});\n\n// [ORIG LOG] ... register sendMessageHook success,hookname is OnsSendMessageHook ...\n// ...\n// [ORIG LOG] ... register consumeMessageHook success,hookname is OnsConsumerMessageHook ...\n// ...\n// [ORIG LOG] ... shutdown producerl successfully ...\n// ...\n// [ORIG LOG] ... shutdown pushConsumer successfully ...\n// ...\n```\n\n> **NOTICE 1:** C++ ONS SDK will create only one log file per process, so `logger` is a singleton.\n> **NOTICE 2:** Don't use under OSX!\n\n## C++ SDK Changelog\n\nHere's [original C++ ONS SDK changelog](src/third_party/CHANGELOG.md).\n\n> **NOTICE:** It's only the changelog for the original C++ SDK. Node.js SDK may not use all new features of original SDK.\n\n## Contribute\n\nYou're welcome to fork and make pull requests!\n\n「雖然我覺得不怎麼可能有人會關注我」\n","starsCount":1,"created":"2015-12-19T16:30:59.413Z","modified":"2017-05-25T05:40:51.405Z","lastPublisher":{"name":"xadillax","email":"admin@xcoder.in"},"owners":[{"name":"xadillax","email":"admin@xcoder.in"}],"other":{"_attachments":{},"_from":".","_id":"ons","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ons-4.1.0.tgz_1495690850748_0.6526739818509668"},"_npmUser":{"name":"xadillax","email":"admin@xcoder.in"},"_npmVersion":"3.10.10","_rev":"16-b5c965520ccea305b7c955080c7ff28c","_shasum":"e07d2b95911148bcb13438f175def6445485576b","author":{"name":"XadillaX","email":"i@2333.moe"},"bugs":{"url":"https://github.com/XadillaX/aliyun-ons/issues"},"directories":{},"dist-tags":{"latest":"4.1.0"},"dist":{"shasum":"e07d2b95911148bcb13438f175def6445485576b","tarball":"https://registry.npmjs.org/ons/-/ons-4.1.0.tgz"},"maintainers":[{"name":"xadillax","email":"admin@xcoder.in"}],"readmeFilename":"README.md","time":{"modified":"2017-05-25T05:40:51.405Z","created":"2015-12-19T16:30:59.413Z","1.0.0":"2015-12-19T16:30:59.413Z","1.0.1":"2015-12-19T16:35:25.201Z","1.0.2":"2015-12-19T17:00:10.497Z","1.1.0":"2016-01-25T12:20:52.309Z","1.1.1":"2016-01-27T10:57:07.848Z","1.1.2":"2016-01-28T03:20:19.193Z","1.2.0":"2016-01-29T15:13:59.177Z","1.3.0":"2016-04-16T08:07:22.464Z","1.3.1":"2016-05-07T14:09:17.903Z","1.3.2":"2016-06-07T14:44:59.660Z","1.4.0":"2016-06-08T09:43:13.364Z","1.4.1":"2016-06-16T06:18:36.018Z","1.5.0":"2016-07-07T09:08:07.213Z","2.0.0-rc.1":"2016-07-19T17:24:26.978Z","2.0.0-rc.2":"2016-07-20T04:55:32.965Z","2.0.0-rc.3":"2016-07-21T03:26:11.907Z","2.0.0":"2016-07-22T03:51:42.778Z","2.1.0":"2016-07-26T08:26:24.648Z","2.2.0":"2016-07-28T07:02:21.112Z","2.2.1":"2016-07-28T09:24:26.631Z","2.2.2":"2016-07-29T02:01:26.109Z","2.2.3":"2016-09-09T06:43:22.478Z","2.2.4":"2016-09-10T09:07:25.760Z","2.3.0":"2016-09-10T09:54:30.708Z","2.3.1-rc.1":"2016-09-10T11:25:52.993Z","2.3.1":"2016-09-11T10:13:42.532Z","2.3.2":"2016-11-16T01:58:46.443Z","2.3.3":"2016-11-21T10:02:11.108Z","2.3.4":"2016-11-21T10:07:38.691Z","2.3.5":"2016-11-21T10:20:26.011Z","3.0.0":"2016-12-21T13:22:28.596Z","3.0.1":"2016-12-21T16:40:34.494Z","3.0.2":"2016-12-31T06:20:25.869Z","3.0.4":"2017-04-25T08:43:35.087Z","4.0.0":"2017-05-24T10:59:43.695Z","4.0.1":"2017-05-25T02:48:39.887Z","4.0.2":"2017-05-25T02:55:02.161Z","4.0.3":"2017-05-25T05:33:13.098Z","4.1.0":"2017-05-25T05:40:51.405Z"},"users":{"romejiang":true}}}