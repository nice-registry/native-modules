{"name":"imagemagick-native","description":"ImageMagick's Magick++ bindings for NodeJS","keywords":["imagemagick","magick++","resize","convert"],"version":"1.9.3","license":"MIT","repository":"https://github.com/mash/node-imagemagick-native","main":"./index.js","scripts":{"test":"tap test/test.js test/test.async.js test/test.streams.js test/test.trim.js test/test.background.js","install":"node-gyp rebuild"},"engines":{"node":">=0.10.0"},"dependencies":{"nan":"2.x"},"devDependencies":{"tap":"*","grunt":"~0.4","grunt-release":"~0.7","grunt-contrib-clean":"~0.5"},"gitHead":"18ce249c53b09dcb422528f87a7278394611d785","gypfile":true,"homepage":"https://github.com/mash/node-imagemagick-native#readme","versions":[{"number":"0.2.0","date":"2013-04-17T03:35:35.865Z"},{"number":"0.2.1","date":"2013-04-24T04:10:36.270Z"},{"number":"0.2.2","date":"2013-04-24T06:49:55.342Z"},{"number":"0.2.3","date":"2013-06-17T00:35:10.195Z"},{"number":"0.2.4","date":"2013-07-13T12:54:32.111Z"},{"number":"0.2.5","date":"2013-07-13T14:40:01.994Z"},{"number":"0.2.6","date":"2013-08-26T01:56:29.670Z"},{"number":"0.2.7","date":"2013-09-29T13:13:51.642Z"},{"number":"0.2.8","date":"2013-10-08T06:35:43.531Z"},{"number":"0.2.9","date":"2013-10-30T22:26:14.659Z"},{"number":"1.0.0","date":"2014-05-20T02:53:11.328Z"},{"number":"1.1.0","date":"2014-05-22T05:35:27.366Z"},{"number":"1.1.1","date":"2014-05-26T05:18:57.031Z"},{"number":"1.2.0","date":"2014-06-28T00:11:43.719Z"},{"number":"1.2.1","date":"2014-06-28T00:21:06.324Z"},{"number":"1.2.2","date":"2014-07-08T16:13:39.379Z"},{"number":"1.3.0","date":"2014-09-16T05:01:46.886Z"},{"number":"1.4.0","date":"2014-10-16T09:08:33.493Z"},{"number":"1.5.0","date":"2014-11-05T17:49:45.783Z"},{"number":"1.6.0","date":"2014-11-18T14:34:35.033Z"},{"number":"1.7.0","date":"2015-01-28T03:44:42.246Z"},{"number":"1.8.0","date":"2015-07-18T10:08:52.245Z"},{"number":"1.9.0","date":"2016-02-12T12:36:10.339Z"},{"number":"1.9.1","date":"2016-02-14T07:17:48.052Z"},{"number":"1.9.2","date":"2016-03-23T17:40:43.465Z"},{"number":"1.9.3","date":"2016-09-03T16:04:37.859Z"}],"readme":"# node-imagemagick-native\n\n[ImageMagick](http://www.imagemagick.org/)'s [Magick++](http://www.imagemagick.org/Magick++/) binding for [Node](http://nodejs.org/).\n\nFeatures\n\n  * Native bindings to the C/C++ Magick++ library\n  * Async, sync, and stream API\n  * Support for `convert`, `identify`, `composite`, and other utility functions\n\n[![Build Status](https://travis-ci.org/elad/node-imagemagick-native.png)](https://travis-ci.org/elad/node-imagemagick-native)\n\nTable of contents\n\n  * [Examples](#examples)\n    * [Convert formats](#example-convert) (PNG to JPEG)\n    * [Blur](#example-blur)\n    * [Resize](#example-resize)\n    * [Rotate, flip, and mirror](#example-rotate-flip-mirror)\n  * [API Reference](#api)\n    * [`convert`](#convert)\n    * [`identify`](#identify)\n    * [`quantizeColors`](#quantizeColors)\n    * [`composite`](#composite)\n    * [`getConstPixels`](#getConstPixels)\n    * [`quantumDepth`](#quantumDepth)\n    * [`version`](#version)\n  * [Installation](#installation)\n    * [Linux / Mac OS X](#installation-unix)\n    * [Windows](#installation-windows)\n  * [Performance](#performance)\n  * [Contributing](#contributing)\n  * [License](#license)\n\n<a name='examples'></a>\n\n## Examples\n\n<a name='example-convert'></a>\n\n### Convert formats\n\nConvert from one format to another with quality control:\n\n```js\nfs.writeFileSync('after.png', imagemagick.convert({\n\tsrcData: fs.readFileSync('before.jpg'),\n\tformat: 'PNG',\n\tquality: 100 // (best) to 1 (worst)\n}));\n```\n\nOriginal JPEG:\n\n![alt text](http://elad.github.io/node-imagemagick-native/examples/quality.jpg 'Original')\n\nConverted to PNG:\n\nquality 100 | quality 50 | quality 1\n:---: | :---: | :---:\n![alt text](http://elad.github.io/node-imagemagick-native/examples/quality_100.png 'quality 100') | ![alt text](http://elad.github.io/node-imagemagick-native/examples/quality_50.png 'quality 50') | ![alt text](http://elad.github.io/node-imagemagick-native/examples/quality_1.png 'quality 1')\n\n*Image courtesy of [David Yu](https://www.flickr.com/photos/davidyuweb/14175248591).*\n\n<a name='example-blur'></a>\n\n### Blur\n\nBlur image:\n\n```js\nfs.writeFileSync('after.jpg', imagemagick.convert({\n\tsrcData: fs.readFileSync('before.jpg'),\n\tblur: 5\n}));\n```\n\n![alt text](http://elad.github.io/node-imagemagick-native/examples/blur_before.jpg 'Before blur') becomes ![alt text](http://elad.github.io/node-imagemagick-native/examples/blur_after.jpg 'After blur')\n\n*Image courtesy of [Tambako The Jaguar](https://www.flickr.com/photos/tambako/3574360498).*\n\n<a name='example-resize'></a>\n\n### Resize\n\nResized images by specifying `width` and `height`. There are three resizing styles:\n\n  * `aspectfill`: Default. The resulting image will be exactly the specified size, and may be cropped.\n  * `aspectfit`: Scales the image so that it will not have to be cropped.\n  * `fill`: Squishes or stretches the image so that it fills exactly the specified size.\n\n```js\nfs.writeFileSync('after_resize.jpg', imagemagick.convert({\n\tsrcData: fs.readFileSync('before_resize.jpg'),\n\twidth: 100,\n\theight: 100,\n\tresizeStyle: 'aspectfill', // is the default, or 'aspectfit' or 'fill'\n\tgravity: 'Center' // optional: position crop area when using 'aspectfill'\n}));\n```\n\nOriginal:\n  \n![alt text](http://elad.github.io/node-imagemagick-native/examples/resize.jpg 'Original')\n\nResized:\n\naspectfill | aspectfit | fill\n:---: | :---: | :---:\n![alt text](http://elad.github.io/node-imagemagick-native/examples/resize_aspectfill.jpg 'aspectfill') | ![alt text](http://elad.github.io/node-imagemagick-native/examples/resize_aspectfit.jpg 'aspectfit') | ![alt text](http://elad.github.io/node-imagemagick-native/examples/resize_fill.jpg 'fill')\n\n*Image courtesy of [Christoph](https://www.flickr.com/photos/scheinwelten/381994831).*\n\n<a name='example-rotate-flip-mirror'></a>\n\n### Rotate, flip, and mirror\n\nRotate and flip images, and combine the two to mirror:\n\n```js\nfs.writeFileSync('after_rotateflip.jpg', imagemagick.convert({\n\tsrcData: fs.readFileSync('before_rotateflip.jpg'),\n\trotate: 180,\n\tflip: true\n}));\n```\n\nOriginal:\n\n![alt text](http://elad.github.io/node-imagemagick-native/examples/rotateflip.jpg 'Original')\n\nModified:\n\nrotate 90 degrees | rotate 180 degrees | flip | flip + rotate 180 degrees = mirror\n:---: | :---: | :---: | :---:\n![alt text](http://elad.github.io/node-imagemagick-native/examples/rotateflip_rotate_90.jpg 'rotate 90') | ![alt text](http://elad.github.io/node-imagemagick-native/examples/rotateflip_rotate_180.jpg 'rotate 180') | ![alt text](http://elad.github.io/node-imagemagick-native/examples/rotateflip_flip.jpg 'flip') | ![alt text](http://elad.github.io/node-imagemagick-native/examples/rotateflip_mirror.jpg 'flip + rotate 180 = mirror')\n\n*Image courtesy of [Bill Gracey](https://www.flickr.com/photos/9422878@N08/6482704235).*\n\n<a name='api'></a>\n\n## API Reference\n\n<a name='convert'></a>\n\n### convert(options, [callback])\n\nConvert a buffer provided as `options.srcData` and return a Buffer.\n\nThe `options` argument can have following values:\n\n    {\n        srcData:        required. Buffer with binary image data\n        srcFormat:      optional. force source format if not detected (e.g. 'ICO'), one of http://www.imagemagick.org/script/formats.php\n        quality:        optional. 1-100 integer, default 75. JPEG/MIFF/PNG compression level.\n        trim:           optional. default: false. trims edges that are the background color.\n        trimFuzz:       optional. [0-1) float, default 0. trimmed color distance to edge color, 0 is exact.\n        width:          optional. px.\n        height:         optional. px.\n        density         optional. Integer dpi value to convert\n        resizeStyle:    optional. default: 'aspectfill'. can be 'aspectfit', 'fill'\n                        aspectfill: keep aspect ratio, get the exact provided size.\n                        aspectfit:  keep aspect ratio, get maximum image that fits inside provided size\n                        fill:       forget aspect ratio, get the exact provided size\n        gravity:        optional. default: 'Center'. used to position the crop area when resizeStyle is 'aspectfill'\n                                  can be 'NorthWest', 'North', 'NorthEast', 'West',\n                                  'Center', 'East', 'SouthWest', 'South', 'SouthEast', 'None'\n        format:         optional. output format, ex: 'JPEG'. see below for candidates\n        filter:         optional. resize filter. ex: 'Lagrange', 'Lanczos'.  see below for candidates\n        blur:           optional. ex: 0.8\n        strip:          optional. default: false. strips comments out from image.\n        rotate:         optional. degrees.\n        flip:           optional. vertical flip, true or false.\n        debug:          optional. true or false\n        ignoreWarnings: optional. true or false\n    }\n\nNotes\n\n  * `format` values can be found [here](http://www.imagemagick.org/script/formats.php)\n  * `filter` values can be found [here](http://www.imagemagick.org/script/command-line-options.php?ImageMagick=9qgp8o06f469m3cna9lfigirc5#filter)\n\nAn optional `callback` argument can be provided, in which case `convert` will run asynchronously. When it is done, `callback` will be called with the error and the result buffer:\n\n```js\nimagemagick.convert({\n    // options\n}, function (err, buffer) {\n    // check err, use buffer\n});\n```\n\nThere is also a stream version:\n\n```js\nfs.createReadStream('input.png').pipe(imagemagick.streams.convert({\n    // options\n})).pipe(fs.createWriteStream('output.png'));\n```\n\n<a name='identify'></a>\n\n### identify(options, [callback])\n\nIdentify a buffer provided as `srcData` and return an object.\n\nThe `options` argument can have following values:\n\n    {\n        srcData:        required. Buffer with binary image data\n        debug:          optional. true or false\n        ignoreWarnings: optional. true or false\n    }\n\nAn optional `callback` argument can be provided, in which case `identify` will run asynchronously. When it is done, `callback` will be called with the error and the result object:\n\n```js\nimagemagick.identify({\n    // options\n}, function (err, result) {\n    // check err, use result\n});\n```\n\nThe method returns an object similar to:\n\n```js\n{\n    format: 'JPEG',\n    width: 3904,\n    height: 2622,\n    depth: 8,\n    density : {\n        width : 300,\n        height : 300\n    },\n    exif: {\n        orientation: 0 // if none exists or e.g. 3 (portrait iPad pictures)\n    }\n}\n```\n\n<a name='quantizeColors'></a>\n\n### quantizeColors(options)\n\nQuantize the image to a specified amount of colors from a buffer provided as `srcData` and return an array.\n\nThe `options` argument can have following values:\n\n    {\n        srcData:        required. Buffer with binary image data\n        colors:         required. number of colors to extract, defaults to 5\n        debug:          optional. true or false\n        ignoreWarnings: optional. true or false\n    }\n\nThe method returns an array similar to:\n\n```js\n[\n    {\n        r: 83,\n        g: 56,\n        b: 35,\n        hex: '533823'\n    },\n    {\n        r: 149,\n        g: 110,\n        b: 73,\n        hex: '956e49'\n    },\n    {\n        r: 165,\n        g: 141,\n        b: 111,\n        hex: 'a58d6f'\n    }\n]\n```\n\n<a name='composite'></a>\n\n### composite(options, [callback])\n\nComposite a buffer provided as `options.compositeData` on a buffer provided as `options.srcData` with gravity specified by `options.gravity` and return a Buffer.\n\nThe `options` argument can have following values:\n\n    {\n        srcData:        required. Buffer with binary image data\n        compositeData:  required. Buffer with binary image data\n        gravity:        optional. Can be one of 'CenterGravity' 'EastGravity' 'ForgetGravity' 'NorthEastGravity' 'NorthGravity' 'NorthWestGravity' 'SouthEastGravity' 'SouthGravity' 'SouthWestGravity' 'WestGravity'\n        debug:          optional. true or false\n        ignoreWarnings: optional. true or false\n    }\n\nAn optional `callback` argument can be provided, in which case `composite` will run asynchronously. When it is done, `callback` will be called with the error and the result buffer:\n\n```js\nimagemagick.composite(options, function (err, buffer) {\n    // check err, use buffer\n});\n```\n\nThis library currently provide only these, please try [node-imagemagick](https://github.com/rsms/node-imagemagick/) if you want more.\n\n<a name='getConstPixels'></a>\n\n### getConstPixels(options)\n\nGet pixels of provided rectangular region.\n\nThe `options` argument can have following values:\n\n    {\n        srcData:        required. Buffer with binary image data\n        x:              required. x,y,columns,rows provide the area of interest.\n        y:              required.\n        columns:        required.\n        rows:           required.\n    }\n\nExample usage:\n\n```js\n// retrieve first pixel of image\nvar pixels = imagemagick.getConstPixels({\n    srcData: imageBuffer, // white image\n    x: 0,\n    y: 0,\n    columns: 1,\n    rows: 1\n});\n```\n\nReturns:\n\n```js\n[ { red: 65535, green: 65535, blue: 65535, opacity: 65535 } ]\n```\n\nWhere each color value's size is `imagemagick.quantumDepth` bits.\n\n<a name='quantumDepth'></a>\n\n### quantumDepth\n\nReturn ImageMagick's QuantumDepth, which is defined in compile time.  \nex: 16\n\n<a name='version'></a>\n\n### version\n\nReturn ImageMagick's version as string.  \nex: '6.7.7'\n\n<a name='installation'></a>\n\n## Installation\n\n<a name='installation-unix'></a>\n\n### Linux / Mac OS X\n\nInstall [ImageMagick](http://www.imagemagick.org/) with headers before installing this module.\nTested with ImageMagick 6.7.7 on CentOS 6 and Mac OS X Lion, Ubuntu 12.04 .\n\n    brew install imagemagick\n\n      or\n\n    sudo yum install ImageMagick-c++ ImageMagick-c++-devel\n\n      or\n\n    sudo apt-get install libmagick++-dev\n\nMake sure you can find Magick++-config in your PATH.\nThen:\n\n    npm install imagemagick-native\n\n**Installation notes**\n\n  * RHEL/CentOS: If the version of ImageMagick required by `node-imagemagick-native` is not available in an official RPM repository, please try the `-last` version offered by Les RPM de Remi, for example:\n\n  ```\n  sudo yum remove -y ImageMagick\n  sudo yum install -y http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\n  sudo yum install -y --enablerepo=remi ImageMagick-last-c++-devel\n  ```\n\n  * Mac OS X: You might need to install `pkgconfig` first:\n\n  ```\n  brew install pkgconfig\n  ```\n\n<a name='installation-windows'></a>\n\n### Windows\n\nTested on Windows 7 x64.\n\n1. Install Python 2.7.3 only 2.7.3 nothing else works quite right!\n\n    If you use Cygwin ensure you don't have Python installed in Cygwin setup as there will be some confusion about what version to use.\n\n2. Install [Visual Studio C++ 2010 Express](http://www.microsoft.com/en-us/download/details.aspx?id=8279)\n\n3. (64-bit only) [Install Windows 7 64-bit SDK](http://www.microsoft.com/en-us/download/details.aspx?id=8279)\n\n4. Install [Imagemagick dll binary x86 Q16](http://www.imagemagick.org/download/binaries/ImageMagick-6.8.5-10-Q16-x86-dll.exe) or [Imagemagick dll binary x64 Q16](http://www.imagemagick.org/download/binaries/ImageMagick-6.8.5-10-Q16-x64-dll.exe), check for libraries and includes during install.\n\nThen:\n\n    npm install imagemagick-native\n\n<a name='performance'></a>\n\n## Performance - simple thumbnail creation\n\n    imagemagick:       16.09ms per iteration\n    imagemagick-native: 0.89ms per iteration\n\nSee `node test/benchmark.js` for details.\n\n**Note:** `node-imagemagick-native`'s primary advantage is that it uses ImageMagick's API directly rather than by executing one of its command line tools. This means that it will be much faster when the amount of time spent inside the library is small and less so otherwise. See [issue #46](https://github.com/mash/node-imagemagick-native/issues/46) for discussion.\n\n<a name='contributing'></a>\n\n## Contributing\n\nThis project follows the [\"OPEN Open Source\"](https://gist.github.com/substack/e205f5389890a1425233) philosophy. If you submit a pull request and it gets merged you will most likely be given commit access to this repository.\n\n<a name='license'></a>\n\n## License (MIT)\n\nCopyright (c) Masakazu Ohtsuka <http://maaash.jp/>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the 'Software'), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","starsCount":12,"created":"2013-04-17T03:35:33.768Z","modified":"2017-03-14T06:32:36.641Z","lastPublisher":{"name":"eladxxx","email":"elad@iNNU.ORG"},"owners":[{"name":"mash","email":"o.masakazu@gmail.com"},{"name":"eladxxx","email":"elad@iNNU.ORG"}],"other":{"_attachments":{},"_from":".","_id":"imagemagick-native","_nodeVersion":"5.0.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/imagemagick-native-1.9.3.tgz_1472918675755_0.8765198846813291"},"_npmUser":{"name":"eladxxx","email":"elad@iNNU.ORG"},"_npmVersion":"3.3.6","_rev":"3-e20e6a3e84563ffd600f768097ec96ea","_shasum":"712f943d30c5daf6dc5d88198f4c9f1e6cb902df","author":{"name":"Masakazu Ohtsuka","email":"o.masakazu@gmail.com","url":"http://maaash.jp/"},"bugs":{"url":"https://github.com/mash/node-imagemagick-native/issues"},"contributors":[],"directories":{},"dist-tags":{"latest":"1.9.3"},"dist":{"shasum":"712f943d30c5daf6dc5d88198f4c9f1e6cb902df","tarball":"http://registry.npmjs.org/imagemagick-native/-/imagemagick-native-1.9.3.tgz"},"maintainers":[{"name":"mash","email":"o.masakazu@gmail.com"},{"name":"eladxxx","email":"elad@iNNU.ORG"}],"readmeFilename":"README.md","time":{"modified":"2017-03-14T06:32:36.641Z","created":"2013-04-17T03:35:33.768Z","0.2.0":"2013-04-17T03:35:35.865Z","0.2.1":"2013-04-24T04:10:36.270Z","0.2.2":"2013-04-24T06:49:55.342Z","0.2.3":"2013-06-17T00:35:10.195Z","0.2.4":"2013-07-13T12:54:32.111Z","0.2.5":"2013-07-13T14:40:01.994Z","0.2.6":"2013-08-26T01:56:29.670Z","0.2.7":"2013-09-29T13:13:51.642Z","0.2.8":"2013-10-08T06:35:43.531Z","0.2.9":"2013-10-30T22:26:14.659Z","1.0.0":"2014-05-20T02:53:11.328Z","1.1.0":"2014-05-22T05:35:27.366Z","1.1.1":"2014-05-26T05:18:57.031Z","1.2.0":"2014-06-28T00:11:43.719Z","1.2.1":"2014-06-28T00:21:06.324Z","1.2.2":"2014-07-08T16:13:39.379Z","1.3.0":"2014-09-16T05:01:46.886Z","1.4.0":"2014-10-16T09:08:33.493Z","1.5.0":"2014-11-05T17:49:45.783Z","1.6.0":"2014-11-18T14:34:35.033Z","1.7.0":"2015-01-28T03:44:42.246Z","1.8.0":"2015-07-18T10:08:52.245Z","1.9.0":"2016-02-12T12:36:10.339Z","1.9.1":"2016-02-14T07:17:48.052Z","1.9.2":"2016-03-23T17:40:43.465Z","1.9.3":"2016-09-03T16:04:37.859Z"},"users":{"lea_io":true,"znurgl":true,"denistv":true,"nukisman":true,"jgrl":true,"b_childress":true,"devwurm":true,"pajarraco":true,"jaycrypto":true,"sasquatch":true,"kamiller42":true,"bobjohnson23":true}}}