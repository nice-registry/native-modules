{"name":"monkey-opencv","version":"1.0.1","description":"Provides methods (image search etc.) built upon opencv.","main":"index.js","gypfile":true,"scripts":{"test":"mocha -R spec spec --recursive","install":"node-pre-gyp install --fallback-to-build"},"repository":"https://github.com/phonezawphyo/monkey-opencv","keywords":["nodejs","fast","image","imread","readimage","matrix","template","matcher","search","image search","opencv","matchTemplate","minMaxLoc","template matching"],"license":"MIT","homepage":"https://github.com/phonezawphyo/monkey-opencv#readme","dependencies":{"async":"^2.1.2","aws-sdk":"^2.6.9","bindings":"^1.2.1","buffers":"^0.1.1","nan":"^2.4.0","node-pre-gyp":"^0.6.30"},"devDependencies":{"mocha":"^3.1.2"},"binary":{"module_name":"monkey_opencv","module_path":"./build/{module_name}/v{version}/{configuration}/{node_abi}-{platform}-{arch}/","remote_path":"./{module_name}/v{version}/{configuration}/","package_name":"{node_abi}-{platform}-{arch}.tar.gz","host":"https://node-fast-template-matcher.s3-us-west-2.amazonaws.com"},"gitHead":"3ca36c78f3e0debf2c5b795d6a8a3d127d679619","versions":[{"number":"1.0.0","date":"2016-10-23T15:52:36.698Z"},{"number":"1.0.1","date":"2016-10-24T03:02:00.160Z"}],"readme":"# MonkeyOpencv\n\n> Provides methods built upon opencv. \n\nThe following modules are included.\n\n* MonkeyOpencv (Main module)\n* Matrix (Wrapper for opencv cv::Mat)\n* Constants (Wrapper for opencv constrants)\n* ImageStream (Wrapper to create cv::Mat from Stream)\n* ImageDataStream (DataStream wrapper)\n\n## MonkeyOpencv\n### readImage(imagePath, callback)\n\n> Wrapper for `cv::imread`.\n\n* imagePath - Path of image file.\n* callback - returns 2 args (error, Matrix)\n\n\n### findSubImage(options, callback)\n\n> Finds positions of template matches in the source image. Can supply multiple template images.\n\n* options\n  * source (filepath, Buffer or Matrix)\n  * templates (Array of filepath, Buffer or Matrix)\n  * matchPercent (default 70) - Confidence lelvel to pick matches(max 100)\n  * maximumMatches (default 1) - Number of matches to pick for each template\n  * downPyramids (default 0) - Scale down the images before matching (using cv::downPyr)\n  * searchExpansion (default 10) - Way to adjust search ROI for optimiaztions.\n  * method (default TM_SQDIFF_NORMED) - Method to perform `cv::matchTemplate`.\n    * TM_SQDIFF\n    * TM_SQDIFF_NORMED\n    * TM_CCORR\n    * TM_CCORR_NORMED\n    * TM_CCOEFF\n    * TM_CCOEFF_NORMED\n* callback - returns 1 arg (matches);\n  * Optional. If not provided, a `Promise` will be returned;\n  * matches - Array of match result objects with the following properties.\n    * position: {x, y}\n    * rect: {x, y, width, height}\n    * confidence: 0~100\n    * templateIndex: Index of template.\n    \n```\nvar MonkeyOpencv = require('monkey-opencv').MonkeyOpencv;\nvar Constants = require ('monkey-opencv').Constants;\nvar fs = require ('fs');\n\nMonkeyOpencv.findSubImage({\n  source: 'source.png',\n  templates: ['template.png'],\n  matchPercent: 70,\n  maximumMatches: 1,\n  downPyramids: 1,\n  searchExpansion: 15,\n  method: Constants.TM_CCORR_NORMED,\n}, function(matches){\n  console.log('Matches with callback: ',matches[0].position);\n})\n\n// Example with Matrix as a template\nMonkeyOpencv.readImage('template.png', function(tmpl) {\n  MonkeyOpencv.findSubImage({\n    source: 'source.png',\n    templates: [tmpl, 'invalid_template.png'],\n  })\n  .then(function(matches){\n    console.log('Matches with Promise: ', matches[0].position);\n  }, function(err){});\n  });\n});\n\n// Example with Buffer as a template\nvar source = fs.readFileSync('template.png');\nMonkeyOpencv.findSubImage({\n  source: source,\n  templates: ['template.png', 'invalid_template.png'],\n})\n.then(function(matches){\n  console.log('Matches with Promise: ', matches[0].position);\n}, function(err){});\n});\n\n```\n\n# Installation\n\n```\nnpm install --save monkey-opencv\n```\n\n## Requirements for building from source\n\n### node-gyp, node-pre-gyp\n\n### opencv\n\n```\nnpm install node-gyp node-pre-gyp -g\n```\n\n### Requirements for Mac\n\nXCode\n\n### Requirements for windows\n\nInstall window build tools. Refer to https://github.com/nodejs/node-gyp.\n\n```\nnpm install --global --production windows-build-tools\n```\n\n\n# References\n\n1. https://github.com/Jmgr/actiona\n2. https://github.com/monai/node-imagesearch\n3. https://github.com/peterbraden/node-opencv\n","created":"2016-10-23T15:52:36.698Z","modified":"2016-10-24T03:02:00.160Z","lastPublisher":{"name":"phonezawphyo","email":"phonezawphyo@gmail.com"},"owners":[{"name":"phonezawphyo","email":"phonezawphyo@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"monkey-opencv","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/monkey-opencv-1.0.1.tgz_1477278119915_0.9576680031605065"},"_npmUser":{"name":"phonezawphyo","email":"phonezawphyo@gmail.com"},"_npmVersion":"3.10.8","_rev":"2-bf185cad7a5aa6fb6dc07af31c34af52","_shasum":"d9c62920fddf2f283250cda4c0da3c215f66fd69","author":{"name":"Phone Z Phyo"},"bugs":{"url":"https://github.com/phonezawphyo/monkey-opencv/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"d9c62920fddf2f283250cda4c0da3c215f66fd69","tarball":"http://registry.npmjs.org/monkey-opencv/-/monkey-opencv-1.0.1.tgz"},"maintainers":[{"name":"phonezawphyo","email":"phonezawphyo@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-24T03:02:00.160Z","created":"2016-10-23T15:52:36.698Z","1.0.0":"2016-10-23T15:52:36.698Z","1.0.1":"2016-10-24T03:02:00.160Z"}}}