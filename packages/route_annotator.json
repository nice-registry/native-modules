{"name":"route_annotator","version":"0.0.5","description":"Bindings for route-annotator","keywords":["addon","native","module"],"repository":"https://github.com/mapbox/route-annotator","license":"See LICENSE.txt file","main":"index.js","scripts":{"test":"tape test/*.test.js","install":"node-pre-gyp install --fallback-to-build"},"devDependencies":{"express":"^4.13.4","async":"^2.0.0-rc.3"},"dependencies":{"aws-sdk":"^2.3.5","nan":"^2.2.1","node-cmake":"^1.2.0","node-pre-gyp":"^0.6.26","tape":"^4.6.3"},"binary":{"module_name":"route_annotator","module_path":"./lib/binding/","host":"https://mapbox-node-binary.s3.amazonaws.com","remote_path":"./{name}/v{version}/{configuration}/","package_name":"{node_abi}-{platform}-{arch}.tar.gz"},"gitHead":"315a4c539d1f6f65a10b2f6e51045aae8ef90aa5","homepage":"https://github.com/mapbox/route-annotator#readme","versions":[{"number":"0.0.1","date":"2016-04-22T04:58:17.698Z"},{"number":"0.0.2","date":"2016-04-27T08:41:26.906Z"},{"number":"0.0.3","date":"2017-05-12T09:51:31.811Z"},{"number":"0.0.4","date":"2017-05-19T16:16:25.844Z"},{"number":"0.0.5","date":"2017-06-21T14:33:21.289Z"}],"readme":"[![Build Status](https://travis-ci.org/mapbox/route-annotator.svg?branch=master)](https://travis-ci.org/mapbox/route-annotator)\n\n# Route Annotator\n\nThis is a NodeJS module that indexes connected node pairs in OSM data, and allows you to query for\nmeta-data.  It's useful for retrieving tag information when you have geometry from your basemap.\n\n## Requires\n\n- Node >= 4\n\n## Building\n\nTo install via binaries:\n\n```\nnpm install\n```\n\nTo install from source, first install a C++14 capable compiler then run:\n\n\n```\nmake\n```\n\n## Testing\n\nTo run the tests (which run both the JS tests and the C++ tests):\n\n```\nmake test\n```\n\nTo run just the JS tests:\n\n```\nnpm test\n```\n\nTo run the C++ tests:\n\n```\n./build/Release/basic-tests\n```\n\n## Usage\n\nThis library contains two main modules: `Annotator` and `SpeedLookup`\n\n### Annotator\n\nThe `Annotator()` object is for looking up OSM tag data from OSM node IDs or coordinates.\n\n**Example:**\n```\nvar taglookup = new (require('route_annotator')).Annotator();\n\n// Lookup some nodes and find out which ways they were on,\n// and what tags they had\ntaglookup.loadOSMExtract(path.join(__dirname,'data/winthrop.osm'), (err) => {\n  if (err) throw err;\n  var nodes = [50253600,50253602,50137292];\n  taglookup.annotateRouteFromNodeIds(nodes, (err, wayIds) => {\n    if (err) throw err;\n    annotator.getAllTagsForWayId(wayIds[0], (err, tags) => {\n      if (err) throw err;\n      console.log(tags);\n    });\n  });\n}); \n\n\n// Do the same thing, but this time use coordinates instead\n// of node ids.  Internally, a radius search finds the closest\n// node within 5m\ntaglookup.loadOSMExtract(path.join(__dirname,'data/winthrop.osm'), (err) => {\n  if (err) throw err;\n  var coords = [[-120.1872774,48.4715898],[-120.1882910,48.4725110]];\n  taglookup.annotateRouteFromLonLats(coords, (err, wayIds) => {\n    if (err) throw err;\n    annotator.getAllTagsForWayId(wayIds[0], (err, tags) => {\n      if (err) throw err;\n      console.log(tags);\n    });\n  });\n}); \n\n```\n\n### SpeedLookup\n\nThe `SpeedLookup()` object is for loading segment speed information from CSV files, then looking it up quickly from an in-memory hashtable.\n\n**Example:**\n```\nvar speedlookup = new (require('route_annotator')).SpeedLookup();\n\n// Loads example.csv, then looks up the pairs 123-124, 124-125, 125-126\n// and prints the speeds for those segments (3 values) as comma-separated\n// data\nspeedlookup.loadCSV(\"example.csv\", (err) => {\n  if (err) throw err;\n  speedlookup.getRouteSpeeds([123,124,125,126],(err,results) => {\n    if (err) throw err;\n    console.log(results.join(\",\"));\n  });\n});\n```\n\nThe `loadCSV` method can also be passed an array of filenames.\n\n---\n\n### Example HTTP server\n\n```\nnpm install\ncurl --remote-name http://download.geofabrik.de/europe/monaco-latest.osm.pbf\nnode example-server.js monaco-latest.osm.pbf\n```\n\nThen, in a new terminal, you should be able to do:\n\n```\ncurl \"http://localhost:5000/coordlist/7.422155,43.7368838;7.4230139,43.7369751\"\n```\n---\n\n### Release\n\n- `git checkout master`\n- Update CHANGELOG.md\n- Bump version in package.json\n- `git commit -am \"vx.y.z [publish binary]\"` with Changelog list in commit message\n- Wait for Travis to finish publishing binaries so that all travis tests pass for the publish binary commit.\n- `git tag vx.y.z -a` with Changelog list in tag message\n- `git push origin master; git push origin --tags`\n- `npm publish`\n","created":"2016-04-22T04:58:17.698Z","modified":"2017-06-21T14:33:21.289Z","lastPublisher":{"name":"ghoshkaj","email":"ghoshkaj@gmail.com"},"owners":[{"email":"ghoshkaj@gmail.com","name":"ghoshkaj"},{"email":"danpat@danpat.net","name":"danpat"}],"other":{"_attachments":{},"_from":".","_id":"route_annotator","_nodeVersion":"4.4.7","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/route_annotator-0.0.5.tgz_1498055600269_0.31379212928004563"},"_npmUser":{"name":"ghoshkaj","email":"ghoshkaj@gmail.com"},"_npmVersion":"4.1.2","_rev":"6-82c94d221ce5ce7fa10b506baf0271cb","_shasum":"354125ecd2750b9a311163b2f68dabf18ceced70","author":{"name":"Mapbox"},"bugs":{"url":"https://github.com/mapbox/route-annotator/issues"},"directories":{},"dist-tags":{"latest":"0.0.5"},"dist":{"shasum":"354125ecd2750b9a311163b2f68dabf18ceced70","tarball":"https://registry.npmjs.org/route_annotator/-/route_annotator-0.0.5.tgz"},"maintainers":[{"email":"ghoshkaj@gmail.com","name":"ghoshkaj"},{"email":"danpat@danpat.net","name":"danpat"}],"readmeFilename":"README.md","time":{"modified":"2017-06-21T14:33:21.289Z","created":"2016-04-22T04:58:17.698Z","0.0.1":"2016-04-22T04:58:17.698Z","0.0.2":"2016-04-27T08:41:26.906Z","0.0.3":"2017-05-12T09:51:31.811Z","0.0.4":"2017-05-19T16:16:25.844Z","0.0.5":"2017-06-21T14:33:21.289Z"}}}