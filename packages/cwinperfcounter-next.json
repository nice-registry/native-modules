{"name":"cwinperfcounter-next","description":"Class to access Windows performance counters for Node.js","keywords":["Windows","performance counters"],"version":"0.0.21","repository":"https://github.com/marcominetti/cWinPerfCounter","main":"./index.js","engines":{"node":">=0.10"},"os":["win32","!linux","!darwin"],"cpu":["ia32","x64"],"license":"CC0-1.0","scripts":{"install":"node-gyp rebuild"},"dependencies":{"nan":"^2.0.9"},"gypfile":true,"gitHead":"9271b4a26042ed9c5e07255976714c20e84f641d","homepage":"https://github.com/marcominetti/cWinPerfCounter#readme","versions":[{"number":"0.0.19","date":"2015-06-23T06:48:32.220Z"},{"number":"0.0.20","date":"2015-06-23T07:52:41.770Z"},{"number":"0.0.21","date":"2015-09-28T10:40:40.251Z"}],"readme":"cWinPerfCounter\n===============\n\nAccess Windows performance counters through Node.js.\n\nGetting Started\n---------------\n1. Install cWinPerfCounter via NPM.\n  \n  `npm install cwinperfcounter`\n  \n  Optionally: rename `cwinperfcounter` to `cWinPerfCounter`: npm is unable to\n  handle the complexity of uppercase characters in a module name. Node.js on\n  Windows does not have this problem, so renaming the folder is not required\n  for you to use the module.\n  \n2. Require cWinPerfCounter in your project.\n  \n  `var cWinPerfCounter=require(\"cWinPerfCounter\");`\n\n3. Instantiate cWinPerfCounter for the performance counter you want to read.\n  \n  `var oPerfCounter = new cWinPerfCounter(\"\\\\Processor(_Total)\\\\% Processor Time\");`\n  \n4. Read values for the requested performance counter.\n  \n  ```  \n  setInterval(function() {\n    try {\n      console.log(oPerfCounter.fnGetValue());\n    } catch (oError) {\n      console.log(oError);\n    }\n  }, 1000);\n  ```\n  \n  This particular performance counter will return the average total CPU usage\n  on your machine since the last time it was read. This means it will not\n  return a value the first time you call it, but only after you have called it\n  twice. The try ... catch will handle the error on the first read.\n\nNotes\n-----\n### cWinPerfCounter cross-platform support\n\ncWinPerfCounter comes with pre-build binaries for all supported processor\narchitectures and Node.js versions (ia32 and x64, Node.js v0.9.0 - v0.12.0).\nThese files are stored in separate sub-folders of the `bin` folder. The\n`index.js` attempts to load each `.node` file for the user's processor\narchitecture until one works. This means it may attempt to load various versions\nthat fail before it will eventually load the right version and return.\n\nFuture Node.js versions may be supported, if they can load the addon for the\nlatest version included in this package. If the requirements for compiled addons\nchange in a future version, an additional build of cWinPerfCounter.node will be\nrequired.\n\n### Building cWinPerfCounter\nThe `build.cmd` script will read a list of combinations of processor\narchitecture and Node.js version from \"build-targets.txt\". It will build a\ncWinPerfCounter.node file for each of them and store it in its own sub-folder\nunder the \"bin\" folder.\nYou can also build a `.node` file for a single processor architecture and\nNode.js version by providing them as arguments to `build.cmd`, eg `build.cmd\nx64 0.10.10`.\n\n### How to find out what performance counters are available\n\nYou can either search the web, or you can run \"perfmon.exe\" on your machine and\nfollow these steps:\n* open `Performance` -> `Monitoring Tools` -> `Performance Monitor`,\n* right-click on the graph and select \"Add Counters...\",\n* select and add the counters you are interested in, then click \"Ok\".\n* right-click the graph again and select \"Properties...\",\n* in the \"Data\" tab, you will see a list of the names of the performance\n  counters you have selected. You should be able to use these names with\n  cWinPerfCounter.\n\n--------------------------------------------------------------------------------\n\n### License\nThis code is licensed under [CC0 v1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/).\n","created":"2015-06-23T06:48:32.220Z","modified":"2015-09-28T10:40:40.251Z","lastPublisher":{"name":"marcominetti","email":"marco.minetti@novetica.org"},"owners":[{"name":"marcominetti","email":"marco.minetti@novetica.org"}],"other":{"_attachments":{},"_from":".","_id":"cwinperfcounter-next","_nodeVersion":"4.1.1","_npmUser":{"name":"marcominetti","email":"marco.minetti@novetica.org"},"_npmVersion":"2.14.4","_rev":"1-464ca17b38d4c3becdc452ede0958ad8","_shasum":"aa81420cb3931d58ba8c54607c431283d9d46330","author":{"name":"SkyLined","email":"berendjanwever@gmail.com","url":"https://github.com/SkyLined"},"bugs":{"url":"https://github.com/marcominetti/cWinPerfCounter/issues"},"directories":{},"dist-tags":{"latest":"0.0.21"},"dist":{"shasum":"aa81420cb3931d58ba8c54607c431283d9d46330","tarball":"http://registry.npmjs.org/cwinperfcounter-next/-/cwinperfcounter-next-0.0.21.tgz"},"maintainers":[{"name":"marcominetti","email":"marco.minetti@novetica.org"}],"readmeFilename":"README.md","time":{"modified":"2015-09-28T10:40:40.251Z","created":"2015-06-23T06:48:32.220Z","0.0.19":"2015-06-23T06:48:32.220Z","0.0.20":"2015-06-23T07:52:41.770Z","0.0.21":"2015-09-28T10:40:40.251Z"}}}