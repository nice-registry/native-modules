{"name":"libalac","version":"0.1.2","description":"Apple Lossless codec bindings","homepage":"http://github.com/stephank/node-libalac","repository":"https://github.com/stephank/node-libalac","license":"Apache-2.0","dependencies":{"nan":"^2.1.0"},"devDependencies":{"tap":"^2.1.1"},"scripts":{"test":"tap ./tests/tests.js","install":"node-gyp rebuild"},"main":"./index.js","gypfile":true,"gitHead":"778aeab39fa76fffbb6c61b1a1b1a310856a1a14","versions":[{"number":"0.1.0","date":"2014-11-04T20:54:32.882Z"},{"number":"0.1.1","date":"2015-10-17T11:28:42.677Z"},{"number":"0.1.2","date":"2015-10-17T18:42:47.799Z"}],"readme":"## libalac [![Build Status](https://secure.travis-ci.org/stephank/node-libalac.png)](http://travis-ci.org/stephank/node-libalac)\n\nBindings to the official Apple Lossless (ALAC) encoder and decoder.\n\n**WARNING: This module is rather broken. I wrote it with poor understanding of\nhow the codec works. Use at your own risk!**\n\n### Installing\n\n    $ npm install libalac\n\n### Encoder usage\n\nThe encoder is a regular stream:\n\n    var alac = require('libalac');\n    var enc = alac.encoder({\n      sampleRate: 44100,\n      channels: 2,\n      bitDepth: 16\n    });\n    input.pipe(enc).pipe(output);\n\n`alac.encoder()` must have an object argument, which can contain regular\nreadable and writable stream options, along with the following:\n\n - `sampleRate` (in Hz) *required*\n - `channels`, *required*\n - `bitDepth`, *required*\n - `framesPerPacket`, defaults to `4096` (usually no need to modify this)\n\nThe encoder object also has the following properties:\n\n - `cookie`, a buffer containing the ALAC magic cookie. These are parameters\n   for the decoder, and is what you'd place in e.g. the `kuki` chunk of a\n   CAF-file.\n\n - `packets`, array of sizes of packets in the stream. This array is only ever\n   pushed to, and can be modified, or even replaced with an array-like object,\n   as long as it has a `push` method.\n\n - `sampleRate`, `channels`, `bitDepth`, and `framesPerPacket` containing the\n   final parameters used in the encoder.\n\nNote that the encoder always reads input in native byte order!\n\n### Decoder usage\n\nThe decoder is a regular stream:\n\n    var alac = require('libalac');\n    var dec = alac.decoder({\n      cookie: cookie,\n      channels: 2,\n      bitDepth: 16,\n      framesPerPacket: 4096,\n      packets: packets\n    });\n    input.pipe(dec).pipe(output);\n\n`alac.decoder()` must have an object argument, which can contain regular\nreadable and writable stream options, along with the following:\n\n - `cookie`, *required*, a buffer as generated by the encoder\n - `channels`, *required*\n - `bitDepth`, *required*\n - `framesPerPacket`, *required*\n - `packets`, an array of packet sizes\n\nInstead of providing `packets` up front, it can also be provided (or extended)\nduring streaming by calling `packets(arr)` one or more times.\n\nUsually, these parameters can all be extracted from the container format. For\nexample, in a CAF-file, they live in the `desc`, `kuki` and `pakt` chunks.\n\nNote that the decoder always outputs in native byte order!\n\n### Hacking the code\n\n    git clone https://github.com/stephank/libalac.git\n    cd libalac\n    npm install\n    npm test\n","created":"2014-11-04T20:54:32.882Z","modified":"2015-10-17T18:42:47.799Z","lastPublisher":{"name":"stephank","email":"stephan@kochen.nl"},"owners":[{"name":"stephank","email":"stephan@kochen.nl"}],"other":{"_attachments":{},"_from":".","_id":"libalac","_nodeVersion":"4.2.1","_npmUser":{"name":"stephank","email":"stephan@kochen.nl"},"_npmVersion":"3.3.8","_rev":"1-408f2e32e5734fb07515b1c374610c01","_shasum":"0728e82591beb4c49d762c08dd138bb1241c01c5","bugs":{"url":"https://github.com/stephank/node-libalac/issues"},"contributors":[{"name":"St√©phan Kochen","email":"stephan@kochen.nl","url":"https://github.com/stephank"},{"name":"Adam Duncan","email":"adam.duncan@clock.co.uk","url":"https://github.com/microadam"},{"name":"jacaru","email":"jacaru@gmail.com","url":"https://github.com/jacaru"}],"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"0728e82591beb4c49d762c08dd138bb1241c01c5","tarball":"http://registry.npmjs.org/libalac/-/libalac-0.1.2.tgz"},"maintainers":[{"name":"stephank","email":"stephan@kochen.nl"}],"readmeFilename":"README.md","time":{"modified":"2015-10-17T18:42:47.799Z","created":"2014-11-04T20:54:32.882Z","0.1.0":"2014-11-04T20:54:32.882Z","0.1.1":"2015-10-17T11:28:42.677Z","0.1.2":"2015-10-17T18:42:47.799Z"}}}