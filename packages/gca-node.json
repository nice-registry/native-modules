{"name":"gca-node","version":"1.2.1","main":"gca.js","description":"Nintendo® Wii U GameCube™ Adapter native support for Node.js applications.","scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild"},"repository":"https://github.com/yonicstudios/gca-node","keywords":["gamecube","wiiu","controller","adapter","gamedev"],"dependencies":{"nan":"^2.5.1"},"license":"GPL-3.0","gypfile":true,"homepage":"https://github.com/yonicstudios/gca-node#readme","gitHead":"c5ad8f724635358d86ded805633bae9e8f092fa6","versions":[{"number":"0.1.0","date":"2017-02-02T19:14:23.510Z"},{"number":"0.1.1","date":"2017-02-02T19:22:07.874Z"},{"number":"1.0.0","date":"2017-02-04T18:08:44.793Z"},{"number":"1.0.1","date":"2017-02-04T18:23:19.547Z"},{"number":"1.0.2","date":"2017-02-04T18:41:24.314Z"},{"number":"1.1.0","date":"2017-02-05T00:39:50.110Z"},{"number":"1.1.1","date":"2017-02-05T01:29:49.679Z"},{"number":"1.2.0","date":"2017-02-05T14:27:36.605Z"},{"number":"1.2.1","date":"2017-02-05T14:39:01.166Z"}],"readme":"![gca-node logo][logo]\r\n\r\ngca-node is a NodeJS addon that adds Nintendo&reg; Wii U GameCube&trade; Adapter native support for NodeJS applications.\r\n\r\n## Usage\r\n\r\n**gca-node currently only builds on Windows 7+ 64-bit and Linux**, although there is planned support for Linux and Mac OS.\r\nAs of now, it can only be used on NW.js.\r\n\r\n### Windows\r\n\r\n#### Prerequisites\r\n  * **Visual Studio 2015** with standard C++ tools.\r\n  * **Node 7.5.0** or higher, with npm installed.\r\n  * **Zadig**: You must use it to replace the HID driver installed on Windows for the adapter to a generic WinUSB one.\r\n  \r\n### Building\r\n\r\n 1. Download or clone the gca-node repository.\r\n 2. Install `node-gyp` globally (`npm install node-gyp -g`)\r\n 3. Open the CLI inside the repository and execute `node-gyp rebuild`.\r\n\r\n### Linux\r\nTested on Arch Linux and Ubuntu, but it seems to be working for almost any Linux distro with a fairly recent linux kernel.\r\n\r\n#### Prereqisites\r\nWhen using your system's package manager. Use the specific commands for your distro.\r\n\r\n * **Make**. It can be already installed on your system. If not, install it from your system's package manager.\r\n * **libusb-1.0**. You can install it from your system's package manager. If specified, please install the -dev packages.\r\n * **Node 7.5.0** or higher, with npm installed.\r\n\r\n#### Building\r\n\r\n 1. Download or clone the gca-node repository.\r\n 2. Install `node-gyp` globally (`sudo npm install node-gyp -g`)\r\n 3. Open the CLI inside the repository and execute `node-gyp rebuild`.\r\n\r\n#### Configuration\r\nLike Windows, Linux distros require some special configuration. Linux fully supports the adapter's built-in drivers, but an udev rule must be added in order to allow access for gca-node.\r\n\r\n 1. Go to `/lib/udev/rules.d/`.\r\n 2. Edit `XX-gcadapter.rules`, if there isn't one, create a file with the following `51-gcadapter.rules`.\r\n\r\nHere are the contents of the file:\r\n`SUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", ATTRS{idVendor}==\"057e\", ATTRS{idProduct}==\"0337\", MODE=\"0666\"`\r\n\r\n### test.js\r\nOnce everything has been configured, you may run a test program by running `node test.js`.\r\n\r\n### NW.js\r\nThis is common for all operating systems.\r\n\r\n1. Download NW.js SDK flavor.\r\n2. Add `gca-node` to your project's `package.json` dependencies.\r\n3. Copy the included batch program for your required OS:\r\n    * **[Windows]:** `configure.bat`\r\n    * **[Linux]:** `configure.sh`\r\n4. Open the CLI inside your NW.js project, and run the copied configure file to install the addon.\r\n5. **[Tip]:** Whenever you need to use gca-node, use an alias for require so that other NodeJS tools like webpack do not mistake it as a NodeJS module.\r\n\r\n   ```\r\n    var native_require = eval('require');\r\n    gca_node = native_require('gca-node.node');\r\n   ```\r\n\r\n## gca-node API\r\nTo be added on Wiki pages.\r\n\r\n### Setup()\r\nDetects the first Nintendo&reg; Wii U GameCube&trade; Adapter connected in your computer.\r\nReturns 0 if the setup has detected one.\r\n\r\n### Load()\r\nClaims the interface to be used on the NodeJS application.\r\nReturns 0 if an interface has been succesfully claimed.\r\n\r\n### Process()\r\nReturns an array of 4 objects with the current status of each port of the adapter.\r\nEach object contains a status for each port, whether if there is a GameCube&trade; Controller connected or not.\r\n\r\n### Request()\r\nReturns debug information about the current status of the GameCube controllers.\r\n\r\n### RawData()\r\nReturns raw binary data of the status of the Adapter.\r\n\r\n### Unload()\r\nReleases the interface so that it can be used by other applications.\r\nReturns 0 if succesful.\r\n\r\n### Stop()\r\nCloses the Nintendo&reg; Wii U GameCube&trade; Adapter so that it can be safely unplugged.\r\nReturns 0 if succesful.\r\n\r\n## FAQ\r\n  * **What is the difference between gca-node and gca+?**\r\n     *  gca-node and the upcoming sister project [gca+][1] share almost the same source code. gca-node is designed for NodeJS applications, and gca+ is designed for C++ applications such as Unreal Engine.\r\n  * **Will gca-node support rumble?**\r\n     * gca-node 2.0 will be able to send rumble commands to the controllers.\r\n  * **Will gca-node support third party GameCube Controllers?**\r\n     * This has not been tested, but in theory it is very likely that third party GameCube controllers are compatible with gca-node. However, their extra features (i.e. turbo mode) will most likely be not supported due to the adapter's specifications.\r\n  * **Will gca-node support third party GameCube USB Adapters?**\r\n     * It is very unlikely due to the structure of gca-node as of now.\r\n  * **Will gca-node support connection with Game Boy Advance with GBA Link?**\r\n     * No. Unfortunately, the specifications of the adapter make it incompatible with the GBA Link. Even if it were to be compatible, remotely interfacing with the Game Boy Advance is currently impossible.\r\n  * **When will gca-node be cross-platform?**\r\n     * You can test cross-platforming support on the crossplatform branch, though it is expected to be on the master branch on gca-node 1.4.x.\r\n  * **Will gca-node br available for 32-bit platforms?**\r\n     * gca-node 1.5.x will start experimenting with 32-bit platforms.\r\n  * **Will gca-node support [electron][2] and apm?**\r\n     * Probably not. Testings with electron have reported problems due to using a different version of NodeJS and incomaptibilities with apm. We will investigate on a workaround during gca-node 2.x.\r\n  * **[Windows] Why is it necessary to use just Zadig? Can't I just use [ElMassivo's USB GameCube Adapter][3] instead?** \r\n     * *ElMassivo's USB GameCube Adapter must remain inactive while gca-node is running*, as it claims the only interface available of the adapter. Without any other free interfaces, gca-node is unable to use the adapter, and viceversa.\r\n     * However, you can install ElMassivo's USB GameCube Adapter and not use it, since Zadig is a component of this program.\r\n  * **Why is gca-node better than HTML5 Gamepad API?**\r\n     * HTML5 Gamepad API requires ElMassivo's USB GameCube Adapter, which does not bring all native capabilities that gca-node offers, like real-time input or rumble support.\r\n     * Chromium's support for Nintendo&reg; Wii U GameCube&trade; Adapter is currently incomplete and glitchy.\r\n\r\n[logo]: http://i.imgur.com/quWt3jK.png\r\n[1]: https://github.com/yonicstudios/gca-plus\r\n[2]: https://github.com/electron/electron\r\n[3]: http://m4sv.com/page/wii-u-gcn-usb-driver","created":"2017-02-02T19:14:23.510Z","modified":"2017-02-05T14:39:01.166Z","lastPublisher":{"name":"yonicstudios","email":"yonicstudios@gmail.com"},"owners":[{"name":"yonicstudios","email":"yonicstudios@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"gca-node","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gca-node-1.2.1.tgz_1486305540408_0.7324947554152459"},"_npmUser":{"name":"yonicstudios","email":"yonicstudios@gmail.com"},"_npmVersion":"4.1.2","_rev":"9-00242f4d7006c838e96c6cfead443ca8","_shasum":"3ce38292029835f85e60bf68abf74e03bbf29f2b","author":{"name":"YonicStudios"},"bugs":{"url":"https://github.com/yonicstudios/gca-node/issues"},"directories":{},"dist-tags":{"latest":"1.2.1"},"dist":{"shasum":"3ce38292029835f85e60bf68abf74e03bbf29f2b","tarball":"https://registry.npmjs.org/gca-node/-/gca-node-1.2.1.tgz"},"maintainers":[{"name":"yonicstudios","email":"yonicstudios@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-05T14:39:01.166Z","created":"2017-02-02T19:14:23.510Z","0.1.0":"2017-02-02T19:14:23.510Z","0.1.1":"2017-02-02T19:22:07.874Z","1.0.0":"2017-02-04T18:08:44.793Z","1.0.1":"2017-02-04T18:23:19.547Z","1.0.2":"2017-02-04T18:41:24.314Z","1.1.0":"2017-02-05T00:39:50.110Z","1.1.1":"2017-02-05T01:29:49.679Z","1.2.0":"2017-02-05T14:27:36.605Z","1.2.1":"2017-02-05T14:39:01.166Z"}}}