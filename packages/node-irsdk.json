{"name":"node-irsdk","version":"2.0.0","description":"iRacing SDK implementation for Node.js","main":"src/node-irsdk.js","scripts":{"install":"prebuild-install || node-gyp rebuild","prebuild-upload":"prebuild --all --strip -u %GH_TOKEN%","test":"npm run lint && npm run mocha","mocha":"mocha src/**/*-spec.js","lint":"standard","doc":"jsdoc2md -t src/doc/README.hbs --partial src/doc/examples.hbs -m none -g none src/node-irsdk.js src/JsIrSdk.js src/IrSdkConsts.js > README.md","ready":"npm test && node test/smoke-test.js && npm run doc"},"keywords":["iracing"],"license":"MIT","repository":"https://github.com/apihlaja/node-irsdk","engines":{"node":">=4"},"dependencies":{"bindings":"^1.2.1","js-yaml":"^3.3.1","nan":"2.5.1","prebuild-install":"2.1.0"},"devDependencies":{"chai":"^3.2.0","jsdoc-to-markdown":"^3.0.0","mocha":"^3.1.2","moment":"^2.15.2","prebuild":"6.0.2","sandboxed-module":"^2.0.2","sinon":"^1.17.6","sinon-chai":"^2.8.0","standard":"^8.5.0"},"standard":{"globals":["it","describe","beforeEach","afterEach","sinon"]},"gitHead":"4fe7eaf58dcfc377c6df30a8d2d5c109744ffd21","homepage":"https://github.com/apihlaja/node-irsdk#readme","versions":[{"number":"1.0.1","date":"2015-08-21T00:16:48.813Z"},{"number":"1.0.2","date":"2015-08-21T00:32:17.498Z"},{"number":"1.0.3","date":"2015-08-22T02:30:34.063Z"},{"number":"1.0.4","date":"2015-08-22T02:51:59.411Z"},{"number":"1.0.5","date":"2015-08-25T10:36:44.704Z"},{"number":"1.0.6","date":"2015-08-25T11:48:16.346Z"},{"number":"1.0.7","date":"2015-09-01T13:23:09.744Z"},{"number":"1.0.8","date":"2015-09-01T17:24:09.654Z"},{"number":"1.0.9","date":"2015-09-11T01:55:39.224Z"},{"number":"1.0.10","date":"2015-09-25T04:19:03.201Z"},{"number":"1.0.11","date":"2016-04-11T05:30:48.231Z"},{"number":"1.0.12","date":"2016-04-13T22:59:18.236Z"},{"number":"1.0.13","date":"2016-06-02T11:16:53.567Z"},{"number":"1.0.14","date":"2016-06-13T15:24:12.327Z"},{"number":"1.0.15","date":"2016-11-04T14:49:59.304Z"},{"number":"1.0.1-5.1","date":"2016-11-04T14:59:39.053Z"},{"number":"1.0.15-beta2","date":"2016-11-04T15:05:28.288Z"},{"number":"1.0.15-beta3","date":"2016-11-04T15:21:53.565Z"},{"number":"1.0.15-beta4","date":"2016-11-04T15:27:47.578Z"},{"number":"1.0.15-beta5","date":"2016-11-04T15:33:22.156Z"},{"number":"1.0.15-beta6","date":"2016-11-04T15:35:46.475Z"},{"number":"1.0.15-beta7","date":"2016-11-04T15:42:30.492Z"},{"number":"1.0.16","date":"2016-11-04T16:03:25.596Z"},{"number":"1.1.0","date":"2016-11-10T15:02:25.704Z"},{"number":"1.1.1","date":"2016-11-12T18:48:02.713Z"},{"number":"1.1.2","date":"2016-11-20T09:08:45.869Z"},{"number":"2.0.0-beta1","date":"2017-02-12T23:01:24.754Z"},{"number":"2.0.0","date":"2017-02-14T01:00:37.642Z"}],"readme":"# node-irsdk\n\n[![Build status](https://ci.appveyor.com/api/projects/status/ukyuuq9004wy9h5b/branch/master?svg=true)](https://ci.appveyor.com/project/apihlaja/node-irsdk/branch/master)\n\nUnofficial [iRacing](http://www.iracing.com/) SDK implementation for Node.js.\n\n**node-irsdk** provides data access (live telemetry and session info) and most of available commands. You can find some usage examples from [utils](https://github.com/apihlaja/node-irsdk/tree/master/utils) directory, and there is some [data samples](https://github.com/apihlaja/node-irsdk/tree/master/sample-data) too.\n\n* [GitHub repo](https://github.com/apihlaja/node-irsdk)\n* [documentation](https://apihlaja.github.io/node-irsdk)\n* [forum thread](http://members.iracing.com/jforum/posts/list/3329583.page)\n\nOfficial C/C++ SDK is available [here](http://members.iracing.com/jforum/posts/list/1470675.page).\n\nOther iRSDK implementations: \n\n* [iRacingSdkWrapper (C#)](https://github.com/NickThissen/iRacingSdkWrapper)\n* [pyirsdk (python3)](https://github.com/kutu/pyirsdk/)\n* [iRacingSDK.Net](https://github.com/vipoo/iRacingSDK.Net)\n\n\n## Installing\n\nBefore installing, you need\n\n* Windows version of [Node.js](https://nodejs.org/download/) v4 or later\n* Visual Studio and Python 2.7 for node-gyp, see \n[installation instructions](https://github.com/TooTallNate/node-gyp)\n\n`npm install --save node-irsdk`\n\n\n<a name=\"module_irsdk\"></a>\n\n## irsdk\n\n* [irsdk](#module_irsdk)\n    * [.init([opts])](#module_irsdk.init) ⇒ <code>[iracing](#iracing)</code>\n    * [.getInstance()](#module_irsdk.getInstance) ⇒ <code>[iracing](#iracing)</code>\n\n<a name=\"module_irsdk.init\"></a>\n\n### irsdk.init([opts]) ⇒ <code>[iracing](#iracing)</code>\nInitialize JsIrSdk, can be done once before using getInstance first time.\n\n**Kind**: static method of <code>[irsdk](#module_irsdk)</code>  \n**Returns**: <code>[iracing](#iracing)</code> - Running instance of JsIrSdk  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [opts] | <code>Object</code> |  | Options |\n| [opts.telemetryUpdateInterval] | <code>Integer</code> | <code>0</code> | Telemetry update interval, milliseconds |\n| [opts.sessionInfoUpdateInterval] | <code>Integer</code> | <code>0</code> | SessionInfo update interval, milliseconds |\n| [opts.sessionInfoParser] | <code>[sessionInfoParser](#iracing..sessionInfoParser)</code> |  | Custom parser for session info |\n\n  \n```js\nvar irsdk = require('node-irsdk')\n// look for telemetry updates only once per 100 ms\nvar iracing = irsdk.init({telemetryUpdateInterval: 100})\n```\n<a name=\"module_irsdk.getInstance\"></a>\n\n### irsdk.getInstance() ⇒ <code>[iracing](#iracing)</code>\nGet initialized instance of JsIrSdk\n\n**Kind**: static method of <code>[irsdk](#module_irsdk)</code>  \n**Returns**: <code>[iracing](#iracing)</code> - Running instance of JsIrSdk  \n  \n```js\nvar irsdk = require('node-irsdk')\nvar iracing = irsdk.getInstance()\n```\n<a name=\"iracing\"></a>\n\n## iracing ⇐ <code>events.EventEmitter</code>\n**Kind**: global class  \n**Extends:** <code>events.EventEmitter</code>  \n**Emits**: <code>[Connected](#iracing+event_Connected)</code>, <code>[Disconnected](#iracing+event_Disconnected)</code>, <code>[Telemetry](#iracing+event_Telemetry)</code>, <code>[TelemetryDescription](#iracing+event_TelemetryDescription)</code>, <code>[SessionInfo](#iracing+event_SessionInfo)</code>  \n**See**: [EventEmitter API](https://nodejs.org/api/events.html#events_class_eventemitter)  \n\n* [iracing](#iracing) ⇐ <code>events.EventEmitter</code>\n    * [new JsIrSdk()](#new_iracing_new)\n    * _instance_\n        * [.Consts](#iracing+Consts) : <code>[IrSdkConsts](#IrSdkConsts)</code>\n        * [.camControls](#iracing+camControls) : <code>Object</code>\n            * [.setState(state)](#iracing+camControls.setState)\n            * [.switchToCar(carNum, [camGroupNum], [camNum])](#iracing+camControls.switchToCar)\n            * [.switchToPos(position, [camGroupNum], [camNum])](#iracing+camControls.switchToPos)\n        * [.playbackControls](#iracing+playbackControls) : <code>Object</code>\n            * [.play()](#iracing+playbackControls.play)\n            * [.pause()](#iracing+playbackControls.pause)\n            * [.fastForward([speed])](#iracing+playbackControls.fastForward)\n            * [.rewind([speed])](#iracing+playbackControls.rewind)\n            * [.slowForward([divider])](#iracing+playbackControls.slowForward)\n            * [.slowBackward([divider])](#iracing+playbackControls.slowBackward)\n            * [.search(searchMode)](#iracing+playbackControls.search)\n            * [.searchTs(sessionNum, sessionTimeMS)](#iracing+playbackControls.searchTs)\n            * [.searchFrame(frameNum, rpyPosMode)](#iracing+playbackControls.searchFrame)\n        * [.telemetry](#iracing+telemetry)\n        * [.telemetryDescription](#iracing+telemetryDescription)\n        * [.sessionInfo](#iracing+sessionInfo)\n        * [.execCmd(msgId, [arg1], [arg2], [arg3])](#iracing+execCmd)\n        * [.reloadTextures()](#iracing+reloadTextures)\n        * [.reloadTexture(carIdx)](#iracing+reloadTexture)\n        * [.execChatCmd(cmd, [arg])](#iracing+execChatCmd)\n        * [.execChatMacro(num)](#iracing+execChatMacro)\n        * [.execPitCmd(cmd, [arg])](#iracing+execPitCmd)\n        * [.execTelemetryCmd(cmd)](#iracing+execTelemetryCmd)\n        * [\"Connected\"](#iracing+event_Connected)\n        * [\"Disconnected\"](#iracing+event_Disconnected)\n        * [\"TelemetryDescription\"](#iracing+event_TelemetryDescription)\n        * [\"Telemetry\"](#iracing+event_Telemetry)\n        * [\"SessionInfo\"](#iracing+event_SessionInfo)\n        * [\"update\"](#iracing+event_update)\n    * _inner_\n        * [~sessionInfoParser](#iracing..sessionInfoParser) ⇒ <code>Object</code>\n\n<a name=\"new_iracing_new\"></a>\n\n### new JsIrSdk()\nJsIrSdk is javascript implementation of iRacing SDK.\n\n  Don't use constructor directly, use [getInstance](#module_irsdk.getInstance).\n\n  \n```js\nvar iracing = require('node-irsdk').getInstance()\n```\n<a name=\"iracing+Consts\"></a>\n\n### iracing.Consts : <code>[IrSdkConsts](#IrSdkConsts)</code>\niRacing SDK related constants\n\n**Kind**: instance property of <code>[iracing](#iracing)</code>  \n<a name=\"iracing+camControls\"></a>\n\n### iracing.camControls : <code>Object</code>\nCamera controls\n\n**Kind**: instance property of <code>[iracing](#iracing)</code>  \n\n* [.camControls](#iracing+camControls) : <code>Object</code>\n    * [.setState(state)](#iracing+camControls.setState)\n    * [.switchToCar(carNum, [camGroupNum], [camNum])](#iracing+camControls.switchToCar)\n    * [.switchToPos(position, [camGroupNum], [camNum])](#iracing+camControls.switchToPos)\n\n<a name=\"iracing+camControls.setState\"></a>\n\n#### camControls.setState(state)\nChange camera tool state\n\n**Kind**: static method of <code>[camControls](#iracing+camControls)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| state | <code>[CameraState](#IrSdkConsts.CameraState)</code> | new state |\n\n  \n```js\n// hide UI and enable mouse aim\nvar States = iracing.Consts.CameraState\nvar state = States.CamToolActive | States.UIHidden | States.UseMouseAimMode\niracing.camControls.setState(state)\n```\n<a name=\"iracing+camControls.switchToCar\"></a>\n\n#### camControls.switchToCar(carNum, [camGroupNum], [camNum])\nSwitch camera, focus on car\n\n**Kind**: static method of <code>[camControls](#iracing+camControls)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| carNum | <code>Integer</code> &#124; <code>String</code> &#124; <code>[CamFocusAt](#IrSdkConsts.CamFocusAt)</code> | Car to focus on |\n| [camGroupNum] | <code>Integer</code> | Select camera group |\n| [camNum] | <code>Integer</code> | Select camera |\n\n  \n```js\n// show car #2\niracing.camControls.switchToCar(2)\n      \n```\n  \n```js\n// show car #02\niracing.camControls.switchToCar('02')\n      \n```\n  \n```js\n// show leader\niracing.camControls.switchToCar('leader')\n      \n```\n  \n```js\n// show car #2 using cam group 3\niracing.camControls.switchToCar(2, 3)\n```\n<a name=\"iracing+camControls.switchToPos\"></a>\n\n#### camControls.switchToPos(position, [camGroupNum], [camNum])\nSwitch camera, focus on position\n\n**Kind**: static method of <code>[camControls](#iracing+camControls)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| position | <code>Integer</code> &#124; <code>[CamFocusAt](#IrSdkConsts.CamFocusAt)</code> | Position to focus on |\n| [camGroupNum] | <code>Integer</code> | Select camera group |\n| [camNum] | <code>Integer</code> | Select camera |\n\n  \n```js\niracing.camControls.switchToPos(2) // show P2\n```\n<a name=\"iracing+playbackControls\"></a>\n\n### iracing.playbackControls : <code>Object</code>\nReplay and playback controls\n\n**Kind**: instance property of <code>[iracing](#iracing)</code>  \n\n* [.playbackControls](#iracing+playbackControls) : <code>Object</code>\n    * [.play()](#iracing+playbackControls.play)\n    * [.pause()](#iracing+playbackControls.pause)\n    * [.fastForward([speed])](#iracing+playbackControls.fastForward)\n    * [.rewind([speed])](#iracing+playbackControls.rewind)\n    * [.slowForward([divider])](#iracing+playbackControls.slowForward)\n    * [.slowBackward([divider])](#iracing+playbackControls.slowBackward)\n    * [.search(searchMode)](#iracing+playbackControls.search)\n    * [.searchTs(sessionNum, sessionTimeMS)](#iracing+playbackControls.searchTs)\n    * [.searchFrame(frameNum, rpyPosMode)](#iracing+playbackControls.searchFrame)\n\n<a name=\"iracing+playbackControls.play\"></a>\n\n#### playbackControls.play()\nPlay replay\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n  \n```js\niracing.playbackControls.play()\n```\n<a name=\"iracing+playbackControls.pause\"></a>\n\n#### playbackControls.pause()\nPause replay\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n  \n```js\niracing.playbackControls.pause()\n```\n<a name=\"iracing+playbackControls.fastForward\"></a>\n\n#### playbackControls.fastForward([speed])\nfast-forward replay\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [speed] | <code>Integer</code> | <code>2</code> | FF speed, something between 2-16 works |\n\n  \n```js\niracing.playbackControls.fastForward() // double speed FF\n```\n<a name=\"iracing+playbackControls.rewind\"></a>\n\n#### playbackControls.rewind([speed])\nrewind replay\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [speed] | <code>Integer</code> | <code>2</code> | RW speed, something between 2-16 works |\n\n  \n```js\niracing.playbackControls.rewind() // double speed RW\n```\n<a name=\"iracing+playbackControls.slowForward\"></a>\n\n#### playbackControls.slowForward([divider])\nslow-forward replay, slow motion\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [divider] | <code>Integer</code> | <code>2</code> | divider of speed, something between 2-17 works |\n\n  \n```js\niracing.playbackControls.slowForward(2) // half speed\n```\n<a name=\"iracing+playbackControls.slowBackward\"></a>\n\n#### playbackControls.slowBackward([divider])\nslow-backward replay, reverse slow motion\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [divider] | <code>Integer</code> | <code>2</code> | divider of speed, something between 2-17 works |\n\n  \n```js\niracing.playbackControls.slowBackward(2) // half speed RW\n```\n<a name=\"iracing+playbackControls.search\"></a>\n\n#### playbackControls.search(searchMode)\nSearch things from replay\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| searchMode | <code>[RpySrchMode](#IrSdkConsts.RpySrchMode)</code> | what to search |\n\n  \n```js\niracing.playbackControls.search('nextIncident')\n```\n<a name=\"iracing+playbackControls.searchTs\"></a>\n\n#### playbackControls.searchTs(sessionNum, sessionTimeMS)\nSearch timestamp\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| sessionNum | <code>Integer</code> | Session number |\n| sessionTimeMS | <code>Integer</code> | Session time in milliseconds |\n\n  \n```js\n// jump to 2nd minute of 3rd session\niracing.playbackControls.searchTs(2, 2*60*1000)\n```\n<a name=\"iracing+playbackControls.searchFrame\"></a>\n\n#### playbackControls.searchFrame(frameNum, rpyPosMode)\nGo to frame. Frame counting can be relative to begin, end or current.\n\n**Kind**: static method of <code>[playbackControls](#iracing+playbackControls)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| frameNum | <code>Integer</code> | Frame number |\n| rpyPosMode | <code>[RpyPosMode](#IrSdkConsts.RpyPosMode)</code> | Is frame number relative to begin, end or current frame |\n\n  \n```js\niracing.playbackControls.searchFrame(1, 'current') // go to 1 frame forward\n```\n<a name=\"iracing+telemetry\"></a>\n\n### iracing.telemetry\nLatest telemetry, may be null or undefined\n\n**Kind**: instance property of <code>[iracing](#iracing)</code>  \n<a name=\"iracing+telemetryDescription\"></a>\n\n### iracing.telemetryDescription\nLatest telemetry, may be null or undefined\n\n**Kind**: instance property of <code>[iracing](#iracing)</code>  \n<a name=\"iracing+sessionInfo\"></a>\n\n### iracing.sessionInfo\nLatest telemetry, may be null or undefined\n\n**Kind**: instance property of <code>[iracing](#iracing)</code>  \n<a name=\"iracing+execCmd\"></a>\n\n### iracing.execCmd(msgId, [arg1], [arg2], [arg3])\nExecute any of available commands, excl. FFB command\n\n**Kind**: instance method of <code>[iracing](#iracing)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| msgId | <code>Integer</code> | Message id |\n| [arg1] | <code>Integer</code> | 1st argument |\n| [arg2] | <code>Integer</code> | 2nd argument |\n| [arg3] | <code>Integer</code> | 3rd argument |\n\n<a name=\"iracing+reloadTextures\"></a>\n\n### iracing.reloadTextures()\nReload all car textures\n\n**Kind**: instance method of <code>[iracing](#iracing)</code>  \n  \n```js\niracing.reloadTextures() // reload all paints\n```\n<a name=\"iracing+reloadTexture\"></a>\n\n### iracing.reloadTexture(carIdx)\nReload car's texture\n\n**Kind**: instance method of <code>[iracing](#iracing)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| carIdx | <code>Integer</code> | car to reload |\n\n  \n```js\niracing.reloadTexture(1) // reload paint of carIdx=1\n```\n<a name=\"iracing+execChatCmd\"></a>\n\n### iracing.execChatCmd(cmd, [arg])\nExecute chat command\n\n**Kind**: instance method of <code>[iracing](#iracing)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| cmd | <code>[ChatCommand](#IrSdkConsts.ChatCommand)</code> |  |\n| [arg] | <code>Integer</code> | Command argument, if needed |\n\n  \n```js\niracing.execChatCmd('cancel') // close chat window\n```\n<a name=\"iracing+execChatMacro\"></a>\n\n### iracing.execChatMacro(num)\nExecute chat macro\n\n**Kind**: instance method of <code>[iracing](#iracing)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| num | <code>Integer</code> | Macro's number (0-15) |\n\n  \n```js\niracing.execChatMacro(1) // macro 1\n```\n<a name=\"iracing+execPitCmd\"></a>\n\n### iracing.execPitCmd(cmd, [arg])\nExecute pit command\n\n**Kind**: instance method of <code>[iracing](#iracing)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| cmd | <code>[PitCommand](#IrSdkConsts.PitCommand)</code> |  |\n| [arg] | <code>Integer</code> | Command argument, if needed |\n\n  \n```js\n// full tank, no tires, no tear off\niracing.execPitCmd('clear')\niracing.execPitCmd('fuel', 999) // 999 liters\niracing.execPitCmd('lf') // new left front\niracing.execPitCmd('lr', 200) // new left rear, 200 kPa\n```\n<a name=\"iracing+execTelemetryCmd\"></a>\n\n### iracing.execTelemetryCmd(cmd)\nControl telemetry logging (ibt file)\n\n**Kind**: instance method of <code>[iracing](#iracing)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| cmd | <code>[TelemCommand](#IrSdkConsts.TelemCommand)</code> | Command: start/stop/restart |\n\n  \n```js\niracing.execTelemetryCmd('restart')\n```\n<a name=\"iracing+event_Connected\"></a>\n\n### \"Connected\"\niRacing, sim, is started\n\n**Kind**: event emitted by <code>[iracing](#iracing)</code>  \n  \n```js\niracing.on('Connected', function (evt) {\n  console.log(evt)\n})\n```\n<a name=\"iracing+event_Disconnected\"></a>\n\n### \"Disconnected\"\niRacing, sim, was closed\n\n**Kind**: event emitted by <code>[iracing](#iracing)</code>  \n  \n```js\niracing.on('Disconnected', function (evt) {\n  console.log(evt)\n})\n```\n<a name=\"iracing+event_TelemetryDescription\"></a>\n\n### \"TelemetryDescription\"\nTelemetry description, contains description of available telemetry values\n\n**Kind**: event emitted by <code>[iracing](#iracing)</code>  \n  \n```js\niracing.on('TelemetryDescription', function (data) {\n  console.log(evt)\n})\n```\n<a name=\"iracing+event_Telemetry\"></a>\n\n### \"Telemetry\"\nTelemetry update\n\n**Kind**: event emitted by <code>[iracing](#iracing)</code>  \n  \n```js\niracing.on('Telemetry', function (evt) {\n  console.log(evt)\n})\n```\n<a name=\"iracing+event_SessionInfo\"></a>\n\n### \"SessionInfo\"\nSessionInfo update\n\n**Kind**: event emitted by <code>[iracing](#iracing)</code>  \n  \n```js\niracing.on('SessionInfo', function (evt) {\n  console.log(evt)\n})\n```\n<a name=\"iracing+event_update\"></a>\n\n### \"update\"\nany update event\n\n**Kind**: event emitted by <code>[iracing](#iracing)</code>  \n  \n```js\niracing.on('update', function (evt) {\n  console.log(evt)\n})\n```\n<a name=\"iracing..sessionInfoParser\"></a>\n\n### iracing~sessionInfoParser ⇒ <code>Object</code>\nParser for SessionInfo YAML\n\n**Kind**: inner typedef of <code>[iracing](#iracing)</code>  \n**Returns**: <code>Object</code> - parsed session info  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| sessionInfo | <code>String</code> | SessionInfo YAML |\n\n<a name=\"IrSdkConsts\"></a>\n\n## IrSdkConsts\nIrSdkConsts, iRacing SDK constants/enums.\n\n**Kind**: global constant  \n  \n```js\nvar IrSdkConsts = require('node-irsdk').getInstance().Consts\n```\n\n* [IrSdkConsts](#IrSdkConsts)\n    * [.BroadcastMsg](#IrSdkConsts.BroadcastMsg)\n    * [.CameraState](#IrSdkConsts.CameraState)\n    * [.RpyPosMode](#IrSdkConsts.RpyPosMode)\n    * [.RpySrchMode](#IrSdkConsts.RpySrchMode)\n    * [.RpyStateMode](#IrSdkConsts.RpyStateMode)\n    * [.ReloadTexturesMode](#IrSdkConsts.ReloadTexturesMode)\n    * [.ChatCommand](#IrSdkConsts.ChatCommand)\n    * [.PitCommand](#IrSdkConsts.PitCommand)\n    * [.TelemCommand](#IrSdkConsts.TelemCommand)\n    * [.CamFocusAt](#IrSdkConsts.CamFocusAt)\n\n<a name=\"IrSdkConsts.BroadcastMsg\"></a>\n\n### IrSdkConsts.BroadcastMsg\nAvailable command messages.\n\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| CamSwitchPos | <code>0</code> | Switch cam, args: car position, group, camera |\n| CamSwitchNum | <code>1</code> | Switch cam, args, driver #, group, camera |\n| CamSetState | <code>2</code> | Set cam state, args: CameraState, unused, unused |\n| ReplaySetPlaySpeed | <code>3</code> | Set replay speed, args: speed, slowMotion, unused |\n| ReplaySetPlayPosition | <code>4</code> | Jump to frame, args: RpyPosMode, Frame Number (high, low) |\n| ReplaySearch | <code>5</code> | Search things from replay, args: RpySrchMode, unused, unused |\n| ReplaySetState | <code>6</code> | Set replay state, args: RpyStateMode, unused, unused |\n| ReloadTextures | <code>7</code> | Reload textures, args: ReloadTexturesMode, carIdx, unused |\n| ChatComand | <code>8</code> | Chat commands, args: ChatCommand, subCommand, unused |\n| PitCommand | <code>9</code> | Pit commands, args: PitCommand, parameter |\n| TelemCommand | <code>10</code> | Disk telemetry commands, args: TelemCommand, unused, unused |\n| FFBCommand | <code>11</code> | *not supported by node-irsdk**: Change FFB settings, args:  FFBCommandMode, value (float, high, low) |\n| ReplaySearchSessionTime | <code>12</code> | Search by timestamp, args: sessionNum, sessionTimeMS (high, low) |\n\n<a name=\"IrSdkConsts.CameraState\"></a>\n\n### IrSdkConsts.CameraState\nCamera state\n    Camera state is bitfield; use these values to compose a new state.\n\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| IsSessionScreen | <code>1</code> | Is driver out of the car |\n| IsScenicActive | <code>2</code> | The scenic camera is active (no focus car) |\n| CamToolActive | <code>4</code> | Activate camera tool |\n| UIHidden | <code>8</code> | Hide UI |\n| UseAutoShotSelection | <code>16</code> | Enable auto shot selection |\n| UseTemporaryEdits | <code>32</code> | Enable temporary edits |\n| UseKeyAcceleration | <code>64</code> | Enable key acceleration |\n| UseKey10xAcceleration | <code>128</code> | Enable 10x key acceleration |\n| UseMouseAimMode | <code>256</code> | Enable mouse aim |\n\n<a name=\"IrSdkConsts.RpyPosMode\"></a>\n\n### IrSdkConsts.RpyPosMode\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| Begin | <code>0</code> | Frame number is relative to beginning |\n| Current | <code>1</code> | Frame number is relative to current frame |\n| End | <code>2</code> | Frame number is relative to end |\n\n<a name=\"IrSdkConsts.RpySrchMode\"></a>\n\n### IrSdkConsts.RpySrchMode\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default |\n| --- | --- |\n| ToStart | <code>0</code> | \n| ToEnd | <code>1</code> | \n| PrevSession | <code>2</code> | \n| NextSession | <code>3</code> | \n| PrevLap | <code>4</code> | \n| NextLap | <code>5</code> | \n| PrevFrame | <code>6</code> | \n| NextFrame | <code>7</code> | \n| PrevIncident | <code>8</code> | \n| NextIncident | <code>9</code> | \n\n<a name=\"IrSdkConsts.RpyStateMode\"></a>\n\n### IrSdkConsts.RpyStateMode\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| EraseTape | <code>0</code> | Clear any data in the replay tape (works only if replay spooling disabled) |\n\n<a name=\"IrSdkConsts.ReloadTexturesMode\"></a>\n\n### IrSdkConsts.ReloadTexturesMode\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default |\n| --- | --- |\n| All | <code>0</code> | \n| CarIdx | <code>1</code> | \n\n<a name=\"IrSdkConsts.ChatCommand\"></a>\n\n### IrSdkConsts.ChatCommand\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| Macro | <code>0</code> | Macro, give macro num (0-15) as argument |\n| BeginChat | <code>1</code> | Open up a new chat window |\n| Reply | <code>2</code> | Reply to last private chat |\n| Cancel | <code>3</code> | Close chat window |\n\n<a name=\"IrSdkConsts.PitCommand\"></a>\n\n### IrSdkConsts.PitCommand\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| Clear | <code>0</code> | Clear all pit checkboxes |\n| WS | <code>1</code> | Clean the winshield, using one tear off |\n| Fuel | <code>2</code> | Request fuel, optional argument: liters |\n| LF | <code>3</code> | Request new left front, optional argument: pressure in kPa |\n| RF | <code>4</code> | Request new right front, optional argument: pressure in kPa |\n| LR | <code>5</code> | Request new left rear, optional argument: pressure in kPa |\n| RR | <code>6</code> | Request new right rear, optional argument: pressure in kPa |\n| ClearTires | <code>7</code> | Clear tire pit checkboxes |\n| FR | <code>8</code> | Request a fast repair |\n\n<a name=\"IrSdkConsts.TelemCommand\"></a>\n\n### IrSdkConsts.TelemCommand\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| Stop | <code>0</code> | Turn telemetry recording off |\n| Start | <code>1</code> | Turn telemetry recording on |\n| Restart | <code>2</code> | Write current file to disk and start a new one |\n\n<a name=\"IrSdkConsts.CamFocusAt\"></a>\n\n### IrSdkConsts.CamFocusAt\nWhen switching camera, these can be used instead of car number / position\n\n**Kind**: static enum of <code>[IrSdkConsts](#IrSdkConsts)</code>  \n**Properties**\n\n| Name | Default | Description |\n| --- | --- | --- |\n| Incident | <code>-3</code> |  |\n| Leader | <code>-2</code> |  |\n| Exciting | <code>-1</code> |  |\n| Driver | <code>0</code> | Use car number / position instead of this |\n\n\n\n## License\n\nReleased under the [MIT License](https://github.com/apihlaja/node-irsdk/blob/master/LICENSE.md).","created":"2015-08-21T00:16:48.813Z","modified":"2017-02-14T01:00:37.642Z","lastPublisher":{"name":"apihlaja","email":"antti.pihlaja@live.fi"},"owners":[{"name":"apihlaja","email":"antti.pihlaja@live.fi"}],"other":{"_attachments":{},"_from":".","_id":"node-irsdk","_nodeVersion":"6.9.4","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/node-irsdk-2.0.0.tgz_1487034036838_0.14351153350435197"},"_npmUser":{"name":"apihlaja","email":"antti.pihlaja@live.fi"},"_npmVersion":"3.10.10","_rev":"16-52a20ebf9e3943c2dd5b8e2e6dcdb039","_shasum":"c15c2aab956872cef09fe32f42cc69ce51a52f51","author":{"name":"Antti Pihlaja"},"bugs":{"url":"https://github.com/apihlaja/node-irsdk/issues"},"directories":{},"dist-tags":{"latest":"2.0.0","beta":"2.0.0-beta1"},"dist":{"shasum":"c15c2aab956872cef09fe32f42cc69ce51a52f51","tarball":"https://registry.npmjs.org/node-irsdk/-/node-irsdk-2.0.0.tgz"},"maintainers":[{"name":"apihlaja","email":"antti.pihlaja@live.fi"}],"readmeFilename":"README.md","time":{"modified":"2017-02-14T01:00:37.642Z","created":"2015-08-21T00:16:48.813Z","1.0.1":"2015-08-21T00:16:48.813Z","1.0.2":"2015-08-21T00:32:17.498Z","1.0.3":"2015-08-22T02:30:34.063Z","1.0.4":"2015-08-22T02:51:59.411Z","1.0.5":"2015-08-25T10:36:44.704Z","1.0.6":"2015-08-25T11:48:16.346Z","1.0.7":"2015-09-01T13:23:09.744Z","1.0.8":"2015-09-01T17:24:09.654Z","1.0.9":"2015-09-11T01:55:39.224Z","1.0.10":"2015-09-25T04:19:03.201Z","1.0.11":"2016-04-11T05:30:48.231Z","1.0.12":"2016-04-13T22:59:18.236Z","1.0.13":"2016-06-02T11:16:53.567Z","1.0.14":"2016-06-13T15:24:12.327Z","1.0.15":"2016-11-04T14:49:59.304Z","1.0.1-5.1":"2016-11-04T14:59:39.053Z","1.0.15-beta2":"2016-11-04T15:05:28.288Z","1.0.15-beta3":"2016-11-04T15:21:53.565Z","1.0.15-beta4":"2016-11-04T15:27:47.578Z","1.0.15-beta5":"2016-11-04T15:33:22.156Z","1.0.15-beta6":"2016-11-04T15:35:46.475Z","1.0.15-beta7":"2016-11-04T15:42:30.492Z","1.0.16":"2016-11-04T16:03:25.596Z","1.1.0":"2016-11-10T15:02:25.704Z","1.1.1":"2016-11-12T18:48:02.713Z","1.1.2":"2016-11-20T09:08:45.869Z","2.0.0-beta1":"2017-02-12T23:01:24.754Z","2.0.0":"2017-02-14T01:00:37.642Z"}}}