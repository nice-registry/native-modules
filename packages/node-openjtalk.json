{"name":"node-openjtalk","version":"1.1.1","description":"Japanese text-to-speech engine binding for NodeJS","keywords":["OpenJTalk","text-to-speech","Japanese"],"repository":"https://github.com/TanUkkii007/node-openjtalk","main":"index.js","scripts":{"install":"node-pre-gyp install --build-from-source","test":"mocha test"},"license":"MIT","gypfile":true,"dependencies":{"bindings":"^1.2.1","nan":"^1.8.4","node-pre-gyp":"^0.6.7"},"binary":{"module_name":"node_open_jtalk","module_path":"./lib/binding/{node_abi}-{platform}-{arch}","remote_path":"./{module_name}/v{version}","package_name":"{node_abi}-{platform}-{arch}.tar.gz","host":""},"devDependencies":{"aws-sdk":"^2.1.33","mocha":"^2.2.5","speaker":"^0.2.5"},"gitHead":"17e40c2449b95137ff8765e4ac4c8904fbdb29be","homepage":"https://github.com/TanUkkii007/node-openjtalk#readme","bundleDependencies":["node-pre-gyp"],"versions":[{"number":"1.0.0","date":"2015-07-06T00:33:10.399Z"},{"number":"1.1.0","date":"2015-07-06T02:18:07.599Z"},{"number":"1.1.1","date":"2015-07-10T08:53:33.213Z"}],"readme":"# node-openjtalk\n[OpenJTalk](http://open-jtalk.sourceforge.net/), Japanese text-to-speech engine binding for NodeJS.\n\n## Requirements\n\n+ [libiconv](http://www.gnu.org/software/libiconv/)\n\nMacOSX users do not need to install libiconv because OSX already includes it.\n\n## Installation\n\n```sh\n$ npm install node-openjtalk\n```\n\n## Usage\n```js\nvar fs = require('fs');\nvar Speaker = require('speaker');\nvar OpenJTalk = require('node-openjtalk').OpenJTalk;\n\n// pre-included HTS voice file\nvar fn_voice = OpenJTalk.voices.mei_normal;\n// instantiate OpenJTalk with an HTS voice\nvar open_jtalk = new OpenJTalk({voice: fn_voice});\n\n// synthesize a voice buffer from a text\nopen_jtalk.synthesize(\"すもももももももものうち\", function(error, buffer) {\n  if (!error) {\n    // save as audio file\n    var fd = fs.openSync(__dirname + '/test.wav', 'w');\n    fs.write(fd, buffer, 0, buffer.length, null, function(err, written, buffer) {\n      fs.closeSync(fd);\n    });\n  }\n});\n\n// synthesize a voice synchronously\nvar buffer = open_jtalk.synthesizeSync(\"すもももももももものうち\");\n\n// flush to node-speaker\nvar speaker = new Speaker({\n  channels: 1,\n  bitDepth: 16,\n  sampleRate: 48000\n});\nspeaker.end(buffer);\n\n```\n\n## API\n\n### new OpenJTalk(option)\nInstantiates OpenJTalk object.\n\nYou must specify HTS voice file path with an option argument.\n```js\nvar OpenJTalk = require('node-openjtalk').OpenJTalk;\nvar open_jtalk = new OpenJTalk({voice: \"/path/to/HTS voice file\"});\n```\n\nYou can use pre-included voice files.\n\n```js\nvar OpenJTalk = require('node-openjtalk').OpenJTalk;\nvar open_jtalk = new OpenJTalk({voice: OpenJTalk.voices.m001});\n```\n\nThe pre-included voice files are:\n+ m001\n+ mei_angry\n+ mei_bashful\n+ mei_happy\n+ mei_normal\n+ mei_sad\n\n### OpenJTalk#synthesize(text, [optionHook], callback)\nSynthesizes voice audio asynchronously from a text. The callback takes two arguments, error and buffer object.\n\n```js\nopen_jtalk.synthesize(\"音声合成するテキスト\", function(error, buffer) {\n  if (!error) {\n    // do something with buffer\n  }\n});\n```\nThe \"optionHook\" function lets you modify synthesis parameters. For example, following code makes speech speed double.\n\n```js\nopen_jtalk.synthesize(text, function(option) {\n  return {\n    speed: option.speed * 2\n  };\n}, function(error, buffer) {\n\n});\n```\n\nThe available parameters are:\n+ samplingFrequency\n+ fPeriod\n+ alpha\n+ beta\n+ speed\n+ addHalfTone\n+ msdThreshold\n+ gvWeightForSpectrum\n+ gvWeightForLogF0\n+ volume\n+ audioBuffSize\n\n### OpenJTalk#synthesizeSync(text, [optionHook])\n\nSynthesizes voice audio synchronously from a text. This function returns buffer object.\n\n## Supported platforms\nnode-openjtalk currently supports following platforms.\n+ MacOSX/x64\n+ linux/ia32\n+ linux/x64\n\n## License\nnode-openjtalk is licensed under the MIT license. See [LICENSE](https://github.com/TanUkkii007/node-openjtalk/blob/master/LICENSE) for more details.\n\nnode-openjtalk builds on [OpenJTalk](http://open-jtalk.sourceforge.net/) and [hts_engine API](http://hts-engine.sourceforge.net/), and is shiped with HTS Voice [\"NIT ATR503 M001\"](http://open-jtalk.sourceforge.net/) and [\"Mei\"](http://www.mmdagent.jp/). Thanks for their works.\n\nBoth OpenJTalk and hts_engine API are issued under the Modified BSD license.\n\nHTS Voice \"NIT ATR503 M001\" and \"Mei\" are both issued under the Creative Commons Attribution 3.0 license.\n","created":"2015-07-06T00:33:10.399Z","modified":"2015-07-10T08:53:33.213Z","lastPublisher":{"name":"yusuke","email":"yusuke.007.yasud@gmail.com"},"owners":[{"name":"yusuke","email":"yusuke.007.yasud@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"node-openjtalk","_nodeVersion":"0.12.6","_npmUser":{"name":"yusuke","email":"yusuke.007.yasud@gmail.com"},"_npmVersion":"2.11.2","_rev":"1-c5f04197cd6e3639167fb7053c8831e3","_shasum":"15719cdc8290ffa4c2273aeaf50baaa1bd48686b","author":{"name":"Yusuke Yasuda"},"bugs":{"url":"https://github.com/TanUkkii007/node-openjtalk/issues"},"directories":{},"dist-tags":{"latest":"1.1.1"},"dist":{"shasum":"15719cdc8290ffa4c2273aeaf50baaa1bd48686b","tarball":"http://registry.npmjs.org/node-openjtalk/-/node-openjtalk-1.1.1.tgz"},"maintainers":[{"name":"yusuke","email":"yusuke.007.yasud@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-07-10T08:53:33.213Z","created":"2015-07-06T00:33:10.399Z","1.0.0":"2015-07-06T00:33:10.399Z","1.1.0":"2015-07-06T02:18:07.599Z","1.1.1":"2015-07-10T08:53:33.213Z"}}}