{"name":"grpc","version":"1.4.1","description":"gRPC Library for Node","homepage":"https://grpc.io/","repository":"https://github.com/grpc/grpc","scripts":{"lint":"node ./node_modules/jshint/bin/jshint src/node/src src/node/test src/node/interop src/node/index.js --exclude-path=src/node/.jshintignore","test":"mocha src/node/test && npm run-script lint","electron-build":"node-pre-gyp configure build --runtime=electron --disturl=https://atom.io/download/atom-shell","gen_docs":"jsdoc -c src/node/jsdoc_conf.json","coverage":"istanbul cover ./node_modules/.bin/_mocha src/node/test","install":"node-pre-gyp install --fallback-to-build --library=static_library"},"dependencies":{"arguejs":"^0.2.3","lodash":"^4.15.0","nan":"^2.0.0","node-pre-gyp":"^0.6.35","protobufjs":"^5.0.0"},"devDependencies":{"async":"^2.0.1","body-parser":"^1.15.2","electron-mocha":"^3.1.1","express":"^4.14.0","google-auth-library":"^0.9.2","google-protobuf":"^3.0.0","istanbul":"^0.4.4","jsdoc":"^3.3.2","jshint":"^2.5.0","minimist":"^1.1.0","mocha":"^3.0.2","mocha-jenkins-reporter":"^0.2.3","poisson-process":"^0.2.1"},"engines":{"node":">=4"},"binary":{"module_name":"grpc_node","module_path":"src/node/extension_binary","host":"https://storage.googleapis.com/","remote_path":"grpc-precompiled-binaries/node/{name}/v{version}","package_name":"{node_abi}-{platform}-{arch}.tar.gz"},"files":["LICENSE","src/node/README.md","src/proto","etc","src/node/index.js","src/node/src","src/node/ext","include/grpc","src/core","src/boringssl","src/zlib","third_party/nanopb","third_party/zlib","third_party/boringssl","binding.gyp"],"main":"src/node/index.js","license":"Apache-2.0","jshintConfig":{"bitwise":true,"curly":true,"eqeqeq":true,"esnext":true,"freeze":true,"immed":true,"indent":2,"latedef":"nofunc","maxlen":80,"mocha":true,"newcap":true,"node":true,"noarg":true,"quotmark":"single","strict":true,"trailing":true,"undef":true,"unused":"vars"},"bundleDependencies":["node-pre-gyp"],"_resolved":"file:337/archive/artifacts/grpc.tgz","versions":[{"number":"0.5.0","date":"2015-02-26T17:28:35.569Z"},{"number":"0.5.1","date":"2015-02-27T17:46:29.838Z"},{"number":"0.5.2","date":"2015-03-05T19:33:46.994Z"},{"number":"0.5.3","date":"2015-03-10T17:00:41.563Z"},{"number":"0.5.4","date":"2015-03-12T21:36:12.991Z"},{"number":"0.5.5","date":"2015-03-13T22:51:39.736Z"},{"number":"0.6.0","date":"2015-04-07T18:41:18.012Z"},{"number":"0.6.1","date":"2015-04-13T21:59:56.044Z"},{"number":"0.6.2","date":"2015-04-23T20:56:40.961Z"},{"number":"0.7.0","date":"2015-05-08T17:56:13.365Z"},{"number":"0.8.0","date":"2015-05-18T16:12:03.954Z"},{"number":"0.9.0","date":"2015-05-27T21:02:43.062Z"},{"number":"0.9.1","date":"2015-06-09T22:33:31.666Z"},{"number":"0.9.2","date":"2015-06-12T19:57:19.720Z"},{"number":"0.10.0","date":"2015-07-11T00:57:53.140Z"},{"number":"0.10.1","date":"2015-08-12T19:28:56.175Z"},{"number":"0.11.0","date":"2015-09-24T18:09:42.377Z"},{"number":"0.11.1","date":"2015-10-12T23:16:27.045Z"},{"number":"0.12.0","date":"2016-01-14T23:16:46.662Z"},{"number":"0.13.0-pre1","date":"2016-02-09T23:55:36.790Z"},{"number":"0.13.0","date":"2016-02-13T03:37:21.746Z"},{"number":"0.13.1-pre1","date":"2016-03-26T00:17:23.992Z"},{"number":"0.13.1","date":"2016-03-31T20:05:37.460Z"},{"number":"0.13.2-pre1","date":"2016-04-06T22:21:17.953Z"},{"number":"0.14.1-pre1","date":"2016-05-10T18:34:47.676Z"},{"number":"0.14.1","date":"2016-05-11T22:53:02.372Z"},{"number":"0.15.0","date":"2016-06-27T17:24:44.820Z"},{"number":"1.0.0-pre1","date":"2016-07-21T18:11:35.885Z"},{"number":"1.0.0-pre2","date":"2016-08-11T23:06:07.048Z"},{"number":"1.0.0","date":"2016-08-18T23:13:29.235Z"},{"number":"1.0.1-pre1","date":"2016-10-06T21:39:14.096Z"},{"number":"1.0.1","date":"2016-10-27T23:13:46.091Z"},{"number":"1.1.0-pre1","date":"2017-01-25T19:29:15.346Z"},{"number":"1.1.0","date":"2017-01-31T01:31:28.968Z"},{"number":"1.1.1","date":"2017-02-01T20:53:47.197Z"},{"number":"1.1.2","date":"2017-02-08T17:31:06.822Z"},{"number":"1.2.0-pre1","date":"2017-03-16T22:10:32.115Z"},{"number":"1.2.0","date":"2017-03-20T23:27:35.786Z"},{"number":"1.2.3","date":"2017-04-07T22:14:27.151Z"},{"number":"1.2.4","date":"2017-04-13T00:10:17.425Z"},{"number":"1.3.0","date":"2017-04-28T00:30:04.541Z"},{"number":"1.3.1-pre1","date":"2017-05-04T20:08:15.101Z"},{"number":"1.3.1","date":"2017-05-05T20:53:56.339Z"},{"number":"1.3.2","date":"2017-05-11T19:41:24.792Z"},{"number":"1.3.7","date":"2017-05-30T21:20:31.536Z"},{"number":"1.4.0-pre1","date":"2017-06-07T16:41:01.473Z"},{"number":"1.3.8","date":"2017-06-07T16:44:15.906Z"},{"number":"1.3.9","date":"2017-06-21T17:42:15.743Z"},{"number":"1.4.1","date":"2017-06-28T00:53:24.197Z"},{"number":"1.6.0-pre1","date":"2017-08-23T16:54:59.224Z"}],"readme":"[![Build Status](https://grpc-testing.appspot.com/job/gRPC_master/badge/icon)](https://grpc-testing.appspot.com/job/gRPC_master)\n\n[gRPC - An RPC library and framework](http://github.com/grpc/grpc)\n===================================\n\n[![Join the chat at https://gitter.im/grpc/grpc](https://badges.gitter.im/grpc/grpc.svg)](https://gitter.im/grpc/grpc?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nCopyright 2015 Google Inc.\n\n# Documentation\n\nYou can find more detailed documentation and examples in the [doc](doc) and [examples](examples) directories respectively.\n\n# Installation & Testing\n\nSee [INSTALL](INSTALL.md) for installation instructions for various platforms.\n\nSee [tools/run_tests](tools/run_tests) for more guidance on how to run various test suites (e.g. unit tests, interop tests, benchmarks)\n\nSee [Performance dashboard](http://performance-dot-grpc-testing.appspot.com/explore?dashboard=5636470266134528) for the performance numbers for the latest released version.\n\n# Repository Structure & Status\n\nThis repository contains source code for gRPC libraries for multiple languages written on top of shared C core library [src/core](src/core).\n\nLibraries in different languages may be in different states of development. We are seeking contributions for all of these libraries.\n\n| Language                | Source                              | Status  |\n|-------------------------|-------------------------------------|---------|\n| Shared C [core library] | [src/core](src/core)                | 1.0     |\n| C++                     | [src/cpp](src/cpp)                  | 1.0     |\n| Ruby                    | [src/ruby](src/ruby)                | 1.0     |\n| NodeJS                  | [src/node](src/node)                | 1.0     |\n| Python                  | [src/python](src/python)            | 1.0     |\n| PHP                     | [src/php](src/php)                  | 1.0     |\n| C#                      | [src/csharp](src/csharp)            | 1.0     |\n| Objective-C             | [src/objective-c](src/objective-c)  | 1.0     |\n\nJava source code is in the [grpc-java](http://github.com/grpc/grpc-java)\nrepository. Go source code is in the\n[grpc-go](http://github.com/grpc/grpc-go) repository.\n\nSee [MANIFEST.md](MANIFEST.md) for a listing of top-level items in the\nrepository.\n\n# Overview\n\n\nRemote Procedure Calls (RPCs) provide a useful abstraction for building\ndistributed applications and services. The libraries in this repository\nprovide a concrete implementation of the gRPC protocol, layered over HTTP/2.\nThese libraries enable communication between clients and servers using any\ncombination of the supported languages.\n\n\n## Interface\n\n\nDevelopers using gRPC typically start with the description of an RPC service\n(a collection of methods), and generate client and server side interfaces\nwhich they use on the client-side and implement on the server side.\n\nBy default, gRPC uses [Protocol Buffers](https://github.com/google/protobuf) as the\nInterface Definition Language (IDL) for describing both the service interface\nand the structure of the payload messages. It is possible to use other\nalternatives if desired.\n\n### Surface API\nStarting from an interface definition in a .proto file, gRPC provides\nProtocol Compiler plugins that generate Client- and Server-side APIs.\ngRPC users typically call into these APIs on the Client side and implement\nthe corresponding API on the server side.\n\n#### Synchronous vs. asynchronous\nSynchronous RPC calls, that block until a response arrives from the server, are\nthe closest approximation to the abstraction of a procedure call that RPC\naspires to.\n\nOn the other hand, networks are inherently asynchronous and in many scenarios,\nit is desirable to have the ability to start RPCs without blocking the current\nthread.\n\nThe gRPC programming surface in most languages comes in both synchronous and\nasynchronous flavors.\n\n\n## Streaming\n\ngRPC supports streaming semantics, where either the client or the server (or both)\nsend a stream of messages on a single RPC call. The most general case is\nBidirectional Streaming where a single gRPC call establishes a stream where both\nthe client and the server can send a stream of messages to each other. The streamed\nmessages are delivered in the order they were sent.\n\n\n# Protocol\n\nThe [gRPC protocol](doc/PROTOCOL-HTTP2.md) specifies the abstract requirements for communication between\nclients and servers. A concrete embedding over HTTP/2 completes the picture by\nfleshing out the details of each of the required operations.\n\n## Abstract gRPC protocol\nA gRPC RPC comprises of a bidirectional stream of messages, initiated by the client. In the client-to-server direction, this stream begins with a mandatory `Call Header`, followed by optional `Initial-Metadata`, followed by zero or more `Payload Messages`. The server-to-client direction contains an optional `Initial-Metadata`, followed by zero or more `Payload Messages` terminated with a mandatory `Status` and optional `Status-Metadata` (a.k.a.,`Trailing-Metadata`).\n\n## Implementation over HTTP/2\nThe abstract protocol defined above is implemented over [HTTP/2](https://http2.github.io/). gRPC bidirectional streams are mapped to HTTP/2 streams. The contents of `Call Header` and `Initial Metadata` are sent as HTTP/2 headers and subject to HPACK compression. `Payload Messages` are serialized into a byte stream of length prefixed gRPC frames which are then fragmented into HTTP/2 frames at the sender and reassembled at the receiver. `Status` and `Trailing-Metadata` are sent as HTTP/2 trailing headers (a.k.a., trailers).\n\n## Flow Control\ngRPC inherits the flow control mechanisms in HTTP/2 and uses them to enable fine-grained control of the amount of memory used for buffering in-flight messages.\n","starsCount":18,"created":"2015-02-26T17:28:35.569Z","modified":"2017-08-23T17:03:34.994Z","lastPublisher":{"name":"murgatroid99","email":"mlumish@google.com"},"owners":[{"name":"grpc-packages","email":"grpc-packages@google.com"},{"name":"murgatroid99","email":"mlumish@google.com"}],"other":{"_attachments":{},"_from":"337/archive/artifacts/grpc.tgz","_id":"grpc","_nodeVersion":"7.8.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/grpc-1.4.1.tgz_1498611203649_0.2802001314703375"},"_npmUser":{"name":"murgatroid99","email":"mlumish@google.com"},"_npmVersion":"4.2.0","_rev":"42-e5c140bb597f053e61f39902c9b0b3fd","_shasum":"3ee4a8346a613f2823928c9f8f99081b6368ec7c","author":{"name":"Google Inc."},"bugs":{"url":"https://github.com/grpc/grpc/issues"},"contributors":[{"name":"Michael Lumish","email":"mlumish@google.com"}],"directories":{"lib":"src/node/src"},"dist-tags":{"latest":"1.4.1","next":"1.6.0-pre1"},"dist":{"shasum":"3ee4a8346a613f2823928c9f8f99081b6368ec7c","tarball":"https://registry.npmjs.org/grpc/-/grpc-1.4.1.tgz"},"maintainers":[{"name":"grpc-packages","email":"grpc-packages@google.com"},{"name":"murgatroid99","email":"mlumish@google.com"}],"readmeFilename":"README.md","time":{"modified":"2017-08-23T17:03:34.994Z","created":"2015-02-26T17:28:35.569Z","0.5.0":"2015-02-26T17:28:35.569Z","0.5.1":"2015-02-27T17:46:29.838Z","0.5.2":"2015-03-05T19:33:46.994Z","0.5.3":"2015-03-10T17:00:41.563Z","0.5.4":"2015-03-12T21:36:12.991Z","0.5.5":"2015-03-13T22:51:39.736Z","0.6.0":"2015-04-07T18:41:18.012Z","0.6.1":"2015-04-13T21:59:56.044Z","0.6.2":"2015-04-23T20:56:40.961Z","0.7.0":"2015-05-08T17:56:13.365Z","0.8.0":"2015-05-18T16:12:03.954Z","0.9.0":"2015-05-27T21:02:43.062Z","0.9.1":"2015-06-09T22:33:31.666Z","0.9.2":"2015-06-12T19:57:19.720Z","0.10.0":"2015-07-11T00:57:53.140Z","0.10.1":"2015-08-12T19:28:56.175Z","0.11.0":"2015-09-24T18:09:42.377Z","0.11.1":"2015-10-12T23:16:27.045Z","0.12.0":"2016-01-14T23:16:46.662Z","0.13.0-pre1":"2016-02-09T23:55:36.790Z","0.13.0":"2016-02-13T03:37:21.746Z","0.13.1-pre1":"2016-03-26T00:17:23.992Z","0.13.1":"2016-03-31T20:05:37.460Z","0.13.2-pre1":"2016-04-06T22:21:17.953Z","0.14.1-pre1":"2016-05-10T18:34:47.676Z","0.14.1":"2016-05-11T22:53:02.372Z","0.15.0":"2016-06-27T17:24:44.820Z","1.0.0-pre1":"2016-07-21T18:11:35.885Z","1.0.0-pre2":"2016-08-11T23:06:07.048Z","1.0.0":"2016-08-18T23:13:29.235Z","1.0.1-pre1":"2016-10-06T21:39:14.096Z","1.0.1":"2016-10-27T23:13:46.091Z","1.1.0-pre1":"2017-01-25T19:29:15.346Z","1.1.0":"2017-01-31T01:31:28.968Z","1.1.1":"2017-02-01T20:53:47.197Z","1.1.2":"2017-02-08T17:31:06.822Z","1.2.0-pre1":"2017-03-16T22:10:32.115Z","1.2.0":"2017-03-20T23:27:35.786Z","1.2.3":"2017-04-07T22:14:27.151Z","1.2.4":"2017-04-13T00:10:17.425Z","1.3.0":"2017-04-28T00:30:04.541Z","1.3.1-pre1":"2017-05-04T20:08:15.101Z","1.3.1":"2017-05-05T20:53:56.339Z","1.3.2":"2017-05-11T19:41:24.792Z","1.3.7":"2017-05-30T21:20:31.536Z","1.4.0-pre1":"2017-06-07T16:41:01.473Z","1.3.8":"2017-06-07T16:44:15.906Z","1.3.9":"2017-06-21T17:42:15.743Z","1.4.1":"2017-06-28T00:53:24.197Z","1.6.0-pre1":"2017-08-23T16:54:59.224Z"},"users":{"kenticny":true,"21xhipster":true,"miskiw":true,"bsnote":true,"softwind":true,"phgyorgygulyas":true,"skymap":true,"knksmith57":true,"knoja4":true,"sharper":true,"icerainnuaa":true,"thomas.miele":true,"modood":true,"heartnett":true,"nisimjoseph":true,"hehaiyang":true,"leelee.echo":true,"heineiuo":true}}}