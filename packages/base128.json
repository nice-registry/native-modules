{"name":"base128","version":"0.2.1","description":"Encode, decode binary to/from UTF-8 string using Base128.","repository":"https://github.com/niw/node-base128","main":"./lib/base128","scripts":{"configure":"node-gyp configure","build":"node-gyp build","clean":"node-gyp clean","distclean":"rm -rf build node_modules","test":"mocha","install":"node-gyp rebuild"},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{"nan":"^2.1.0"},"gypfile":true,"gitHead":"791f61ab1926a1dd5bbbf07aab54c638d5fb15f5","homepage":"https://github.com/niw/node-base128#readme","versions":[{"number":"0.1.0","date":"2012-09-14T02:11:53.089Z"},{"number":"0.2.0","date":"2015-12-22T18:05:49.761Z"},{"number":"0.2.1","date":"2015-12-23T04:12:28.942Z"}],"readme":"base128\n=======\n\nIn many protocols or formats like JSON or early WebSocket, it requires String in UTF-8 representation, so we can not store raw binary data into String without encoding like Base64.\n\nHowever, Base64 encodes binary into only 6 bits space but we can actually use one more bit in valid UTF-8 string from `U+0000` to `U+007F`, so using Base128 is better than Base64 (~ 16% more information we can store in the same space.)\n\nThis Base128 module provides simple encode, decode interfaces between `Buffer` and `String` on Node.js which are implemented in C++.\n\nUsage\n-----\n\nUse `npm` to grab a package then load by `require()`.\n\n    $ npm install base128\n    $ node\n    > var base128 = require('base128')\n\nExamples\n--------\n\nTo Encode,\n\n     var base128 = require('base128')\n     var binary = new Buffer([0xFF, 0x01])\n     var string = base128.encode(binary)\n     console.log(string) #=> '\\u007F\\u0003\\u0000' (These cahracters are invisible, though.)\n\nTo Decode,\n\n     var base128 = require('base128')\n     var string = '\\u007F\\u0003\\u0000'\n     var binary = base128.decode(string)\n     console.log(binary) #=> '<Buffer ff 01>'\n\nDevelopment\n-----------\n\nBase128 is using [NAN](https://github.com/nodejs/nan) to build native add-on binary for Node.js.\n`npm install` does everything for you, but there are extra scripts defined in `package.json`.\n\n    $ npm run clean # Cleanup build files\n    $ npm run distclean # Cleanup all generated files\n    $ npm run build # Build native add-on binary\n\nTo test Base128,\n\n    $ npm test\n\n","created":"2012-09-14T02:11:51.960Z","modified":"2015-12-23T04:12:28.942Z","lastPublisher":{"name":"niw","email":"niw@niw.at"},"owners":[{"name":"niw","email":"niw@niw.at"}],"other":{"_attachments":{},"_from":".","_id":"base128","_nodeVersion":"5.3.0","_npmUser":{"name":"niw","email":"niw@niw.at"},"_npmVersion":"3.3.12","_rev":"1-5fefadb85044b1b944fe0556a1516eaf","_shasum":"5a7fa88e477f30cbab0d12c640c8789139cd11a9","author":{"name":"Yoshimasa Niwa","email":"niw@niw.at","url":"http://niw.at/"},"bugs":{"url":"https://github.com/niw/node-base128/issues"},"directories":{},"dist-tags":{"latest":"0.2.1"},"dist":{"shasum":"5a7fa88e477f30cbab0d12c640c8789139cd11a9","tarball":"http://registry.npmjs.org/base128/-/base128-0.2.1.tgz"},"maintainers":[{"name":"niw","email":"niw@niw.at"}],"readmeFilename":"README.md","time":{"modified":"2015-12-23T04:12:28.942Z","created":"2012-09-14T02:11:51.960Z","0.1.0":"2012-09-14T02:11:53.089Z","0.2.0":"2015-12-22T18:05:49.761Z","0.2.1":"2015-12-23T04:12:28.942Z"}}}