{"name":"systemd-journald","version":"1.3.0","description":"Native bindings to journald","keywords":["logging","systemd","journald"],"license":"MIT","main":"index.js","repository":"https://github.com/jue89/node-systemd-journald","scripts":{"test":"mocha","pretest":"jshint *.js","install":"node-gyp rebuild"},"dependencies":{"nan":"^2.5.1"},"devDependencies":{"jshint":"^2.9.3","mocha":"^2.5.3","mockery":"^1.7.0"},"os":["linux"],"jshintConfig":{"esversion":5,"node":true,"strict":true,"loopfunc":true},"gypfile":true,"gitHead":"12b17eed79bb9d385a75abb1128ced7d0e631d29","homepage":"https://github.com/jue89/node-systemd-journald#readme","versions":[{"number":"1.0.0","date":"2016-04-02T11:37:50.175Z"},{"number":"1.0.1","date":"2016-04-04T08:32:38.526Z"},{"number":"1.1.0","date":"2016-04-11T01:18:25.829Z"},{"number":"1.1.1","date":"2016-04-15T17:14:51.893Z"},{"number":"1.1.2","date":"2016-09-26T21:44:43.402Z"},{"number":"1.1.3","date":"2016-09-30T16:33:26.639Z"},{"number":"1.2.0","date":"2016-11-08T09:10:49.421Z"},{"number":"1.3.0","date":"2017-02-15T22:13:47.062Z"}],"readme":"# node-systemd-journald\n\nNode.js module for native bindings to the ~~dearly beloved~~ systemd-journald.\n\nSuccessfully tested under NodeJS v0.10.48, v0.12.18, v4.7.3, v6.9.5, v7.5.0\n\n\n## Example\n\nThis example will start an ExpressJS server. Open your browser and visit: ```http://localhost:3000/{a}/{b}```\n\nThe server will return the result of ```a``` divided by ```b```. You feel subversive and may want to try ```b``` equals zero?! ;)\n\n```javascript\n// npm install express systemd-journald\n\"use strict\";\n\nconst Journald = require( 'systemd-journald' );\nconst app = require( 'express' )();\n\n// This creates a new logging instance. The stated object defines default\n// journal fields attached to every logging entry. syslog_identifier is the\n// name displayed along with the log lines.\nconst log = new Journald( { syslog_identifier: \"awesome-divide\" } );\n\napp.get( '/:a/:b', ( req, res ) => {\n  try {\n\n    // Convert numbers\n    let a = parseInt( req.params.a );\n    let b = parseInt( req.params.b );\n\n    // Divide a by b\n    let q = a / b;\n\n    // Throw an error if the result is not a number\n    // Funny side fact: In the first place I checked:\n    // if( typeof q != 'number' ) ...\n    // Well, this was not working. Infinity is recognised as 'number' and, you\n    // might already guessed it, NaN as well! Javascript as we know and love it.\n    if( isNaN( q ) || q === Infinity ) throw new Error( \"No number!\" );\n\n    // Send the result to the client\n    res.end( q.toString() );\n\n    // Log this request with priority 7\n    log.debug( \"Just answered a request\", {\n      'dividend'   : a,\n      'divisor'    : b,\n      'quotient'   : q,\n      'remote_addr': req.connection.remoteAddress\n    } );\n\n    // Are you interested in the requests of a specific IP? Try:\n    // $ journalctl -t awesome-divide REMOTE_ADDR={IP}\n    // As you can see, you have to enter the field names in capital letters.\n\n  } catch( e ) {\n\n    // The user screwed up! This will write the error message and stack trace to\n    // the journal with priority 3. Checkout your journal:\n    // $ journalctl -t awesome-divide -p 3 -o json-pretty\n    log.err( e );\n\n    res.status( 400 ).end( e.message );\n\n  }\n} );\n\napp.listen( 3000 );\n```\n\n\n## Installation\n\n### Install build dependencies\nDebian-flavoured Linux distributions:\n\n```bash\nsudo apt-get install build-essential \\\n                     pkg-config \\\n                     libsystemd-dev\n```\n\nIf the above doesn't work, it is likely that you are using an older version of systemd as it is shipped with Ubuntu <= 14.04 or Mint <= 17. No problem just try this instead:\n\n```bash\nsudo apt-get install build-essential \\\n                     pkg-config \\\n                     libsystemd-journal-dev\n```\n\nRHEL 7 flavoured Linux distributions:\n\n```bash\nsudo yum install gcc gcc-c++ make git \\\n                 systemd-devel\n```\n\n### NPM Install\nIn all cases, once the build dependencies are installed:\n\n```bash\nnpm install systemd-journald --save\n```\n\n\n## API\n\n```javascript\nconst Journald = require( 'systemd-journald' );\nconst log = new Journald( defaultFields );\n\n                                // Corresponding syslog level:\nlog.emerg( message, fields );   // - LOG_EMERG\nlog.alert( message, fields );   // - LOG_ALERT\nlog.crit( message, fields );    // - LOG_CRIT\nlog.err( message, fields );     // - LOG_ERR\nlog.warning( message, fields ); // - LOG_WARNING\nlog.notice( message, fields );  // - LOG_NOTICE\nlog.info( message, fields );    // - LOG_INFO\nlog.debug( message, fields );   // - LOG_DEBUG\n```\n\n * ```message```: String or instance of Error.\n * ```fields```: Further key-value data attached to the journal. Nested objects will be also included in the journal. ```{ \"OBJ\": { \"NESTED\": \"Chuck Norris\" } }``` will become ```OBJ_NESTED=Chuck Norris```. Quite handy for filtering the journal.\n * ```defaultFields```: Fields attached to every entry. They may be overridden by ```fields```.\n\n\n## Acknowledgement\n\nSepcial thanks to:\n * [ianare](https://github.com/ianare) for improving compatibility with older systemd versions.\n * [jez9999](https://github.com/jez9999) for making this module immune to future changes of syslog levels.\n * [Z3TA](https://github.com/Z3TA) is responsible for ```CODE_FILE```, ```CODE_FUNC``` and ```CODE_LINE``` being settable by the ```fields``` parameter.\n * [bryanburgers](https://github.com/bryanburgers) introduced the idea of default fields.\n\nI owe you a drink!\n\n\n## Why?\n\nThis module has been written after some unsuccessful attempts to get the module [journald](https://www.npmjs.com/package/journald) version 0.0.5 working under NodeJS 4.x / 5.x. Due to massive API changes of the v8 engine this module is fully broken from the point of view of recent NodeJS releases. So I rewrote it - this time with a little help of *Native Abstractions for Node.js* (nan). The nice guys from nan promised to ensure compatibility even on future API changes of v8. We will see ;)\n","starsCount":1,"created":"2016-04-02T11:37:50.175Z","modified":"2017-02-15T22:13:47.062Z","lastPublisher":{"name":"jue89","email":"me@jue.yt"},"owners":[{"name":"jue89","email":"me@jue.yt"}],"other":{"_attachments":{},"_from":".","_id":"systemd-journald","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/systemd-journald-1.3.0.tgz_1487196826367_0.23820343823172152"},"_npmUser":{"name":"jue89","email":"me@jue.yt"},"_npmVersion":"3.10.3","_rev":"3-c8e1ce85f3ad0647969ec5e1697454dc","_shasum":"89ed617893f565872eb1da09a906954b2a26d811","author":{"name":"Jue","email":"me@jue.yt"},"bugs":{"url":"https://github.com/jue89/node-systemd-journald/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"1.3.0"},"dist":{"shasum":"89ed617893f565872eb1da09a906954b2a26d811","tarball":"https://registry.npmjs.org/systemd-journald/-/systemd-journald-1.3.0.tgz"},"maintainers":[{"name":"jue89","email":"me@jue.yt"}],"readmeFilename":"README.md","time":{"modified":"2017-02-15T22:13:47.062Z","created":"2016-04-02T11:37:50.175Z","1.0.0":"2016-04-02T11:37:50.175Z","1.0.1":"2016-04-04T08:32:38.526Z","1.1.0":"2016-04-11T01:18:25.829Z","1.1.1":"2016-04-15T17:14:51.893Z","1.1.2":"2016-09-26T21:44:43.402Z","1.1.3":"2016-09-30T16:33:26.639Z","1.2.0":"2016-11-08T09:10:49.421Z","1.3.0":"2017-02-15T22:13:47.062Z"},"users":{"jez9999":true}}}