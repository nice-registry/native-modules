{"name":"freerdp","version":"0.2.9","description":"Node.js bindings for libfreerdp / freerdp. Connect to RDP servers with Node.js","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild"},"license":"BSD","gypfile":true,"repository":"https://github.com/bloomapi/node-freerdp","devDependencies":{"canvas":"^1.4.0"},"dependencies":{"nan":"^2.4.0","node-gyp":"^3.4.0","bindings":"^1.2.1"},"gitHead":"7125b6c647554f8e4d7fa8e5d80ce484f14dd150","homepage":"https://github.com/bloomapi/node-freerdp#readme","versions":[{"number":"0.2.0","date":"2016-09-03T20:35:31.126Z"},{"number":"0.2.1","date":"2016-09-03T20:45:28.463Z"},{"number":"0.2.2","date":"2016-09-03T20:58:46.766Z"},{"number":"0.2.3","date":"2016-09-04T02:07:07.420Z"},{"number":"0.2.4","date":"2016-09-04T03:28:04.397Z"},{"number":"0.2.5","date":"2016-09-04T03:32:42.311Z"},{"number":"0.2.6","date":"2016-09-17T01:20:10.954Z"},{"number":"0.2.7","date":"2016-09-17T01:23:21.776Z"},{"number":"0.2.8","date":"2016-09-17T22:45:19.711Z"},{"number":"0.2.9","date":"2016-09-17T23:50:21.332Z"}],"readme":"Node-FreeRDP\n============\n\nNode.JS addon for libfreerdp.\n\n### Dependencies\n\nThis requires the installation of libfreerdp 1.1.x.\n\nOn Mac:\n\n    brew tap untoldone/homebrew-x11\n    brew install untoldone/homebrew-x11/freerdp --devel\n\nOn Ubuntu (from 15.04 forward -- earlier Ubuntus used freerdp 1.0.x which wont work):\n\n    sudo apt install freerdp libfreerdp-dev\n\n### Installation\n\n    npm install freerdp\n\n### Features\n\nThis is based on FreeRDP. Any standard features of FreeRDP are supported as a result. Many\nflags you see on the command line version of xfreerdp are easily added to the current codebase\nif a desired functionality is missing from this Node.js wrapper library. This includes things\nsuch as Network Level Authentication (NLA) and clipboard redirection.\n\n### Example Usage\n\nFor the time being, this is the only API documentation available.\n\n    var freerdp = require('freerdp');\n\n    var session = new freerdp.Session({\n      host: 'my.host',\n      username: 'myuser',\n      password: 'mypass',\n      domain: 'mydomain', // optional\n      port: 3389, // optional\n      width: 1366, // optional\n      height: 768, // optional\n      certIgnore: true // optional\n    });\n\n    session.on('connect', function () {\n      console.log('connected');\n\n      var x = 10, y = 20; // if x / y are null, will not move mouse\n      session.sendPointerEvent(x, y, {\n        pressLeft: true // Other options are pressMiddle, pressRight, releaseLeft|Middle|Right\n      });\n\n      var code = 0x23; // letter 'H'\n      var isPressed = true;\n      session.sendKeyEventScancode(code, isPressed);\n\n      setTimeout(function () {\n        session.close(); // end session\n      }, 50000);\n    });\n\n    session.on('bitmap', function (bitmap) {\n      console.log(`bitmap at ${bitmap.x}, ${bitmap.y}, of dimensions ${bitmap.w}, ${bitmap.h}`);\n      // bitmap.data contains RGBA buffer where each pixel is of bitmap.bytesPerPixel size\n    });\n\n    session.on('error', function (err) {\n      \n    });\n\n    session.on('close', function () {\n      console.log('connection closed');\n    });\n\n    session.connect();\n\nExample of writing a current session screenshot to a png and pasting text\n\nInstall extra dependency for example with `npm install canvas`\n\n    var freerdp = require('freerdp');\n    var Canvas = require('canvas');\n    var fs = require('fs');\n\n    var canvas = new Canvas(1366, 768),\n        ctx = canvas.getContext('2d');\n\n    var session = new freerdp.Session({\n      host: 'my.host',\n      username: 'myuser',\n      password: 'mypass',\n      domain: 'mydomain', // optional\n      port: 3389, // optional\n      width: 1366, // optional\n      height: 768, // optional\n      certIgnore: true // optional\n    });\n\n    session.on('connect', function () {\n      setInterval(function () {\n        var b = canvas.toBuffer();\n        fs.writeFileSync('screenshot.png', b, 'binary');\n      }, 1000);\n\n      setTimeout(function () {\n        // Set contents of local clipboard\n        session.setClipboard(\"Hello World\\n\");\n      }, 2500);\n\n      setTimeout(function () {\n        // Press paste hotkey sequence to initialize paste, pulling\n        // the contents of local clipboard and pasting on the remote system.\n        // Note this only works if the current focus supports this hotkey sequence\n        // (focused on notepad, for example)\n        session.sendKeyEventScancode(0x001d, true); // ctrl\n        session.sendKeyEventScancode(0x002F, true); // v\n        session.sendKeyEventScancode(0x002F, false);\n        session.sendKeyEventScancode(0x001d, false);\n      }, 3000);\n    })\n\n    session.on('bitmap', function (bitmap) {\n      var imageData = ctx.createImageData(bitmap.w, bitmap.h);\n      var dest = new Uint8ClampedArray(bitmap.w * bitmap.h * bitmap.bpp);\n      var size = bitmap.w * bitmap.h * bitmap.bpp;\n      // ARGB to RGBA\n      for (var i = 0; i < bitmap.h; i++)\n      {\n        for (var j = 0; j < bitmap.w * 4; j += 4)\n        {\n          // ARGB <-> ABGR\n          dest[(i * bitmap.bpp * bitmap.w) + j + 0] = bitmap.buffer[(i * bitmap.bpp * bitmap.w) + j + 2];\n          dest[(i * bitmap.bpp * bitmap.w) + j + 1] = bitmap.buffer[(i * bitmap.bpp * bitmap.w) + j + 1];\n          dest[(i * bitmap.bpp * bitmap.w) + j + 2] = bitmap.buffer[(i * bitmap.bpp * bitmap.w) + j + 0];\n          dest[(i * bitmap.bpp * bitmap.w) + j + 3] = bitmap.buffer[(i * bitmap.bpp * bitmap.w) + j + 3];\n        }\n      }\n\n      imageData.data.set(dest);\n\n      ctx.putImageData(imageData, bitmap.x, bitmap.y);\n    });\n\n    setTimeout(function () { }, 10000); // prevent process from exiting\n\n### Roadmap\n\n* Add better error handling\n* There's almost certainly memory issues with the current implementation... investigate and fix if needed\n* Find ways to funnel messages printed by libfreerdp to stdout to events\n","created":"2016-09-03T20:35:31.126Z","modified":"2016-09-17T23:50:21.332Z","lastPublisher":{"name":"untoldone","email":"support@bloomapi.com"},"owners":[{"name":"untoldone","email":"support@bloomapi.com"}],"other":{"_attachments":{},"_from":".","_id":"freerdp","_nodeVersion":"6.3.1","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/freerdp-0.2.9.tgz_1474156218221_0.03506966703571379"},"_npmUser":{"name":"untoldone","email":"support@bloomapi.com"},"_npmVersion":"3.10.3","_rev":"1-9dda72c1ab9de9ac58412f2ab83fab39","_shasum":"bf46e65302ce04c1f6fb7093cfb68f5e2934f47c","author":{"name":"Michael Wasser"},"bugs":{"url":"https://github.com/bloomapi/node-freerdp/issues"},"directories":{},"dist-tags":{"latest":"0.2.9"},"dist":{"shasum":"bf46e65302ce04c1f6fb7093cfb68f5e2934f47c","tarball":"http://registry.npmjs.org/freerdp/-/freerdp-0.2.9.tgz"},"maintainers":[{"name":"untoldone","email":"support@bloomapi.com"}],"readmeFilename":"README.md","time":{"modified":"2016-09-17T23:50:21.332Z","created":"2016-09-03T20:35:31.126Z","0.2.0":"2016-09-03T20:35:31.126Z","0.2.1":"2016-09-03T20:45:28.463Z","0.2.2":"2016-09-03T20:58:46.766Z","0.2.3":"2016-09-04T02:07:07.420Z","0.2.4":"2016-09-04T03:28:04.397Z","0.2.5":"2016-09-04T03:32:42.311Z","0.2.6":"2016-09-17T01:20:10.954Z","0.2.7":"2016-09-17T01:23:21.776Z","0.2.8":"2016-09-17T22:45:19.711Z","0.2.9":"2016-09-17T23:50:21.332Z"}}}