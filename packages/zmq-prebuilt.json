{"name":"zmq-prebuilt","version":"2.1.0","description":"Prebuilt bindings for node.js to ZeroMQ","main":"index","gypfile":true,"repository":"https://github.com/nteract/zmq-prebuilt","dependencies":{"bindings":"~1.2.1","nan":"^2.4.0","prebuild":"^4.2.2"},"devDependencies":{"electron-mocha":"^3.1.1","mocha":"^3.1.0","semver":"^5.3.0","should":"^11.1.0"},"engines":{"node":">=0.8"},"scripts":{"install":"prebuild --install","test":"mocha --expose-gc --slow 300 --timeout 4000","test:electron":"electron-mocha --slow 300 --timeout 4000"},"keywords":["zeromq","zmq","0mq","ømq","libzmq","native","binding","addon"],"license":"MIT","gitHead":"52f7673829c46bb220e4f5ce91fe29577e057f77","homepage":"https://github.com/nteract/zmq-prebuilt#readme","deprecated":"zmq-prebuilt has been renamed to zeromq. For more information visit https://github.com/zeromq/zeromq.js","versions":[{"number":"0.0.0","date":"2015-12-27T17:53:43.954Z"},{"number":"0.0.2","date":"2016-02-04T06:11:35.927Z"},{"number":"0.0.3","date":"2016-02-25T06:33:30.019Z"},{"number":"1.0.0","date":"2016-08-09T03:12:24.411Z"},{"number":"1.0.1","date":"2016-08-09T22:21:13.601Z"},{"number":"1.0.2","date":"2016-08-10T18:03:00.828Z"},{"number":"1.1.0","date":"2016-08-14T17:39:57.547Z"},{"number":"1.1.1","date":"2016-08-14T18:35:06.991Z"},{"number":"1.1.2","date":"2016-08-15T15:51:09.889Z"},{"number":"1.1.3","date":"2016-08-15T19:46:48.996Z"},{"number":"1.1.4","date":"2016-08-16T19:08:50.322Z"},{"number":"1.1.5","date":"2016-09-01T19:17:33.963Z"},{"number":"1.1.6","date":"2016-09-01T19:19:32.150Z"},{"number":"1.2.0","date":"2016-09-05T19:35:41.235Z"},{"number":"1.3.0","date":"2016-09-10T23:01:03.237Z"},{"number":"1.3.1","date":"2016-09-10T23:10:14.052Z"},{"number":"1.4.0","date":"2016-09-16T01:27:08.873Z"},{"number":"1.5.0","date":"2016-10-06T18:26:41.993Z"},{"number":"2.0.0","date":"2016-10-07T09:12:18.584Z"},{"number":"2.1.0","date":"2016-10-15T08:09:26.103Z"}],"readme":"# zmq-prebuilt\n\n[![](https://img.shields.io/badge/version-latest-blue.svg)](https://github.com/nteract/zmq-prebuilt)\n[![Build Status](https://travis-ci.org/nteract/zmq-prebuilt.svg?branch=master)](https://travis-ci.org/nteract/zmq-prebuilt)\n[![Build status](https://ci.appveyor.com/api/projects/status/6u7saauir2msxpou?svg=true)](https://ci.appveyor.com/project/nteract/zmq-prebuilt)\n[![](https://img.shields.io/badge/version-stable-blue.svg)](https://github.com/nteract/zmq-prebuilt/releases/tag/v1.4.0)\n[![Build Status](https://travis-ci.org/nteract/zmq-prebuilt-testing.svg?branch=master)](https://travis-ci.org/nteract/zmq-prebuilt-testing)\n[![Build status](https://ci.appveyor.com/api/projects/status/ox85p208tsxw6vt1?svg=true)](https://ci.appveyor.com/project/nteract/zmq-prebuilt-testing)\n\n[**Users**](#installation--users) | [**Contributors and Development**](#installation---contributors-and-development) | [**Maintainers**](#for-maintainers-creating-a-release)\n\n**zmq-prebuilt**: Your ready to use, prebuilt [ØMQ](http://www.zeromq.org/)\nbindings for [Node.js](https://nodejs.org/en/).\n\nØMQ provides handy functionality when working with sockets. Yet,\ninstalling dependencies on your operating system or building ØMQ from\nsource can lead to developer frustration.\n\n**zmq-prebuilt** simplifies creating communications for a Node.js\napplication by providing well-tested, ready to use ØMQ bindings.\nzmq-prebuilt supports all major operating systems, including:\n\n* OS X/Darwin 64-bit\n* Linux 64-bit\n* Windows (64-bit and 32-bit)\n\nUse **zmq-prebuilt** and take advantage of the *elegant simplicity of binaries*.\n\n\n----\n\n## Installation - Users\n\n*Prerequisites*\n\nWe rely on [`prebuild`](https://github.com/mafintosh/prebuild).\n\nInstall `zmq-prebuilt` with the following:\n\n```bash\nnpm install zmq-prebuilt\n```\n\nNow, prepare to be amazed by the wonders of binaries.\n\n## Usage\n\nReplace `require(zmq)` in your code base with `require(zmq-prebuilt)`. That's it.\nThe wonder of binaries begins.\n\n----\n\n## Installation - Contributors and Development\n\nTo set up `zmq-prebuilt` for development, fork this repository and\nclone your fork to your system. Be sure you have [`git-lfs`](https://git-lfs.github.com/) installed.\n\n**Prerequisites for Linux**\n- `python` (`v2.7` recommended, `v3.x.x` is not supported)\n- `make`\n- A proper C/C++ compiler toolchain, like [GCC](https://gcc.gnu.org/)\n\nUse your distribution's package manager to install.\n\n**Prerequisites for macOS**\n\n- `python` (`v2.7` recommended, `v3.x.x` is not supported): already installed on Mac OS X\n- `Xcode Command Line Tools`: Can be installed with `xcode-select --install`\n\n**Prerequisites for Windows**\n\n- **Option 1:** Install all the required tools and configurations using Microsoft's [windows-build-tools](https://github.com/felixrieseberg/windows-build-tools) by running `npm install -g windows-build-tools` from an elevated PowerShell (run as Administrator).\n- **Option 2:** Install dependencies and configuration manually\n   1. Visual C++ Build Environment:\n     * **Option 1:** Install [Visual C++ Build Tools](http://go.microsoft.com/fwlink/?LinkId=691126) using the *Default Install* option.\n     * **Option 2:** Install [Visual Studio 2015](https://www.visualstudio.com/products/visual-studio-community-vs) (or modify an existing installation) and select *Common Tools for Visual C++* during setup.  \n\n  > :bulb: [Windows Vista / 7 only] requires [.NET Framework 4.5.1](http://www.microsoft.com/en-us/download/details.aspx?id=40773)\n\n  2. Install [Python 2.7](https://www.python.org/downloads/) or [Miniconda 2.7](http://conda.pydata.org/miniconda.html) (`v3.x.x` is not supported), and run `npm config set python python2.7`\n  3. Launch cmd, `npm config set msvs_version 2015`\n\n\n**Installation**\n\nInstall a development version of `zmq-prebuilt` with the following:\n\n```bash\nnpm install\n```\n\n## Testing\n\nRun the test suite using:\n\n```bash\nnpm test\n```\n\n## Running an example application\n\nSeveral example applications are found in the `examples` directory. Use\n`node` to run an example. To run the 'subber' application, enter the\nfollowing:\n\n```bash\nnode examples/subber.js\n```\n\n\n## Examples using zmq-prebuilt\n\n### Push/Pull\n\nThis example demonstrates how a producer pushes information onto a\nsocket and how a worker pulls information from the socket.\n\n**producer.js**\n\n```js\n// producer.js\nvar zmq = require('zmq-prebuilt')\n  , sock = zmq.socket('push');\n\nsock.bindSync('tcp://127.0.0.1:3000');\nconsole.log('Producer bound to port 3000');\n\nsetInterval(function(){\n  console.log('sending work');\n  sock.send('some work');\n}, 500);\n```\n\n**worker.js**\n\n```js\n// worker.js\nvar zmq = require('zmq-prebuilt')\n  , sock = zmq.socket('pull');\n\nsock.connect('tcp://127.0.0.1:3000');\nconsole.log('Worker connected to port 3000');\n\nsock.on('message', function(msg){\n  console.log('work: %s', msg.toString());\n});\n```\n\n### Pub/Sub\n\nThis example demonstrates using `zmq-prebuilt` in a classic Pub/Sub,\nPublisher/Subscriber, application.\n\n**Publisher: pubber.js**\n\n```js\n// pubber.js\nvar zmq = require('zmq-prebuilt')\n  , sock = zmq.socket('pub');\n\nsock.bindSync('tcp://127.0.0.1:3000');\nconsole.log('Publisher bound to port 3000');\n\nsetInterval(function(){\n  console.log('sending a multipart message envelope');\n  sock.send(['kitty cats', 'meow!']);\n}, 500);\n```\n\n**Subscriber: subber.js**\n\n```js\n// subber.js\nvar zmq = require('zmq-prebuilt')\n  , sock = zmq.socket('sub');\n\nsock.connect('tcp://127.0.0.1:3000');\nsock.subscribe('kitty cats');\nconsole.log('Subscriber connected to port 3000');\n\nsock.on('message', function(topic, message) {\n  console.log('received a message related to:', topic, 'containing message:', message);\n});\n```\n\n----\n\n## For maintainers: Creating a release\n\nWhen making a release, do the following:\n\n```bash\nnpm version minor && git push && git push --tags\n```\n\nThen, wait for the prebuilds to get uploaded for each OS. After the\nprebuilds are uploaded, run the following to publish the release:\n\n```bash\nnpm publish\n```\n\nTo check if the binaries are packaged correctly, you can push a commit to\n[`nteract/zmq-prebuilt-testing`](https://github.com/nteract/zmq-prebuilt-testing).\n\n## Learn more about nteract\n\n- Visit our website http://nteract.io/.\n- See our organization on GitHub https://github.com/nteract\n- Join us on [Slack](http://slack.nteract.in/) if you need help or have\n  questions. If you have trouble creating an account, either\n  email rgbkrk@gmail.com or post an issue on GitHub.\n\n<img src=\"https://cloud.githubusercontent.com/assets/836375/15271096/98e4c102-19fe-11e6-999a-a74ffe6e2000.gif\" alt=\"nteract animated logo\" height=\"80px\" />\n","created":"2015-12-27T17:53:43.954Z","modified":"2017-05-22T18:17:26.519Z","lastPublisher":{"name":"lgeiger","email":"lukas.geiger94@gmail.com"},"owners":[{"email":"lukas.geiger94@gmail.com","name":"lgeiger"},{"email":"jon.freder@gmail.com","name":"jdfreder"},{"email":"safia@safia.rocks","name":"captainsafia"},{"email":"benjaminrk@gmail.com","name":"minrk"},{"email":"rgbkrk@gmail.com","name":"rgbkrk"}],"other":{"_attachments":{},"_from":".","_id":"zmq-prebuilt","_nodeVersion":"6.8.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/zmq-prebuilt-2.1.0.tgz_1476518964381_0.935646197758615"},"_npmUser":{"name":"lgeiger","email":"lukas.geiger94@gmail.com"},"_npmVersion":"3.10.9","_rev":"4-9e23fc1117262be75d96f7d06c3fb6d5","_shasum":"c3a0491b318a9fe405852b0c117c982783a67293","author":{"name":"Justin Tulloss","email":"justin.tulloss@gmail.com","url":"http://justin.harmonize.fm"},"bugs":{"url":"https://github.com/nteract/zmq-prebuilt/issues"},"contributors":[{"name":"Justin Tulloss","email":"justin.tulloss@gmail.com","url":"http://justin.harmonize.fm"},{"name":"Stéphan Kochen","email":"stephan@kochen.nl","url":"http://stephan.kochen.nl/"},{"name":"Mike Castleman","email":"m@mlcastle.net","url":"http://mlcastle.net/"},{"name":"Matt Crocker"},{"name":"Jeremy Barnes","email":"jeremy@barneso.com","url":"http://www.barneso.com/"},{"name":"Rick","email":"technoweenie@gmail.com","url":"http://techno-weenie.net/"},{"name":"Corey Jewett","url":"http://syntheticplayground.com/"},{"name":"Micheil Smith","email":"micheil@brandedcode.com","url":"http://brandedcode.com/"},{"name":"TJ Holowaychuk","email":"tj@vision-media.ca","url":"http://tjholowaychuk.com/"},{"name":"Ron Korving","url":"https://github.com/ronkorving"},{"name":"Mark Everitt","url":"http://qubyte.dyndns.org/"},{"name":"Aldis Andrejevs","url":"https://github.com/aaudis"},{"name":"Iskren Ivov Chernev","email":"iskren.chernev@gmail.com"},{"name":"Seth Fitzsimmons"},{"name":"Patrick Lucas"},{"name":"Alexander Simmerl","url":"https://github.com/xla"},{"name":"Ian Babrou"},{"name":"Niall O'Higgins"},{"name":"Brian White","url":"https://github.com/mscdex"},{"name":"Mathieu D'Amours","url":"https://github.com/matehat"},{"name":"Joshua Gourneau"},{"name":"Yaroslav Shirokov"},{"name":"Marc Harter","url":"https://github.com/wavded"},{"name":"John Sun","url":"https://github.com/freehaha"},{"name":"Alexey Kupershtokh","email":"alexey.kupershtokh@gmail.com"},{"name":"Jon Gretar Borgthorsson","url":"https://github.com/JonGretar"},{"name":"Brian Lalor","url":"https://github.com/blalor"},{"name":"Benjamin Byholm","url":"https://github.com/kkoopa"},{"name":"Alejandro","url":"https://github.com/Minjung"},{"name":"Eli Skeggs","email":"skeggse@gmail.com","url":"https://github.com/skeggse"},{"name":"Bent Cardan","email":"bent@nothingsatisfies.com","url":"https://github.com/reqshark"}],"directories":{},"dist-tags":{"latest":"2.1.0"},"dist":{"shasum":"c3a0491b318a9fe405852b0c117c982783a67293","tarball":"http://registry.npmjs.org/zmq-prebuilt/-/zmq-prebuilt-2.1.0.tgz"},"maintainers":[{"email":"lukas.geiger94@gmail.com","name":"lgeiger"},{"email":"jon.freder@gmail.com","name":"jdfreder"},{"email":"safia@safia.rocks","name":"captainsafia"},{"email":"benjaminrk@gmail.com","name":"minrk"},{"email":"rgbkrk@gmail.com","name":"rgbkrk"}],"readmeFilename":"README.md","time":{"modified":"2017-05-22T18:17:26.519Z","created":"2015-12-27T17:53:43.954Z","0.0.0":"2015-12-27T17:53:43.954Z","0.0.2":"2016-02-04T06:11:35.927Z","0.0.3":"2016-02-25T06:33:30.019Z","1.0.0":"2016-08-09T03:12:24.411Z","1.0.1":"2016-08-09T22:21:13.601Z","1.0.2":"2016-08-10T18:03:00.828Z","1.1.0":"2016-08-14T17:39:57.547Z","1.1.1":"2016-08-14T18:35:06.991Z","1.1.2":"2016-08-15T15:51:09.889Z","1.1.3":"2016-08-15T19:46:48.996Z","1.1.4":"2016-08-16T19:08:50.322Z","1.1.5":"2016-09-01T19:17:33.963Z","1.1.6":"2016-09-01T19:19:32.150Z","1.2.0":"2016-09-05T19:35:41.235Z","1.3.0":"2016-09-10T23:01:03.237Z","1.3.1":"2016-09-10T23:10:14.052Z","1.4.0":"2016-09-16T01:27:08.873Z","1.5.0":"2016-10-06T18:26:41.993Z","2.0.0":"2016-10-07T09:12:18.584Z","2.1.0":"2016-10-15T08:09:26.103Z"}}}