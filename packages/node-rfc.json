{"name":"node-rfc","version":"0.1.11","description":"nodejs bindings for SAP NW RFC Library","main":"index.js","dependencies":{"nan":"^2.4.0","node-pre-gyp":"0.6.32"},"devDependencies":{"mocha":"^3.1.2","should":"^11.1.1","node-pre-gyp-github":"1.3.1","github":"0.2.4"},"scripts":{"test":"mocha","preinstall":"npm install node-pre-gyp","install":"node-pre-gyp install --fallback-to-build"},"binary":{"module_name":"rfc","module_path":"./build/rfc","host":"https://github.com/sap/node-rfc/releases/download/","remote_path":"{version}"},"engines":{"node":">= 4"},"repository":{"type":"git","url":"git+https://github.wdf.sap.corp/D067587/node-rfc.git"},"keywords":["sap","rfc","rfc sdk","node","nodejs"],"license":"Apache-2.0","gypfile":true,"homepage":"https://github.com/SAP/node-rfc#readme","gitHead":"5e04bccbaaaa4eec6206b44f53469ca301b16343","readme":"The nodejs RFC Connector\n========================\n\nThis node module provides bindings for SAP NetWeawer RFC Library, for a comfortable way of calling ABAP modules from nodejs, via SAP Remote Function Call (RFC) protocol.\n\nPlatforms & Prerequisites\n-------------------------\n\nCombiled binaries are provided for [active nodejs LTS releases](https://github.com/nodejs/LTS), for 64 bit Windows and Linux platforms.\n\nOS X and ARM platforms are currently not supported, as _SAP NW RFC Library_ is not available for those platforms.\n\nTo start using _node-rfc_ you need to obtain the _SAP NW RFC Library_ from the _SAP Service Marketplace_ [Software Download Center](https://support.sap.com/swdc), \nfollowing [these instructions](http://sap.github.io/node-rfc/install.html#sap-nw-rfc-library-installation).\n\nA prerequisite to download is having a **customer or partner account** on _SAP Service Marketplace_ and if you are SAP employee check SAP OSS note [1037575 - Software download authorizations for SAP employees](http://service.sap.com/sap/support/notes/1037575).\n\n_SAP NW RFC Library_ is fully backwards compatible, supporting all NetWeaver systems, from today, down to release R/3 4.0. You can use the newest version released on Service Marketplace and connect to older systems as well.\n\nVersion\n-------\n\nThe latest supported nodejs version is in master branch, for older versions check other branches.\n\nDocumentation\n-------------\n\nFor full documentation please refer to [_node-rfc_ documentation](http://sap.github.io/node-rfc), complementing _SAP NW RFC Library_ [programming guide and documentation](http://service.sap.com/rfc-library)\nprovided on SAP Service Marketplace.\n\nUseful links:\n\n* https://service.sap.com/connectors\n\n* https://wiki.scn.sap.com/wiki/display/ABAPConn/ABAP+Connectivity+-+RFC\n\n* [SAP HANA Cloud Connector](https://help.hana.ondemand.com/help/frameset.htm?e6c7616abb5710148cfcf3e75d96d596.html)\n\nDeveloper resources:\n\n* https://github.com/nodejs/node-gyp \n* [Google V8 Wiki](https://github.com/v8/v8/wiki) and [V8 Namespace Reference](http://v8.paulfryzel.com/docs/master/namespacev8.html)\n* [Google V8 Embedders Guide](https://github.com/v8/v8/wiki/Embedder's%20Guide)\n* nodejs addons [docs and examples](https://nodejs.org/api/addons.html)\n* libuv [documentation](http://docs.libuv.org/) and [book](http://nikhilm.github.io/uvbook/index.html)\n\nInstall\n-------\n\nClone the repository, edit your backend system connection parameters, build and run tests locally:\n\n```shell\ngit clone https://github.com/SAP/node-rfc.git\ncd node-rfc\nnpm install\nmocha\n```\n\nPre-compiled binaries for currently active nodejs LTS releases are provided in the [lib](https://github.com/SAP/node-rfc/tree/master/lib) folder.\n\nGetting started\n---------------\n\nIn order to call remote enabled ABAP function module, we need to create a client\nwith valid logon credentials, connect to NetWeaver system and then invoke a\nremote enabled ABAP function module from node. The client can be used for one or\nmore subsequent RFC calls.\n\n```javascript\n\"use strict\";\n\nvar rfc = require('node-rfc');\n\nvar abapSystem = {\n  user: 'name',\n  passwd: 'password',\n  ashost: '10.11.12.13',\n  sysnr: '00',\n  client: '100',\n  saprouter: '/H/111.22.33.177/S/3299/W/tdkf9d/H/132.139.17.14/H/'\n};\n\n// create new client\nvar client = new rfc.Client(abapSystem);\n\n// echo the client NW RFC lib version\nconsole.log('RFC client lib version: ', client.getVersion());\n\n// and connect\nclient.connect(function(err) {\n  if (err) { // check for login/connection errors\n    return console.error('could not connect to server', err);\n  }\n\n  // invoke remote enabled ABAP function module\n  client.invoke('STFC_CONNECTION',\n    { REQUTEXT: 'H€llö SAP!' },\n    function(err, res) {\n      if (err) { // check for errors (e.g. wrong parameters)\n        return console.error('Error invoking STFC_CONNECTION:', err);\n      }\n\n      // work with result;  should be something like:\n      // { ECHOTEXT: 'Hello SAP!',\n      //   RESPTEXT: 'SAP R/3 Rel. 702   Sysid: E1Q      Date: 20140613   Time: 142530   Logon_Data: 001/DEMO/E',\n      //   REQUTEXT: 'Hello SAP!' }\n      console.log('Result STFC_CONNECTION:', res);\n    });\n\n\n  // invoke more complex ABAP function module\n  var importStruct = {\n    RFCFLOAT: 1.23456789,\n    RFCCHAR1: 'A',\n    RFCCHAR2: 'BC',\n    RFCCHAR4: 'DEFG',\n\n    RFCINT1: 1,\n    RFCINT2: 2,\n    RFCINT4: 345,\n\n    RFCHEX3: 'fgh',\n\n    RFCTIME: '121120',\n    RFCDATE: '20140101',\n\n    RFCDATA1: '1DATA1',\n    RFCDATA2: 'DATA222'\n  };\n\n  var importTable = [importStruct];\n\n  client.invoke('STFC_STRUCTURE',\n    { IMPORTSTRUCT: importStruct, RFCTABLE: importTable },\n    function(err, res) {\n      if (err) {\n        return console.error('Error invoking STFC_STRUCTURE:', err);\n      }\n      console.log('Result STFC_STRUCTURE:', res);\n  });\n\n});\n```\n\nFinally, the connection is closed automatically when the instance is deleted by the garbage collector or by explicitly calling the `client.close()` method on the client instance.\n\nFor more examples check the unit tests source code. Maintain your NW test system parameters first in the source code, before running those examples.\n\n\nRunning the Unit Tests\n----------------------\n\nTo run the unit tests, first ensure that you have followed the [Build from Source](http://sap.github.io/node-rfc/install.html#building-from-source) documentation, \nin order to install all dependencies and successfully build the node-rfc connector. \nOnce you have done that, ensure that [mocha](https://mochajs.org) and [should](https://github.com/shouldjs/should.js) are installed, either as dependencies:\n\n```shell\nnpm install\n```\n\nor globally:\n\n```shell\nnpm install -g mocha should\n```\n\nRun the tests with:\n\n```shell\nmocha\n```\n\nREST API\n--------\n\nExample how to create REST APIs using node-rfc, node, express and gulp: https://github.com/Adracus/noderfc-restapi.\n\nLinks\n-----\n\nNodejs Addons\n\nGetting Started with Embedding https://github.com/v8/v8/wiki/Getting%20Started%20with%20Embedding\n\n\n\n","versions":[{"number":"0.1.0","date":"2014-07-08T10:34:01.032Z"},{"number":"0.1.1","date":"2014-07-21T09:17:29.641Z"},{"number":"0.1.2","date":"2014-07-21T09:48:13.178Z"},{"number":"0.1.3","date":"2014-07-21T10:56:36.532Z"},{"number":"0.1.4","date":"2014-08-07T12:54:08.218Z"},{"number":"0.1.6","date":"2016-12-08T13:38:36.617Z"},{"number":"0.1.7","date":"2016-12-08T15:05:12.235Z"},{"number":"0.1.9","date":"2016-12-08T15:25:12.063Z"},{"number":"0.1.10","date":"2017-01-13T11:32:14.257Z"},{"number":"0.1.11","date":"2017-01-13T13:38:22.540Z"}],"created":"2014-07-08T10:34:01.032Z","modified":"2017-01-13T13:38:22.540Z","lastPublisher":{"name":"io-pa","email":"iopapamanoglou@gmail.com"},"owners":[{"name":"bsrdjan","email":"srdjan.boskovic@sap.com"},{"name":"io-pa","email":"iopapamanoglou@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"node-rfc","_nodeVersion":"4.6.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/node-rfc-0.1.11.tgz_1484314700186_0.15037605981342494"},"_npmUser":{"name":"io-pa","email":"iopapamanoglou@gmail.com"},"_npmVersion":"2.15.9","_rev":"6-92c1ab80dc916784c30ebd857a589d3e","_shasum":"20dd9a52f6cfa5df129faaa14ccd0883ad8beaa3","author":{"name":"Srdjan Boskovic","email":"srdjan.boskovic@sap.com"},"bugs":{"url":"https://github.com/SAP/node-rfc/issues"},"directories":{"doc":"doc","test":"test"},"dist-tags":{"latest":"0.1.11"},"dist":{"shasum":"20dd9a52f6cfa5df129faaa14ccd0883ad8beaa3","tarball":"https://registry.npmjs.org/node-rfc/-/node-rfc-0.1.11.tgz"},"maintainers":[{"name":"bsrdjan","email":"srdjan.boskovic@sap.com"},{"name":"io-pa","email":"iopapamanoglou@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-13T13:38:22.540Z","created":"2014-07-08T10:34:01.032Z","0.1.0":"2014-07-08T10:34:01.032Z","0.1.1":"2014-07-21T09:17:29.641Z","0.1.2":"2014-07-21T09:48:13.178Z","0.1.3":"2014-07-21T10:56:36.532Z","0.1.4":"2014-08-07T12:54:08.218Z","0.1.6":"2016-12-08T13:38:36.617Z","0.1.7":"2016-12-08T15:05:12.235Z","0.1.9":"2016-12-08T15:25:12.063Z","0.1.10":"2017-01-13T11:32:14.257Z","0.1.11":"2017-01-13T13:38:22.540Z"}}}