{"name":"speeech","version":"0.1.1","main":"src/index.js","dependencies":{"@google-cloud/speech":"^0.10.1","lodash.defaultsdeep":"^4.6.0","nan":"^2.6.2","node-record-lpcm16":"^0.3.0","request":"^2.81.0","snowboy":"^1.2.0"},"devDependencies":{"accuweather-simple":"^0.0.1","apiai":"^4.0.3","body-parser":"^1.17.2","express":"^4.15.4","jest":"^20.0.4","lodash.get":"^4.4.2","request-promise-native":"^1.0.4","say-promise":"^0.0.2","sound-player":"^1.0.6","stubby":"^4.0.0"},"scripts":{"test":"jest","test:watch":"jest --watch","stubby":"stubby -d test/stubs/stubby.yaml"},"repository":"https://github.com/joyarzun/speeech","license":"MIT","description":"Speech recognition with hotword offline detection for nodejs","gitHead":"c6dfc6ff3a6055dbf2723a27836aa203b44fe0e9","homepage":"https://github.com/joyarzun/speeech#readme","versions":[{"number":"0.0.1","date":"2017-07-23T16:49:06.595Z"},{"number":"0.1.0","date":"2017-08-21T05:20:51.702Z"},{"number":"0.1.1","date":"2017-08-21T05:34:53.826Z"}],"readme":"[![CircleCI](https://circleci.com/gh/joyarzun/speeech/tree/master.svg?style=shield&circle-token=d392313a1920dda8d1b000c0a1e3c9b7a16bba93)](https://circleci.com/gh/joyarzun/speeech/tree/master)\n# Speeech\nAlexa style's speech recognition with hotword offline support detection for nodejs. Hotword recognition it's offline then you can use an online service streaming like Google Speech or Wit.ai.\n\n**Important: This is an Work in Progress**\n\n## Installation\n\n```\nnpm install --save speeech\n```\n\n## Requirements\n\nYou need to have [SoX](http://sox.sourceforge.net) installed.\n\n#### Debian and derivatives:\n```\nsudo apt-get install sox libsox-fmt-all\n```\n#### Arch Linux:\n```\nyaourt sox cblas\n```\n#### MacOS:\n```\nbrew install sox\n```\n\nOnce SoX it's installed you can try with:\n```\nrec new-file.wav\n```\n\n## Usage\n\nInside of examples folder you can find templates for each service.\nCheck out the comments for install others dependencies.\n\n### Google Speech\n```\nconst speeech = require(\"speeech\");\n\nconst serviceConfig = {\n  auth: {\n    projectId: \"streaming-speech-sample\",\n    keyFilename: \"./keyfile.json\"\n  },\n  streaming: {\n    config: {\n      encoding: \"LINEAR16\",\n      sampleRateHertz: 16000,\n      languageCode: \"en-US\"\n    },\n    singleUtterance: true,\n    interimResults: true\n  }\n};\n\nspeeech.emit(\"start\", speeech.googleService(serviceConfig));\nspeeech.on(\"result\", result => console.log(\"result\", result));\n\n```\n\nYou need to download a keyfile from google console.\n\n### Wit.ai\n```\nconst speeech = require(\"speeech\");\n\nconst serviceConfig = require(\"./witkeyfile.json\");\n\nspeeech.emit(\"start\", speeech.witService(serviceConfig));\nspeeech.on(\"result\", result => console.log(\"result\", result));\n\n```\n\nwitkeyfile.json:\n```\n{\n  \"witToken\": \"XXXXXXXXXXXXXXXXXXX\"\n}\n```\n\n### Api.api\n\nApi.ai use a webhook to comunicate with external services. Inside of example you can use `apiaiWebhook.js` as template for service.\nFor the speech logic you can use `googleApiAiExample.js`\n\naccukeyfile.json looks like:\n```\n{\n  \"apikey\": \"XXXXXXXXXXXXXXX\",\n  \"language\": \"es-cl\"\n}\n```\n\napiAikeyfile.json:\n```\n{\n  \"apiAiToken\": \"XXXXXXXXXXXXXXX\"\n}\n```\n","created":"2017-07-23T16:49:06.595Z","modified":"2017-08-21T05:34:53.826Z","lastPublisher":{"name":"joyarzun","email":"jonsxaero@gmail.com"},"owners":[{"name":"joyarzun","email":"jonsxaero@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"speeech","_nodeVersion":"6.11.2","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/speeech-0.1.1.tgz_1503293692667_0.9347114753909409"},"_npmUser":{"name":"joyarzun","email":"jonsxaero@gmail.com"},"_npmVersion":"3.10.10","_rev":"4-0d9b66b1029fdae18c27aa3ee48ed2a2","_shasum":"51885c7a94d0f43cc50de1e12ada2fe292823ab2","author":{"name":"Jonnatan Oyarzun"},"bugs":{"url":"https://github.com/joyarzun/speeech/issues"},"directories":{},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"51885c7a94d0f43cc50de1e12ada2fe292823ab2","tarball":"https://registry.npmjs.org/speeech/-/speeech-0.1.1.tgz"},"maintainers":[{"name":"joyarzun","email":"jonsxaero@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-08-21T05:34:53.826Z","created":"2017-07-23T16:49:06.595Z","0.0.1":"2017-07-23T16:49:06.595Z","0.1.0":"2017-08-21T05:20:51.702Z","0.1.1":"2017-08-21T05:34:53.826Z"}}}