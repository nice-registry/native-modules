{"name":"blake2","version":"1.4.0","description":"All four BLAKE2 variants (blake2b, blake2bp, blake2s, blake2sp) for node 4+ with stream support","homepage":"https://github.com/ludios/node-blake2","issues":"https://github.com/ludios/node-blake2/issues","keywords":["crypto","hash","hashing","blake2","blake2b","blake2bp","blake2s","blake2sp"],"main":"index.js","scripts":{"test":"mocha tests/*.js && ./node_modules/.bin/eslint .","test-strong-mode":"node --strong-mode ./node_modules/.bin/_mocha tests/*.js","install":"node-gyp rebuild"},"dependencies":{"nan":"^2.0.0"},"devDependencies":{"eslint":"^1.0.0","mocha":"^2.2.5"},"license":"ISC","repository":"https://github.com/ludios/node-blake2","engines":{"node":">= 4.0.0"},"gypfile":true,"gitHead":"6a325c7befe362546a3d85e95c79e7d4bf2060dc","versions":[{"number":"0.1.0","date":"2015-05-09T22:26:41.285Z"},{"number":"0.1.1","date":"2015-05-09T22:50:24.194Z"},{"number":"0.2.0","date":"2015-05-09T23:31:06.950Z"},{"number":"0.2.1","date":"2015-05-09T23:47:33.283Z"},{"number":"0.2.2","date":"2015-05-10T00:25:56.045Z"},{"number":"0.2.3","date":"2015-05-11T03:12:10.188Z"},{"number":"0.2.4","date":"2015-05-17T00:40:23.934Z"},{"number":"0.3.0","date":"2015-05-17T04:40:53.063Z"},{"number":"1.0.0","date":"2015-06-09T03:31:39.912Z"},{"number":"1.0.1","date":"2015-06-09T03:37:08.086Z"},{"number":"1.0.2","date":"2015-06-09T03:53:01.945Z"},{"number":"1.1.0","date":"2015-07-24T13:44:28.226Z"},{"number":"1.2.0","date":"2015-08-01T01:21:58.102Z"},{"number":"1.2.1","date":"2015-09-09T12:59:44.123Z"},{"number":"1.2.2","date":"2015-09-09T16:25:58.291Z"},{"number":"1.2.3","date":"2016-03-30T16:43:47.043Z"},{"number":"1.3.0","date":"2016-07-27T10:52:50.442Z"},{"number":"1.4.0","date":"2016-07-27T11:21:32.010Z"}],"readme":"node-blake2\n===\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n\nWhy BLAKE2 for hashing?  Because \"BLAKE2 outperforms MD5, SHA-1, SHA-2,\nand SHA-3 on recent Intel CPUs\" and has \"no known security issues, whereas\nSHA-1, MD5, and SHA-512 are susceptible to length-extension\".\n[https://blake2.net/](https://blake2.net/)\n\nnode-blake2 provides a [stream](https://nodejs.org/api/stream.html)-compatible\nblake2b, blake2bp, blake2s, and blake2sp `Hash` and `KeyedHash` for node 4+.\n\nnode-blake2 was tested to work on\n-\tUbuntu 14.04 (g++ 4.8.2)\n-\tUbuntu 14.04 (clang++ 3.6.2-svn238746-1~exp1)\n-\tUbuntu 15.04 (g++ 4.9.2)\n-\tWindows 8.1 x64 (VS2013)\n-\tOS X 10.10 (Apple LLVM 6.1.0)\n\n\nInstall\n---\n\nOn Windows, first install [Python 2.7.12](https://www.python.org/downloads/release/python-2712/) so that node-gyp works.\n\nIn your project, run:\n\n```\nnpm install blake2 --save\n```\n\nor install from the GitHub repo:\n\n```\nnpm install ludios/node-blake2 --save\n```\n\n\nExamples\n---\n\n### Unkeyed BLAKE2b\n\n```js\nvar blake2 = require('blake2');\nvar h = blake2.createHash('blake2b');\nh.update(new Buffer(\"test\"));\nconsole.log(h.digest(\"hex\"));\n```\n\n`blake2.createHash` works like node's\n[`crypto.createHash`](https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm).\n\n### Keyed BLAKE2b\n\n```js\nvar blake2 = require('blake2');\nvar h = blake2.createKeyedHash('blake2b', new Buffer('key - up to 64 bytes for blake2b, 32 for blake2s'));\nh.update(new Buffer(\"test\"));\nconsole.log(h.digest(\"hex\"));\n```\n\n`blake2.createKeyedHash` takes a key argument like\n[`crypto.createHmac`](https://nodejs.org/api/crypto.html#crypto_crypto_createhmac_algorithm_key).\nAlthough it is not an HMAC, a keyed hash serves the same purpose.\n\n### Important notes\n\n-\t`blake2.create{Hash,KeyedHash}` support algorithms `blake2b`, `blake2bp`,\n\t`blake2s`, and `blake2sp`.\n-\tData passed to `.update` on `blake2.{Hash,KeyedHash}` must be a `Buffer`.\n-\tKeys passed to `blake2.createKeyedHash(algo, key)` must be a `Buffer`.\n-\tJust as with `crypto.Hash`, `.digest()` can only be called once.\n\n### With streams\n\nThis works exactly like it does with [`crypto.Hash`](https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm).  See [b2sum.js](https://github.com/ludios/node-blake2/blob/master/b2sum.js).\n\n### Custom digest length\n\nBLAKE2 can generate digests between 1-64 bytes for BLAKE2b and 1-32 bytes for\nBLAKE2s.  Pass `digestLength` as an option to use a digest shorter than the\ndefault (maximum length):\n\n```js\nvar blake2 = require('blake2');\nvar h = blake2.createHash('blake2b', {digestLength: 16});\nh.update(new Buffer(\"test\"));\nh.digest(); // Returns a Buffer with 16 bytes\n```\n\nor with a key:\n\n```js\nvar blake2 = require('blake2');\nvar h = blake2.createKeyedHash('blake2b', new Buffer('my key'), {digestLength: 16});\nh.update(new Buffer(\"test\"));\nh.digest(); // Returns a Buffer with 16 bytes\n```\n\nNote that BLAKE2 will generate completely different digests for shorter digest\nlengths; they are not simply a slice of the default digest.\n\n### Copying a hash object\n\nYou can call `.copy()` on a `Hash` or `KeyedHash`, which will return a new object with all of the internal BLAKE2 state copied from the source object.\n\n```js\nvar blake2 = require('blake2');\nvar h = blake2.createHash('blake2b');\nh.update(new Buffer(\"test\"));\n\n// Call .copy() before .digest(), because .digest() finalizes internal state\nvar j = h.copy();\n\n// h is unaffected by updates to j\nj.update(new Buffer(\"more\"));\n\nconsole.log(h.digest());\nconsole.log(j.digest());\n```\n\nKnown issues\n---\n\n-\tOn Windows, node-blake2 requires AVX instructions due to some SSE2 build\n\tproblems.  This shouldn't be too hard to fix.\n\n[npm-image]: https://img.shields.io/npm/v/blake2.svg\n[npm-url]: https://npmjs.org/package/blake2\n[travis-image]: https://img.shields.io/travis/ludios/node-blake2.svg\n[travis-url]: https://travis-ci.org/ludios/node-blake2\n","created":"2015-05-09T22:26:41.285Z","modified":"2016-07-27T11:21:32.010Z","lastPublisher":{"name":"ludios","email":"ivan@ludios.org"},"owners":[{"name":"ludios","email":"ivan@ludios.org"}],"other":{"_attachments":{},"_from":".","_id":"blake2","_nodeVersion":"6.2.2","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/blake2-1.4.0.tgz_1469618487804_0.47164131700992584"},"_npmUser":{"name":"ludios","email":"ivan@ludios.org"},"_npmVersion":"3.9.5","_rev":"1-ddc4162d15680ef0e98e0ca201ca861c","_shasum":"c77bf108c68ee83c5f57d31edefc6bdefe14c368","author":{"name":"Ivan Kozik"},"bugs":{"url":"https://github.com/ludios/node-blake2/issues"},"directories":{},"dist-tags":{"latest":"1.4.0"},"dist":{"shasum":"c77bf108c68ee83c5f57d31edefc6bdefe14c368","tarball":"http://registry.npmjs.org/blake2/-/blake2-1.4.0.tgz"},"maintainers":[{"name":"ludios","email":"ivan@ludios.org"}],"readmeFilename":"README.md","time":{"modified":"2016-07-27T11:21:32.010Z","created":"2015-05-09T22:26:41.285Z","0.1.0":"2015-05-09T22:26:41.285Z","0.1.1":"2015-05-09T22:50:24.194Z","0.2.0":"2015-05-09T23:31:06.950Z","0.2.1":"2015-05-09T23:47:33.283Z","0.2.2":"2015-05-10T00:25:56.045Z","0.2.3":"2015-05-11T03:12:10.188Z","0.2.4":"2015-05-17T00:40:23.934Z","0.3.0":"2015-05-17T04:40:53.063Z","1.0.0":"2015-06-09T03:31:39.912Z","1.0.1":"2015-06-09T03:37:08.086Z","1.0.2":"2015-06-09T03:53:01.945Z","1.1.0":"2015-07-24T13:44:28.226Z","1.2.0":"2015-08-01T01:21:58.102Z","1.2.1":"2015-09-09T12:59:44.123Z","1.2.2":"2015-09-09T16:25:58.291Z","1.2.3":"2016-03-30T16:43:47.043Z","1.3.0":"2016-07-27T10:52:50.442Z","1.4.0":"2016-07-27T11:21:32.010Z"}}}