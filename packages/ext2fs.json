{"name":"ext2fs","version":"0.0.14","description":"NodeJS native bindings to the libext2fs for cross-platform ext filesystem handling","license":"Apache-2.0","main":"index.js","gypfile":true,"scripts":{"configure":"node-gyp configure","build":"node-gyp build","pretest":"eslint lib test","test":"mocha","publish-please":"publish-please","prepublish":"publish-please guard","install":"node-gyp rebuild"},"dependencies":{"async":"^2.4.1","bindings":"^1.2.1","eslint":"^3.19.0","file-disk":"^1.0.0","nan":"^2.5.1"},"devDependencies":{"bluebird":"^3.4.7","mocha":"^3.2.0","publish-please":"^2.2.0"},"homepage":"https://github.com/resin-io/node-ext2fs#readme","repository":"https://github.com/resin-io/node-ext2fs","keywords":["extfs","ext","ext2","ext3","ext4","filesystem","fs"],"gitHead":"0709a1950b5f155c778fe65d263a790944361c44","versions":[{"number":"0.0.3","date":"2017-06-13T13:21:25.554Z"},{"number":"0.0.4","date":"2017-06-13T15:05:09.844Z"},{"number":"0.0.5","date":"2017-06-13T15:37:44.715Z"},{"number":"0.0.6","date":"2017-06-13T15:42:07.655Z"},{"number":"0.0.7","date":"2017-06-13T18:49:18.287Z"},{"number":"0.0.8","date":"2017-06-15T11:43:06.307Z"},{"number":"0.0.9","date":"2017-06-16T13:25:21.035Z"},{"number":"0.0.10","date":"2017-06-20T12:54:29.557Z"},{"number":"0.0.11","date":"2017-06-20T13:05:55.973Z"},{"number":"0.0.12","date":"2017-06-23T12:30:27.064Z"},{"number":"0.0.13","date":"2017-06-23T19:36:50.114Z"},{"number":"0.0.14","date":"2017-06-26T18:22:57.980Z"}],"readme":"node-ext2fs\n=========\n### NodeJS native bindings to the linux ext{2,3,4} filesystem library\n[![Build Status](https://travis-ci.org/resin-io/node-ext2fs.svg?branch=master)](https://travis-ci.org/resin-io/node-ext2fs)\n\nnode-ext2fs uses the [e2fsprogs](https://github.com/tytso/e2fsprogs) project to\nprovide access to ext filesystem from NodeJS in a cross-platform way.\n\nSome things you can do with this module:\n\n* Read/write files in a filesystem image directly without mounting\n* Use familiar APIs, node-ext2fs has the exact same interface as node's `fs` module\n* Combine node-ext2fs filesystem streams with host filesystem streams (e.g copy files)\n* Create a tar archive from a filesystem image\n* Perform a TRIM operation to obtain discard regions of a filesystem\n\n**Warning: The API exposed by this library is still forming and can change at\nany time!**\n\nInstallation\n------------\n\nTo install `node-ext2fs` you need to have gcc and make available to your\nenvironment. For Linux and Mac having a working node-gyp installation is\nenough. To install on windows, you have to install MingW64 and make sure\n`mingw32-make` and `gcc` are available in your Powershell or cmd.exe terminal.\n\nSimply compile and install `node-ext2fs` using `npm`:\n\n``` bash\n$ npm install ext2fs\n```\n\nUsage\n-----\n\nMount a disk image and use the returned `fs` object.\nThe fs returned object behaves like node's `fs` except it doesn't provide any\nxxxxSync method.\nYou can also issue `DISCARD` requests using `ext2fs.trim(filesystem, callback)`\n\nSee the examples below.\n\nExample\n-------\n\n```javascript\nconst ext2fs = require('ext2fs');\nconst filedisk = require('file-disk');\nconst fs = require('fs');\n\nconst fd = fs.openSync('/path/to/ext4_filesystem.img', 'r+');\nconst disk = new filedisk.FileDisk(fd);\n\next2fs.mount(disk, function(err, filesystem) {\n\tif (err) {\n\t\treturn;\n\t}\n\t// filesystem behaves like node's fs\n\tconsole.log('Mounted filesystem successfully');\n\tfilesystem.readFile('/some_file', 'utf8', function(err, contents) {\n\t\tif (err) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('contents:', contents);\n\t\text2fs.trim(filesystem, function(err) {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log('TRIMed filesystem');\n\t\t\t// don't forget to umount\n\t\t\text2fs.umount(filesystem, function(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.log('filesystem umounted')\n\t\t\t\tfs.closeSync(fd)\n\t\t\t});\n\t\t});\n\t});\n});\n\n```\n\nExample using promises\n----------------------\n\nThe code above isn't very practical as it requires a new level of indentation\nfor each call. Let's simplify it using promises.\n\nYou can use `ext2fs.mountDisposer` with `Promise.using` so the filesystem is\numounted automatically when you're done using it.\n\n```javascript\nconst Promise = require('bluebird')\nconst ext2fs = Promise.promisifyAll(require('ext2fs'));\nconst filedisk = require('file-disk');\n\nconst path = 'test/fixtures/ext2.img';\n\nPromise.using(filedisk.openFile(path, 'r+'), function(fd) {\n\tconst disk = new filedisk.FileDisk(fd);\n\treturn Promise.using(ext2fs.mountDisposer(disk), function(filesystem) {\n\t\tfilesystem = Promise.promisifyAll(filesystem);\n\t\t// filesystem behaves like node's fs\n\t\tconsole.log('Mounted filesystem successfully');\n\t\treturn filesystem.readFileAsync('/1', 'utf8')\n\t\t.then(function(contents) {\n\t\t\tconsole.log('contents:', contents);\n\t\t\treturn ext2fs.trimAsync(filesystem);\n\t\t})\n\t\t.then(function() {\n\t\t\tconsole.log('TRIMed filesystem');\n\t\t});\n\t});\n})\n\n```\n\nSupport\n-------\n\nIf you're having any problems, please [raise an issue][github-issue] on GitHub.\n\nLicense\n-------\n\nnode-ext2fs is free software, and may be redistributed under the terms specified\nin the [license].\n\n[github-issue]: https://github.com/resin-io/node-ext2fs/issues/new\n[license]: https://github.com/resin-io/node-ext2fs/blob/master/LICENSE\n","created":"2017-06-13T13:21:25.554Z","modified":"2017-06-26T18:22:57.980Z","lastPublisher":{"name":"resin.io","email":"accounts@resin.io"},"owners":[{"name":"resin.io","email":"accounts@resin.io"}],"other":{"_attachments":{},"_from":".","_id":"ext2fs","_nodeVersion":"6.10.2","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ext2fs-0.0.14.tgz_1498501375472_0.9556811968795955"},"_npmUser":{"name":"resin.io","email":"accounts@resin.io"},"_npmVersion":"3.10.10","_rev":"12-1428a7cea08c641ba7d0df7ed0d1adfc","_shasum":"04674d2785d0049b846724c2b27c2228b1455373","author":{"name":"Petros Angelatos","email":"petrosagg@resin.io"},"bugs":{"url":"https://github.com/resin-io/node-ext2fs/issues"},"contributors":[{"name":"Alexis Svinartchouk","email":"alexis@resin.io"},{"name":"Petros Angelatos","email":"petrosagg@resin.io"}],"directories":{},"dist-tags":{"latest":"0.0.14"},"dist":{"shasum":"04674d2785d0049b846724c2b27c2228b1455373","tarball":"https://registry.npmjs.org/ext2fs/-/ext2fs-0.0.14.tgz"},"maintainers":[{"name":"resin.io","email":"accounts@resin.io"}],"readmeFilename":"README.md","time":{"modified":"2017-06-26T18:22:57.980Z","created":"2017-06-13T13:21:25.554Z","0.0.3":"2017-06-13T13:21:25.554Z","0.0.4":"2017-06-13T15:05:09.844Z","0.0.5":"2017-06-13T15:37:44.715Z","0.0.6":"2017-06-13T15:42:07.655Z","0.0.7":"2017-06-13T18:49:18.287Z","0.0.8":"2017-06-15T11:43:06.307Z","0.0.9":"2017-06-16T13:25:21.035Z","0.0.10":"2017-06-20T12:54:29.557Z","0.0.11":"2017-06-20T13:05:55.973Z","0.0.12":"2017-06-23T12:30:27.064Z","0.0.13":"2017-06-23T19:36:50.114Z","0.0.14":"2017-06-26T18:22:57.980Z"}}}