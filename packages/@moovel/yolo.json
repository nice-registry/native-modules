{"name":"@moovel/yolo","version":"0.1.9","description":"NodeJS interface for YOLO/Darknet","keywords":["yolo","darknet","recognition"],"homepage":"https://github.com/moovel/node-yolo","repository":"https://github.com/moovel/node-yolo","main":"darknet.js","gypfile":true,"dependencies":{"bindings":"~1.2.1","nan":"^2.0.0"},"license":"MIT","engines":{"node":">=4"},"scripts":{"install":"node-gyp rebuild"},"gitHead":"70ee2c625416c7e01de3fa9f692ff2636aef0017","versions":[{"number":"0.1.1","date":"2017-03-10T09:57:58.657Z"},{"number":"0.1.2","date":"2017-03-10T09:59:00.825Z"},{"number":"0.1.3","date":"2017-03-10T10:05:01.850Z"},{"number":"0.1.4","date":"2017-03-14T07:24:03.016Z"},{"number":"0.1.5","date":"2017-03-14T07:27:55.950Z"},{"number":"0.1.6","date":"2017-03-14T13:27:01.804Z"},{"number":"0.1.7","date":"2017-03-14T13:41:25.570Z"},{"number":"0.1.8","date":"2017-03-17T07:56:42.319Z"},{"number":"0.1.9","date":"2017-04-10T20:16:16.498Z"}],"readme":"# Node.js Wrapper for YOLO/Darknet recognition framework\n\nDarknet is [an open source neural network framework written in C and CUDA](https://github.com/pjreddie/darknet).\nThis project wraps this framework in a Node.js native addon.\n\n<img src=\"https://lab.moovel.com/content/uploads/yolo-micro-prv.gif\" width=\"458px\" height=\"258px\">\n\n- [darknet](http://pjreddie.com/darknet/)\n- [YOLO (You only look once)](http://pjreddie.com/darknet/yolo/)\n\n## Status\n\nCurrently, the wrapper implements a demo method to run a recognition from the webcam/video or an image file. Equivalent to\n\n```sh\n./darknet detector demo cfg/coco.data cfg/yolo.cfg yolo.weights\n./darknet detect cfg/yolo.cfg yolo.weights data/dog.jpg\n```\n\n## Prerequisites\n\nThis module requires OpenCV installed. First, you need to compile [this fork](https://github.com/OrKoN/darknet) of darknet with OpenCV support (optionally, with CUDA support):\n\n```sh\ngit clone https://github.com/OrKoN/darknet\ncd darknet\nmake OPENCV=1 # optionally GPU=1\nmake install # by default installed to /usr/local\n```\n\nAfter that you can process with the installation via NPM.\n\nThe fork is required because it contains [a few important changes](https://github.com/pjreddie/darknet/compare/master...OrKoN:master) to the origin source code which allow using darknet with NodeJS:\n\n- Makefile is extended to build a static library (darknet.a).\n- Makefile is extended with `install` and `uninstall` commands which install the library globally so that this module can easily find and link it.\n- All darknet functions in header files are marked with `extern \"C\"` if they are included in a C++ program (such as a NodeJS module).\n\n## Installation\n\n```sh\nnpm install @moovel/yolo --save\n```\n\n## Usage\n\nEither download your own `cfg`, `data` folders and `.weight` files from the darknet project or use the ones included in `test` folder (see also [test/readme.md](test/README.md)). You also can find there the examples from below.\n\nDetect a video from camera or a file:\n\n```js\nconst darknet = require('@moovel/yolo');\n\ndarknet.detect({\n  cfg: './cfg/yolo.cfg',\n  weights: './yolo.weights',\n  data: './cfg/coco.data',\n  cameraIndex: 0, // optional, default: 0,\n  video: \"./test.mp4\", // optional, forces to use the video file instead of a camera\n  thresh: 0.24, // optional, default: 0.24\n  hierThresh: 0.5, // optional, default: 0.5\n}, function(modified, original, detections, dimensions) {\n  /**\n\n  modified - raw frame with detections drawn, rgb24 format\n  original - raw frame, as captured by the webcam/video, rgb24 format,\n  detections - array of detections\n  dimenstions - image width and height\n\n  Example detections:\n\n  [ { x: 0.8602103590965271,\n      y: 0.20008485019207,\n      w: 0.13895535469055176,\n      h: 0.39782464504241943,\n      prob: 0.2408987432718277,\n      name: 'tvmonitor' },\n    ,\n    { x: 0.26072466373443604,\n      y: 0.4977818727493286,\n      w: 0.10842404514551163,\n      h: 0.22796104848384857,\n      prob: 0.3290732204914093,\n      name: 'person' },\n    ,\n    { x: 0.2568981349468231,\n      y: 0.5765896439552307,\n      w: 0.12322483211755753,\n      h: 0.2544059157371521,\n      prob: 0.2738085687160492,\n      name: 'chair' },\n    ,\n    { x: 0.6593853235244751,\n      y: 0.8188746571540833,\n      w: 0.06210440397262573,\n      h: 0.100614033639431,\n      prob: 0.3225017189979553,\n      name: 'clock' } ]\n\n  */\n});\n```\n\nDetect on a single image:\n\n```js\nconst darknet = require('@moovel/yolo');\n\ndarknet.detectImage({\n  cfg: './cfg/yolo.cfg',\n  weights: './yolo.weights',\n  data: './cfg/coco.data',\n  image: './data/dog.jpg',\n  thresh: 0.24, // optional, default: 0.24\n  hierThresh: 0.5, // optional, default: 0.5,\n}, function(modified, original, detections, dimensions) {\n  /**\n\n  modified - raw frame with detections drawn, rgb24 format\n  original - raw frame, as captured by the webcam/video, rgb24 format,\n  detections - array of detections\n  dimenstions - image width and height\n\n  Example detections:\n\n  [ { x: 0.8602103590965271,\n      y: 0.20008485019207,\n      w: 0.13895535469055176,\n      h: 0.39782464504241943,\n      prob: 0.2408987432718277,\n      name: 'tvmonitor' },\n    ,\n    { x: 0.26072466373443604,\n      y: 0.4977818727493286,\n      w: 0.10842404514551163,\n      h: 0.22796104848384857,\n      prob: 0.3290732204914093,\n      name: 'person' },\n    ,\n    { x: 0.2568981349468231,\n      y: 0.5765896439552307,\n      w: 0.12322483211755753,\n      h: 0.2544059157371521,\n      prob: 0.2738085687160492,\n      name: 'chair' },\n    ,\n    { x: 0.6593853235244751,\n      y: 0.8188746571540833,\n      w: 0.06210440397262573,\n      h: 0.100614033639431,\n      prob: 0.3225017189979553,\n      name: 'clock' } ]\n  */\n});\n```\n\nAfter that you can compress original frames with ffmpeg:\n\n```sh\nffmpeg -f rawvideo -s 768x576 -pix_fmt rgb24 -i data.raw data.jpg\n```\n\n","created":"2017-03-10T09:57:58.657Z","modified":"2017-04-10T20:16:16.498Z","lastPublisher":{"name":"orkon","email":"alexei.rudenko@gmail.com"},"owners":[{"name":"moovel-npm","email":"moovel.npm@moovel.com"},{"name":"orkon","email":"alexei.rudenko@gmail.com"},{"name":"slandsbek","email":"stefan.landsbek@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"@moovel/yolo","_nodeVersion":"6.10.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/yolo-0.1.9.tgz_1491855374694_0.1147625318262726"},"_npmUser":{"name":"orkon","email":"alexei.rudenko@gmail.com"},"_npmVersion":"4.4.1","_rev":"5-9726cae507ebb73465d9285cfc55cd7a","_shasum":"84ae1fc2c261f8de122d858853dd85760765dfa6","bugs":{"url":"https://github.com/moovel/node-yolo/issues"},"directories":{},"dist-tags":{"latest":"0.1.9"},"dist":{"shasum":"84ae1fc2c261f8de122d858853dd85760765dfa6","tarball":"https://registry.npmjs.org/@moovel/yolo/-/yolo-0.1.9.tgz"},"maintainers":[{"name":"moovel-npm","email":"moovel.npm@moovel.com"},{"name":"orkon","email":"alexei.rudenko@gmail.com"},{"name":"slandsbek","email":"stefan.landsbek@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-10T20:16:16.498Z","created":"2017-03-10T09:57:58.657Z","0.1.1":"2017-03-10T09:57:58.657Z","0.1.2":"2017-03-10T09:59:00.825Z","0.1.3":"2017-03-10T10:05:01.850Z","0.1.4":"2017-03-14T07:24:03.016Z","0.1.5":"2017-03-14T07:27:55.950Z","0.1.6":"2017-03-14T13:27:01.804Z","0.1.7":"2017-03-14T13:41:25.570Z","0.1.8":"2017-03-17T07:56:42.319Z","0.1.9":"2017-04-10T20:16:16.498Z"}}}