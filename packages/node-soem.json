{"name":"node-soem","version":"0.1.4","description":"Simple Open EtherCAT Master for Node.JS.","main":"build/Release/node-soem","dependencies":{"nan":"^2.2.0","node-gyp":"^3.3.0"},"devDependencies":{},"scripts":{"preinstall":". scripts/preinstall.sh","install":"node-gyp rebuild","test":"echo \"Error: no test specified\" && exit 1"},"keywords":["ethercat","soem","automation","bus","protocol"],"license":"MIT","gypfile":true,"gitHead":"81e27a2afea0e22765e7e960fd828bb0914b2cce","versions":[{"number":"0.1.0","date":"2016-02-17T19:27:28.218Z"},{"number":"0.1.1","date":"2016-02-23T09:03:07.174Z"},{"number":"0.1.2","date":"2017-01-11T07:52:19.541Z"},{"number":"0.1.3","date":"2017-01-16T10:31:06.161Z"},{"number":"0.1.4","date":"2017-08-03T07:12:43.738Z"}],"readme":"# Simple Open EtherCAT Master for Node.js\n\n## Installation\n\n`npm install node-soem`\n\nMake sure to have `git` and `cmake` installed on you system. The installation process builds a shared library from the [Simple Open EtherCAT Master](https://github.com/openethercatsociety/soem).\n\n## API\n\nBasically following the C API.\n\n### Creating a master.\n\n    var soem = require('node-soem').NodeSoemMaster,\n        master = soem(); // uses eth0 initially\n\n### Example\n\n    // initiate socket and stuff\n    if (master.init()) {\n    \n        // send out some ethercat frames to configure slaves\n        master.configInit();\n\n        // map the slave pdos to the internal ioMap\n        master.configMap();\n    \n        // configure distributed clocks\n        master.configDC();\n\n        // take a look at the bus configuration\n        var slaves = master.getSlaves();\n\n        console.log(slaves);\n\n        // get ready to send some initial data befor going to operational state\n        master.sendProcessdata();\n        maste.receiveProcessdata();\n\n        // go to operational state\n        master.writeState(0, 4); // 0=all slaves, 4=operational state\n\n        // wait for the master to reach operational state\n\n        var waitForOp = function () {\n        \n            var intv = setInterval(function () {\n            \n                master.sendProcessdata();\n                master.receiveProcessdata();\n                \n                var state = master.statecheck(0, 4);\n                \n                // operational state reached\n                if (state === 4) {\n                    clearInterval(intv);\n                    loop();    \n                } \n                \n            }, 50);    \n            \n        }\n\n        var loop = function () {\n       \n            var counter = 0,\n                slaves = master.getSlaves(),\n                dv = new DataView(slaves[0].outputs);\n        \n            var intv = setInterval(function () {\n     \n                master.sendProcessdata();\n                master.receiveProcessdata();\n               \n                dv.setUint16(0, counter++); \n                           \n                \n            }, 50);   \n            \n        }\n    \n        waitForOp();\n\n    }\n\n## License\n\n\nCopyright (C) 2016 Stefan Poeter (Stefan.Poeter[at]cloud-automation.de)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","created":"2016-02-17T19:27:28.218Z","modified":"2017-08-03T07:12:43.738Z","lastPublisher":{"name":"stefanpoeter","email":"stefan.poeter@cloud-automation.de"},"owners":[{"name":"stefanpoeter","email":"stefan.poeter@cloud-automation.de"}],"other":{"_attachments":{},"_from":".","_id":"node-soem","_nodeVersion":"6.11.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-soem-0.1.4.tgz_1501744362855_0.7460893304087222"},"_npmUser":{"name":"stefanpoeter","email":"stefan.poeter@cloud-automation.de"},"_npmVersion":"3.10.10","_rev":"5-f1dc19abdcfbff54773f46af27a19e82","_shasum":"c77c29643eec50e880ec240258d622136784bf2a","author":{"name":"Stefan PÃ¶ter [stefan.poeter@cloud-automation.de]"},"directories":{},"dist-tags":{"latest":"0.1.4"},"dist":{"shasum":"c77c29643eec50e880ec240258d622136784bf2a","tarball":"https://registry.npmjs.org/node-soem/-/node-soem-0.1.4.tgz"},"maintainers":[{"name":"stefanpoeter","email":"stefan.poeter@cloud-automation.de"}],"readmeFilename":"README.md","time":{"modified":"2017-08-03T07:12:43.738Z","created":"2016-02-17T19:27:28.218Z","0.1.0":"2016-02-17T19:27:28.218Z","0.1.1":"2016-02-23T09:03:07.174Z","0.1.2":"2017-01-11T07:52:19.541Z","0.1.3":"2017-01-16T10:31:06.161Z","0.1.4":"2017-08-03T07:12:43.738Z"}}}