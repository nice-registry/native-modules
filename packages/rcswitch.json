{"name":"rcswitch","version":"0.3.1","description":"Control your wireless power outlet sockets with RCSwitch for the Raspberry Pi","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","install":"node-gyp rebuild"},"repository":"https://github.com/marvinroger/node-rcswitch","keywords":["rpi","raspberrypi","rcswitch","433","rf","wireless","power","outlet"],"engines":{"node":">=0.8"},"license":"GPL-2.0","gypfile":true,"homepage":"https://github.com/marvinroger/node-rcswitch","dependencies":{"bindings":"^1.2.1","nan":"^2.0.8"},"gitHead":"d216e43d25756ee4baaf57200260baae4138b018","versions":[{"number":"0.0.1","date":"2014-07-03T14:22:28.943Z"},{"number":"0.0.2","date":"2014-07-03T14:47:14.059Z"},{"number":"0.0.3","date":"2014-07-03T18:13:30.394Z"},{"number":"0.0.4","date":"2014-07-03T19:12:56.620Z"},{"number":"0.0.5","date":"2014-07-03T19:31:57.057Z"},{"number":"0.1.0","date":"2015-02-28T17:33:01.344Z"},{"number":"0.2.0","date":"2015-09-05T13:20:55.366Z"},{"number":"0.2.1","date":"2015-09-05T16:37:50.418Z"},{"number":"0.2.2","date":"2015-09-05T16:39:30.271Z"},{"number":"0.2.3","date":"2015-09-09T19:00:04.233Z"},{"number":"0.3.0","date":"2016-01-10T20:49:02.251Z"},{"number":"0.3.1","date":"2016-01-30T11:56:51.220Z"}],"readme":"node-rcswitch\n=============\n\n[![NPM version](https://badge.fury.io/js/rcswitch.svg)](http://badge.fury.io/js/rcswitch)\n\nNode bindings for the [rcswitch RaspberryPi port](https://github.com/r10r/rcswitch-pi).\n\nIt should be compatible with all versions of Node.js starting from 0.8.\n\n## Requirements\n\n* Like the C++ version of rcswitch, [WiringPi must be installed](https://projects.drogon.net/raspberry-pi/wiringpi/download-and-install/) in order to compile.\n* Both the data and the power Pins of the 315/433Mhz emitter must be connected to the RPi. Note the number of the WiringPi data Pin. (see http://wiringpi.com/pins/)\n* The node command must be run with root access\n\n## Usage\n\n```javascript\nvar rcswitch = require('rcswitch'); // Might throw an error if wiring pi init failed, or exit process if no root (must work on that)\n\nrcswitch.enableTransmit(0); // Use data Pin 0\nrcswitch.switchOn(\"10110\", 1); // Switch on the first unit of 10110 (code 1x23x) group\nrcswitch.switchOff(\"11000\", 2); // Switch off the second unit of 11000 (code 12xxx) group\n```\n\n## API\n\n### Configuration\n\n#### rcswitch.enableTransmit(`pin`)\n\nEnable transmission on the given pin (make it an OUTPUT). Must be called before any other functions.\n\n* `pin` - (Number) data Pin to use following [the WiringPi schema](http://wiringpi.com/pins/)\n\nReturn true if `pin` is an integer, false otherwise.\n\n#### rcswitch.disableTransmit()\n\nDisable transmission (set the pin to -1 which disable any following function call).\n\nReturn true.\n\n### Type A\n\n![Type A switch](https://raw.github.com/marvinroger/node-rcswitch/master/img/type_a.jpg \"Type A switch\")\n\n#### rcswitch.switchOn(`group`, `switch`)\n\nSwitch a remote switch on (Type A with 10 pole DIP switches).\n\n* `group` - (String) code of the switch group (refers to DIP switches 1, 2, 3, 4 and 5 where \"1\" = on and \"0\" = off - e.g. if all DIP switches are on it's \"11111\")\n* `switch` - (Number) switch number (can be 1 (if DIP switch A is on), 2 (if DIP switch B is on) and so on until 4)\n\nReturn true.\n\n#### rcswitch.switchOff(`group`, `switch`)\n\nSwitch a remote switch off (Type A with 10 pole DIP switches).\n\n* `group` - (String) code of the switch group (refers to DIP switches 1, 2, 3, 4 and 5 where \"1\" = on and \"0\" = off - e.g. if all DIP switches are on it's \"11111\")\n* `switch` - (Number) switch number (can be 1 (if DIP switch A is on), 2 (if DIP switch B is on) and so on until 4)\n\nReturn true.\n\n### Type B\n\n![Type B switch](https://raw.github.com/marvinroger/node-rcswitch/master/img/type_b.jpg \"Type B switch\")\n\n#### rcswitch.switchOn(`group`, `switch`)\n\nSwitch a remote switch on (Type B with two rotary/sliding switches).\n\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n#### rcswitch.switchOff(`group`, `switch`)\n\nSwitch a remote switch off (Type B with two rotary/sliding switches).\n\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n### Type C\n\n#### rcswitch.switchOn(`family`, `group`, `switch`)\n\nSwitch a remote switch on (Type C Intertechno).\n\n* `family` - (String) familycode (can be a, b, c, d, e, f)\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n#### rcswitch.switchOff(`family`, `group`, `switch`)\n\nSwitch a remote switch off (Type C Intertechno).\n\n* `family` - (String) familycode (can be a, b, c, d, e, f)\n* `group` - (Number) group (can be 1, 2, 3, 4)\n* `switch` - (Number) switch (can be 1, 2, 3, 4)\n\nReturn true.\n\n### Other\n\n#### rcswitch.send(`code`)\n\nSend raw code.\n\n* `code` - (String) code\n\nReturn true.\n\n#### rcswitch.sendTriState(`code`)\n\nSend tri-state code.\n\n* `code` - (String) tri-state code\n\nReturn true.\n\nThis function is useful for eg. micro-electric AS 73 which is also sold as REV Telecontrol in Germany (Version with house code with 6 DIP switches).\n\nThis socket has 10 DIP-Switches.\n\nThe house code uses the first 6 switches, the receiver code is set by the next 4 switches. For the house code, the switch position OFF is represented by F and switch position ON by 0.\n\nReceiver codes:\n\nChannel\tSwitches 7-10\n* `0FFF` Channel A\n* `F0FF` Channel B\n* `FFF0` Channel C\n* `FF0F` Channel D\n\n* `FF` or `F0` Button on\n* `0F` Button off\n\nThe input string for the function is `[homecode][channel][on/off value]` \ne.g. F000000FFFFF for homecode 100000, Channel A and button on.\n","created":"2014-07-03T14:22:28.943Z","modified":"2016-01-30T11:56:51.220Z","lastPublisher":{"name":"marvinroger","email":"bonjourmarvin@marvinroger.fr"},"owners":[{"name":"marvinroger","email":"bonjourmarvin@marvinroger.fr"}],"other":{"_attachments":{},"_from":".","_id":"rcswitch","_nodeVersion":"5.4.1","_npmUser":{"name":"marvinroger","email":"bonjourmarvin@marvinroger.fr"},"_npmVersion":"3.3.12","_rev":"1-bb973d910d3e6aff0f5a51ca0a182831","_shasum":"cc918df9c53069ccd6432702e3a7088dcaa2c32f","author":{"name":"Marvin Roger","email":"bonjourmarvin@marvinroger.fr","url":"http://www.marvinroger.fr/"},"bugs":{"url":"https://github.com/marvinroger/node-rcswitch/issues"},"directories":{},"dist-tags":{"latest":"0.3.1"},"dist":{"shasum":"cc918df9c53069ccd6432702e3a7088dcaa2c32f","tarball":"http://registry.npmjs.org/rcswitch/-/rcswitch-0.3.1.tgz"},"maintainers":[{"name":"marvinroger","email":"bonjourmarvin@marvinroger.fr"}],"readmeFilename":"README.md","time":{"modified":"2016-01-30T11:56:51.220Z","created":"2014-07-03T14:22:28.943Z","0.0.1":"2014-07-03T14:22:28.943Z","0.0.2":"2014-07-03T14:47:14.059Z","0.0.3":"2014-07-03T18:13:30.394Z","0.0.4":"2014-07-03T19:12:56.620Z","0.0.5":"2014-07-03T19:31:57.057Z","0.1.0":"2015-02-28T17:33:01.344Z","0.2.0":"2015-09-05T13:20:55.366Z","0.2.1":"2015-09-05T16:37:50.418Z","0.2.2":"2015-09-05T16:39:30.271Z","0.2.3":"2015-09-09T19:00:04.233Z","0.3.0":"2016-01-10T20:49:02.251Z","0.3.1":"2016-01-30T11:56:51.220Z"}}}