{"version":"0.1.2","name":"bkjs-pgsql","description":"PostgreSQL driver for node.js and backendjs","main":"build/Release/binding","homepage":"https://github.com/vseryakov/backendjs","repository":"https://github.com/vseryakov/bkjs-pgsql","dependencies":{"nan":">= 2.0.9"},"engines":{"node":">= 0.10"},"license":"BSD-3-Clause","gypfile":true,"scripts":{"install":"node-gyp configure build"},"gitHead":"05fc3fbdb54cc4ea534a14d0ed47400d9d8abd90","versions":[{"number":"0.1.0","date":"2015-10-15T03:41:34.727Z"},{"number":"0.1.2","date":"2016-03-09T19:19:37.757Z"}],"readme":"# PostgreSQL module for node and backendjs\n\nSupports blocking and nonblocking mode, async mode of operations is the default.\n\nConvert JSON types, arrays and numbers into Javascript types, binary as Buffers, the rest as strings.\n\n# Usage\n\n```javascript\n  var pg = require(\"bkjs-pgsql\");\n\n  var db = new pg.Database(\"postgresql://postgres@127.0.0.1/backend\");\n  db.connect(function(err) {\n     if (err) return console.log(err);\n     client.setNotify(function(msg) { logger.log('pgsql: notify:', msg) });\n  });\n\n  db.query(\"select * from pg_stat_activity where state=$1\", [\"active\"], function(err, rows) {\n     console.log(err, rows);\n  });\n```\n\n## Database class\n- `new Database(url)` - create new database object, it is not connected yet\n- Properties:\n  - `open` - returns 1 if the db is open\n  - `name` - returns the db name\n  - `socket` - returns the TCP socket once connected\n  - `affected_rows` - returns number of rows affected by the last operation\n  - `inserted_oid` - last auto generated ID\n- Methods\n  - `connect([callback])` - connect to the server, if no callback is given an exception will be thrown on error\n  - `query(sql, [values], [callback])` - execute any SQL statement asynchronously, if a callback\n     is given it will be passed an array with result if exists, otherwise empty array\n  - `querySync(sql, [values])` - execute a SQL statement in blocking mode, returns array with result\n  - `close([callback])` - close the database, on completion call the callback if given\n  - `destroy()` - close the database, free memory, this object cannot be used anymore\n  - `reset()` - reset internal memory, free results, this is called before every query but in case of huge result\n     returned and processed to free memory this can be called manually.\n  - `setNonblocking(flag)` - enable or disable blocking behaviour, default is non-blocking\n  - `setNotify(callback)` - attach notification callback to be called on every NOTIFY message from the server\n\n# Author\n\nVlad Seryakov\n\n","created":"2015-10-15T03:41:34.727Z","modified":"2016-03-09T19:19:37.757Z","lastPublisher":{"name":"veryakov","email":"vseryakov@gmail.com"},"owners":[{"name":"veryakov","email":"vseryakov@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"bkjs-pgsql","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/bkjs-pgsql-0.1.2.tgz_1457551175097_0.555143132340163"},"_npmUser":{"name":"veryakov","email":"vseryakov@gmail.com"},"_npmVersion":"1.4.29","_rev":"1-e2336c9a3a86e0e3e6e76cbd8de6a785","_shasum":"7e37dc20acb486ecf76d90fbff4d010d68f876bd","author":{"name":"Vlad Seryakov"},"bugs":{"url":"https://github.com/vseryakov/bkjs-pgsql/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"7e37dc20acb486ecf76d90fbff4d010d68f876bd","tarball":"http://registry.npmjs.org/bkjs-pgsql/-/bkjs-pgsql-0.1.2.tgz"},"maintainers":[{"name":"veryakov","email":"vseryakov@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-09T19:19:37.757Z","created":"2015-10-15T03:41:34.727Z","0.1.0":"2015-10-15T03:41:34.727Z","0.1.2":"2016-03-09T19:19:37.757Z"}}}