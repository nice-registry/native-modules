{"name":"async_bench","version":"0.5.1","description":"The benchmark framework designed for node.js callbacks.","main":"index.js","scripts":{"test":"mocha --recursive test"},"repository":"https://github.com/mcollina/async_bench","keywords":["benchmark","bench","performance","async"],"license":"MIT","devDependencies":{"sinon-chai":"~2.4.0","sinon":"~1.7.3","chai":"~1.8.1","mocha":"~2.1.0"},"dependencies":{"microtime":"~2.0.0","atoll":"~0.7.3","async":"~1.4.2","nan":"~2.0.5"},"optionalDependencies":{"nan":"~2.0.5"},"gitHead":"ecae41138271756097d82be71a113fbc9dd7acda","homepage":"https://github.com/mcollina/async_bench#readme","versions":[{"number":"0.0.1","date":"2012-12-08T12:26:01.813Z"},{"number":"0.1.0","date":"2013-04-30T13:01:15.794Z"},{"number":"0.2.0","date":"2013-06-26T19:01:21.265Z"},{"number":"0.2.1","date":"2013-06-27T10:05:00.524Z"},{"number":"0.3.0","date":"2013-12-10T11:37:32.347Z"},{"number":"0.4.0","date":"2015-02-07T16:39:08.748Z"},{"number":"0.5.0","date":"2015-05-29T22:59:28.984Z"},{"number":"0.5.1","date":"2015-08-24T19:24:47.315Z"}],"readme":"async_bench\n=======\n[![Build\nStatus](https://travis-ci.org/mcollina/async_bench.png)](https://travis-ci.org/mcollina/async_bench)\n\nThe node.js benchmark framework designed around the node callback style.\n\n## Installation\n\n```\nnpm install async_bench --save\n```\n\n## Example\n\n```\nvar bench = require(\"async_bench\");\nvar crypto = require(\"crypto\");\nvar fs = require(\"fs\");\n\nbench({\n  runs: 10000,\n  preHeat: 10000,\n  setup: function(cb) {\n    fs.readFile(__filename, cb);\n  },\n  bench: function(data, cb) { \n    var shasum = crypto.createHash('sha1');\n    shasum.update(data);\n    var d = shasum.digest('hex');\n    cb();\n  },\n  complete: function(err, results) {\n    if (err)\n      throw err;\n\n    console.log(results);\n  }\n});\n\n```\n\n## Motives\n\nIn node, the most popular style for passing callback is:\n```\nmyAsyncFunction(function (err, arg1, arg2, ...) {\n  // do something\n});\n```\nWhere the first argument is the error.\n__async_bench__ is the first benchmark\nlibrary that adopted this style.\n\nIn __async_bench__ all steps are defined using this convention,\nand everything is run by the popular\n[async](https://github.com/caolan/async) library.\n\n## Contributing to async_bench\n\n* Check out the latest master to make sure the feature hasn't been\n  implemented or the bug hasn't been fixed yet\n* Check out the issue tracker to make sure someone already hasn't\n  requested it and/or contributed it\n* Fork the project\n* Start a feature/bugfix branch\n* Commit and push until you are happy with your contribution\n* Make sure to add tests for it. This is important so I don't break it\n  in a future version unintentionally.\n* Please try not to mess with the Makefile and package.json. If you\n  want to have your own version, or is otherwise necessary, that is\n  fine, but please isolate to its own commit so I can cherry-pick around\n  it.\n\n## LICENSE - \"MIT License\"\n\nCopyright (c) 2012-2013 Matteo Collina, http://matteocollina.com\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n","created":"2012-12-08T12:25:59.411Z","modified":"2015-08-24T19:24:47.315Z","lastPublisher":{"name":"matteo.collina","email":"hello@matteocollina.com"},"owners":[{"name":"matteo.collina","email":"hello@matteocollina.com"}],"other":{"_attachments":{},"_from":".","_id":"async_bench","_nodeVersion":"3.1.0","_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"_npmVersion":"2.13.3","_rev":"1-31c29787227339835b308308546fcc99","_shasum":"89b48a290e0f96711f9e57d84102e6763b684b5b","author":{"name":"Matteo Collina","email":"hello@matteocollina.com"},"bugs":{"url":"https://github.com/mcollina/async_bench/issues"},"directories":{},"dist-tags":{"latest":"0.5.1"},"dist":{"shasum":"89b48a290e0f96711f9e57d84102e6763b684b5b","tarball":"http://registry.npmjs.org/async_bench/-/async_bench-0.5.1.tgz"},"maintainers":[{"name":"matteo.collina","email":"hello@matteocollina.com"}],"readmeFilename":"README.md","time":{"modified":"2015-08-24T19:24:47.315Z","created":"2012-12-08T12:25:59.411Z","0.0.1":"2012-12-08T12:26:01.813Z","0.1.0":"2013-04-30T13:01:15.794Z","0.2.0":"2013-06-26T19:01:21.265Z","0.2.1":"2013-06-27T10:05:00.524Z","0.3.0":"2013-12-10T11:37:32.347Z","0.4.0":"2015-02-07T16:39:08.748Z","0.5.0":"2015-05-29T22:59:28.984Z","0.5.1":"2015-08-24T19:24:47.315Z"}}}