const packages = require('.')
const fs = require('fs')
const path = require('path')
const tableify = require('tableify')
const dedent = require('dedent')
const {chain} = require('lodash')
const {snakeCase} = require('change-case')
const MAX = 50
const criteria = fs.readFileSync(path.join(__dirname, 'lib/check-package.js'), 'utf8')

function pkgLink(pkg) {
  return `<a href="http://ghub.io/${pkg.name}">${pkg.name}</a>`
}

let datasets = {
  'top modules depending on `nan`, by dep count': {
    data: chain(packages)
      .filter(pkg => pkg.dependencies && pkg.dependencies.nan)
      .orderBy('dependentCounts.totalDirectDependents', 'desc')
      .slice(0, MAX)  
      .map(pkg => {
        return {
          name: pkgLink(pkg),
          description: pkg.description,
          deps: pkg.dependentCounts.totalDirectDependents
        }
      })
      .value()
  },

  'top modules depending on `nan`, by daily download count': {
    data: chain(packages)
      .filter(pkg => pkg.dependencies && pkg.dependencies.nan)
      .orderBy('averageDailyDownloads', 'desc')
      .slice(0, MAX)  
      .map(pkg => {
        return {
          name: pkgLink(pkg),
          description: pkg.description,
          downloads: pkg.averageDailyDownloads
        }
      })
      .value()
  }
}

// Add slugs
Object.keys(datasets).forEach(title => {
  datasets[title].slug = snakeCase(title)
})

console.log(dedent`<!-- auto-generated by render.js -->

# Native Modules

> a list of ${packages.length} JavaScript modules with C++ addons

Find more datasets like this at 
[nice-registry/about](https://github.com/nice-registry/about#datasets).

## How?

This list is created bu consuming the entire npm registry using 
[package-stream](http://ghub.io/package-stream), filtering out
packages that match certain criteria,
then adding [average daily downloads](http://ghub.io/download-counts) and 
[direct dependents](http://ghub.io/dependent-counts) counts.

The criteria:

\`\`\`js
${criteria}
\`\`\`

## Lists
`)

Object.keys(datasets).forEach(title => {
  const {slug} = datasets[title]
  console.log(`- [${title}](#${slug})`)
})

Object.keys(datasets).forEach(title => {
  const {data, slug} = datasets[title]
  console.log(`\n\n<h2 id="${slug}">${title}</h2>`)
  console.log(tableify(data))
})
